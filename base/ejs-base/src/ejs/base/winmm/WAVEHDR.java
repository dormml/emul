/*
  WAVEHDR.java

  (c) 2010-2013 Edward Swartz

  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html
 */
package ejs.base.winmm;

import com.sun.jna.Pointer;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class WAVEHDR extends Structure<WAVEHDR, WAVEHDR.ByValue, WAVEHDR.ByReference> {
	public Pointer lpData;
	public int dwBufferLength;
	public int dwBytesRecorded;
	public Pointer dwUser;
	public int dwFlags;
	public int dwLoops;
	/// C type : wavehdr_tag*
	public WAVEHDR.ByReference lpNext;
	public Pointer reserved;
	public WAVEHDR() {
		super();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected WAVEHDR newInstance() { return new WAVEHDR(); }
	public static WAVEHDR[] newArray(int arrayLength) {
		return Structure.newArray(WAVEHDR.class, arrayLength);
	}
	public static class ByReference extends WAVEHDR implements Structure.ByReference {}
	public static class ByValue extends WAVEHDR implements Structure.ByValue {}
}
