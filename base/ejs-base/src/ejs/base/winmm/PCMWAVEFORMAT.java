/*
  PCMWAVEFORMAT.java

  (c) 2010-2011 Edward Swartz

  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html
 */
package ejs.base.winmm;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class PCMWAVEFORMAT extends Structure<PCMWAVEFORMAT, PCMWAVEFORMAT.ByValue, PCMWAVEFORMAT.ByReference> {
	/// C type : WAVEFORMAT
	public ejs.base.winmm.WAVEFORMAT wf;
	public short wBitsPerSample;
	public PCMWAVEFORMAT() {
		super();
	}
	/// @param wf C type : WAVEFORMAT
	public PCMWAVEFORMAT(ejs.base.winmm.WAVEFORMAT wf, short wBitsPerSample) {
		super();
		this.wf = wf;
		this.wBitsPerSample = wBitsPerSample;
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected PCMWAVEFORMAT newInstance() { return new PCMWAVEFORMAT(); }
	public static PCMWAVEFORMAT[] newArray(int arrayLength) {
		return Structure.newArray(PCMWAVEFORMAT.class, arrayLength);
	}
	public static class ByReference extends PCMWAVEFORMAT implements Structure.ByReference {}
	public static class ByValue extends PCMWAVEFORMAT implements Structure.ByValue {}
}
