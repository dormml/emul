0406 cell
0410 cells
041C ;S
0424 @
042A c@
0432 d@
043A !
0440 c!
0448 d!
0450 +!
0458 c+!
0460 d+!
0468 1+
0470 2+
0478 1-
0480 2-
0488 dup
0490 drop
049A swap
04A4 over
04AE rot
04B6 0=
04BE D0=
04C6 =
04CC D=
04D4 0branch
04E0 branch
04EC negate
04F8 dnegate
0504 +
050A d+
0512 -
0518 d-
0520 um*
0528 um/mod
0534 invert
0540 not
0548 or
0550 and
0558 xor
0560 >r
0568 2>r
0570 r>
0578 2r>
0580 rdrop
058A r@
0592 i
0598 j
05A0 rp@
05AA rp!
05B4 (do)
05BE (loop)
05CA (+loop)
05D6 (u+loop)
05E4 (?do)
05F2 execute
05FE ?dup
0608 2dup
0612 (context>)
0622 (>context)
0632 (user)
063E 0<
0648 0<=
0652 0>
065C 0>=
0666 0U<
0670 0U<=
067C 0U>
0686 0U>=
0692 <
0698 <=
06A0 >
06A6 >=
06AE U<
06B6 U<=
06BE U>
06C6 U>=
06CE 0D<
06D8 0D<=
06E4 0D>
06EE 0D>=
06FA 0DU<
0706 0DU<=
0712 0DU>
071E 0DU>=
072A D<
0732 D<=
073A D>
0742 D>=
074A DU<
0752 DU<=
075C DU>
0764 DU>=
076E unloop
077A 2rdrop
0786 2/
078E 2*
0796 LSH
079E RSH
07A6 URSH
07B0 CSH
07B8 SWPB
07C4 DLSH
07CE DRSH
07D8 DURSH
07E2 DCSH
07EC *
07F4 2drop
07FE d>q
080A dum/mod
0816 s>d
0820 DOVAR
082C true
0836 false
0840 (fill)
084C (cfill)
0858 (move)
0864 (cmove)
0870 (LITERAL)
087E (DLITERAL)
088E ((s"))
08A4 (S")
08B0 I/O
08B2 VDPRD
08B4 VDPST
08B6 VDPWD
08BA VDPWA
08BE VDPCL
08C2 VDPWI
08C6 GPLRD
08CA GPLRA
08CE GPLWD
08D2 GPLWA
08D6 SPCHRD
08DA SPCHWT
08DE KBD
08E2 SOUND
08E6 'INTS
08EA 'INTSP
08EE M_INT_BKPT
08F0 M_INT_EXT
08F2 M_INT_VDP
08F4 M_INT_KBD
08F8 'KBD
08FC 'KBDA
0900 'DBG
0904 ROM
0908 (COLD)
090C DP0
0910 UP0
0914 SP0
0918 RP0
091C RamTop
0920 SysCalls
0924 IntVecs
0928 INT_RESET
092C INT_NMI
0930 INT_KBD
0932 INT_VDP
0934 INT_BKPT
0936 grom_kbdlist
0938 grom_font8x8
093C grom_font5x6
0940 CTX_SP
0942 CTX_RP
0944 CTX_UP
0946 CTX_INT
0948 dp
094C here
0952 ,
095C c,
0966 literal
0996 create
0998 :
099A ;
09A0 compile,
09AA s"
09B2 lastxt
09B6 xt!
09C0 (does>)
09C8 does>
09D8 ramptr
09DC RamVar
09EE state
09F2 vwaddr
0A00 gwaddr
0A0E graddr
0A1E g@
0A32 gc@
0A3E gvmove
0A5C >bit
0A7E UP
0A82 base
0A86 dp
0A8A here
0A8E decimal
0A94 hex
0A9A #ptr
0A9E pad
0AA4 #c
0AAE <#
0AB8 #>
0AC2 sign
0ACE digit
0ADC #
0AF2 #s
0AFC demit
0B02 dtype
0B18 d.d
0B26 .d
0B2C constant
0B2E VRegSave
0B40 w>b
0B4A write-vregaddr
0B62 get-vreg
0B68 LP
0B6C (>LOCALS)
0B76 (LOCALS>)
0B82 write-vregs
0BA0 vid-show
0BAE v-mode
0BB2 +field
0BB8 v-screen
0BBC v-screensz
0BC0 v-patts
0BC4 v-pattsz
0BC8 v-colors
0BCC v-colorsz
0BD0 v-sprites
0BD4 v-sprcol
0BD8 v-sprpat
0BDC v-sprmot
0BE0 v-free
0BE4 v-width
0BE8 v-height
0BEC v-coordaddr
0BF0 v-drawchar
0BF4 v-savechar
0BF8 v-restorechar
0BFC v-drawcursor
0C00 v-curs-under
0C04 v-curs
0C08 v-cursor-timer
0C0C v-cursor-blink
0C10 write-mode-params
0C20 switch-mode
0C2A v-cursor-on
0C48 v-cursor-off
0C62 update-cursor
0C80 txt-coordaddr
0C8E txt-waddr
0C96 txt-raddr
0C9C txt-drawchar
0CA2 txt-savechar
0CA8 txt-restorechar
0CB0 txt-drawcursor
0CB8 text-mode-params
0D04 TextModeRegs
0D10 text-mode
0D1E load-font
0D2C vfill
0D42 v-clear
0D58 video-init
0D68 vx
0D6C vy
0D70 win-x
0D74 win-y
0D78 win-sx
0D7C win-sy
0D80 term-reset
0DA4 curs-addr
0DBA advance-row
0DD2 advance-cursor
0DE4 cursor-off
0DEA crlf
0DEE bksp
0E16 cls
0E24 emit
0E4E cr
0E5A space
0E68 type
0E7E kbdbufsize
0E82 kbdbuf
0E94 kbdstate
0EA0 kbdtimer
0EA4 kbddelay
0EA8 kbdrate
0EAC kbdshift
0EB0 kbdscan
0EB4 kbdlast
0EB8 kbdflag
0EBC kbdtail
0EC0 kbdhead
0EC4 timeout
0EC8 randnoise
0ECC read-row
0ED6 toupper
0EE4 buffer-key
0F0E repeat-key
0F50 lookup-key
0F64 handle-key
0F92 key-actions
0FA8 kbd-scan
0FF4 kbd-no-key
100A kbd-init
1022 key?
1036 key
1058 ints-on
105C ints-off
1060 ints-check
1066 vdp-status
106A vdp-ticks
106E vdp-int-handler
109A kbd-int-handler
10B2 nmi-int-handler
10B6 >int-vec
10BC set-int-vec
10C0 enable-int
10D2 call-int
10DC ints-init
10F4 regs-init
1106 quit
111A abort
1132 cycle
1152 bootup
