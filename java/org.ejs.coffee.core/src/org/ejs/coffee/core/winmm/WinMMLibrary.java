package org.ejs.coffee.core.winmm;

import com.sun.jna.Callback;
import com.sun.jna.IntegerType;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.IntByReference;

/**
 * JNA Wrapper for library <b>org.ejs.coffee.core.winmm</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface WinMMLibrary extends com.sun.jna.Library {
	public static interface WaveOutOpenFunc extends Callback {
		    void invoke(int /*WAVEOUT*/ whandle, int uMsg,
		    		int dwUser, int dwParam1,
		    		int dwParam2);
	 }
	public static final WinMMLibrary INSTANCE = (WinMMLibrary)com.sun.jna.Native.loadLibrary(WinMMLibrary.JNA_LIBRARY_NAME, WinMMLibrary.class);
	public static final java.lang.String JNA_LIBRARY_NAME = "winmm";
	public static final com.sun.jna.NativeLibrary JNA_NATIVE_LIB = com.sun.jna.NativeLibrary.getInstance(WinMMLibrary.JNA_LIBRARY_NAME);

	
	public static final int AUXCAPS_AUXIN = 2;
	public static final int AUXCAPS_CDAUDIO = 1;
	public static final int AUXCAPS_LRVOLUME = 2;
	public static final int AUXCAPS_VOLUME = 1;
	public static final int C1_TRANSPARENT = 1;
	public static final int CALLBACK_EVENT = 327680;
	public static final int CALLBACK_FUNCTION = 196608;
	public static final int CALLBACK_NULL = 0;
	public static final int CALLBACK_TASK = 131072;
	public static final int CALLBACK_THREAD = WinMMLibrary.CALLBACK_TASK;
	public static final int CALLBACK_TYPEMASK = 458752;
	public static final int CALLBACK_WINDOW = 65536;
	public static final int CAPS1 = 94;
	public static final char CFSEPCHAR = '+';
	public static final int DRV_CANCEL = WinMMLibrary.DRVCNF_CANCEL;
	public static final int DRV_CLOSE = 4;
	public static final int DRV_CONFIGURE = 7;
	public static final int DRV_DISABLE = 5;
	public static final int DRV_ENABLE = 2;
	public static final int DRV_EXITSESSION = 11;
	public static final int DRV_FREE = 6;
	public static final int DRV_INSTALL = 9;
	public static final int DRV_LOAD = 1;
	public static final int DRV_MCI_FIRST = WinMMLibrary.DRV_RESERVED;
	public static final int DRV_MCI_LAST = (WinMMLibrary.DRV_RESERVED + 4095);
	public static final int DRV_OK = WinMMLibrary.DRVCNF_OK;
	public static final int DRV_OPEN = 3;
	public static final int DRV_POWER = 15;
	public static final int DRV_QUERYCONFIGURE = 8;
	public static final int DRV_REMOVE = 10;
	public static final int DRV_RESERVED = 2048;
	public static final int DRV_RESTART = WinMMLibrary.DRVCNF_RESTART;
	public static final int DRV_USER = 16384;
	public static final int DRVCNF_CANCEL = 0;
	public static final int DRVCNF_OK = 1;
	public static final int DRVCNF_RESTART = 2;
	public static final int JOY_BUTTON1 = 1;
	public static final int JOY_BUTTON10 = 512;
	public static final int JOY_BUTTON11 = 1024;
	public static final int JOY_BUTTON12 = 2048;
	public static final int JOY_BUTTON13 = 4096;
	public static final int JOY_BUTTON14 = 8192;
	public static final int JOY_BUTTON15 = 16384;
	public static final int JOY_BUTTON16 = 32768;
	public static final int JOY_BUTTON17 = 65536;
	public static final int JOY_BUTTON18 = 131072;
	public static final int JOY_BUTTON19 = 262144;
	public static final int JOY_BUTTON1CHG = 256;
	public static final int JOY_BUTTON2 = 2;
	public static final int JOY_BUTTON20 = 524288;
	public static final int JOY_BUTTON21 = 1048576;
	public static final int JOY_BUTTON22 = 2097152;
	public static final int JOY_BUTTON23 = 4194304;
	public static final int JOY_BUTTON24 = 8388608;
	public static final int JOY_BUTTON25 = 16777216;
	public static final int JOY_BUTTON26 = 33554432;
	public static final int JOY_BUTTON27 = 67108864;
	public static final int JOY_BUTTON28 = 134217728;
	public static final int JOY_BUTTON29 = 268435456;
	public static final int JOY_BUTTON2CHG = 512;
	public static final int JOY_BUTTON3 = 4;
	public static final int JOY_BUTTON30 = 536870912;
	public static final int JOY_BUTTON31 = 1073741824;
	public static final int JOY_BUTTON32 = -2147483648;
	public static final int JOY_BUTTON3CHG = 1024;
	public static final int JOY_BUTTON4 = 8;
	public static final int JOY_BUTTON4CHG = 2048;
	public static final int JOY_BUTTON5 = 257;
	public static final int JOY_BUTTON6 = 513;
	public static final int JOY_BUTTON7 = 1025;
	public static final int JOY_BUTTON8 = 2049;
	public static final int JOY_BUTTON9 = 256;
	public static final int JOY_CAL_READ3 = 262144;
	public static final int JOY_CAL_READ4 = 524288;
	public static final int JOY_CAL_READ5 = 4194304;
	public static final int JOY_CAL_READ6 = 8388608;
	public static final int JOY_CAL_READALWAYS = 65536;
	public static final int JOY_CAL_READRONLY = 33554432;
	public static final int JOY_CAL_READUONLY = 67108864;
	public static final int JOY_CAL_READVONLY = 134217728;
	public static final int JOY_CAL_READXONLY = 1048576;
	public static final int JOY_CAL_READXYONLY = 131072;
	public static final int JOY_CAL_READYONLY = 2097152;
	public static final int JOY_CAL_READZONLY = 16777216;
	public static final int JOY_POVBACKWARD = 18000;
	public static final short JOY_POVCENTERED = (-1);
	public static final int JOY_POVFORWARD = 0;
	public static final int JOY_POVLEFT = 27000;
	public static final int JOY_POVRIGHT = 9000;
	public static final int JOY_RETURNALL = (WinMMLibrary.JOY_RETURNX | WinMMLibrary.JOY_RETURNY | WinMMLibrary.JOY_RETURNZ | WinMMLibrary.JOY_RETURNR | WinMMLibrary.JOY_RETURNU | WinMMLibrary.JOY_RETURNV | WinMMLibrary.JOY_RETURNPOV | WinMMLibrary.JOY_RETURNBUTTONS);
	public static final int JOY_RETURNBUTTONS = 128;
	public static final int JOY_RETURNCENTERED = 1024;
	public static final int JOY_RETURNPOV = 64;
	public static final int JOY_RETURNPOVCTS = 512;
	public static final int JOY_RETURNR = 8;
	public static final int JOY_RETURNRAWDATA = 256;
	public static final int JOY_RETURNU = 16;
	public static final int JOY_RETURNV = 32;
	public static final int JOY_RETURNX = 1;
	public static final int JOY_RETURNY = 2;
	public static final int JOY_RETURNZ = 4;
	public static final int JOY_USEDEADZONE = 2048;
	public static final int JOYCAPS_HASPOV = 16;
	public static final int JOYCAPS_HASR = 2;
	public static final int JOYCAPS_HASU = 4;
	public static final int JOYCAPS_HASV = 8;
	public static final int JOYCAPS_HASZ = 1;
	public static final int JOYCAPS_POV4DIR = 32;
	public static final int JOYCAPS_POVCTS = 64;
	public static final int JOYERR_BASE = 160;
	public static final int JOYERR_NOCANDO = (WinMMLibrary.JOYERR_BASE + 6);
	public static final int JOYERR_NOERROR = (0);
	public static final int JOYERR_PARMS = (WinMMLibrary.JOYERR_BASE + 5);
	public static final int JOYERR_UNPLUGGED = (WinMMLibrary.JOYERR_BASE + 7);
	public static final int JOYSTICKID1 = 0;
	public static final int JOYSTICKID2 = 1;
	public static final int MAX_JOYSTICKOEMVXDNAME = 260;
	public static final int MAXERRORLENGTH = 256;
	public static final int MAXPNAMELEN = 32;
	public static final int MCI_ANIM_GETDEVCAPS_CAN_REVERSE = 16385;
	public static final int MCI_ANIM_GETDEVCAPS_CAN_STRETCH = 16391;
	public static final int MCI_ANIM_GETDEVCAPS_FAST_RATE = 16386;
	public static final int MCI_ANIM_GETDEVCAPS_MAX_WINDOWS = 16392;
	public static final int MCI_ANIM_GETDEVCAPS_NORMAL_RATE = 16388;
	public static final int MCI_ANIM_GETDEVCAPS_PALETTES = 16390;
	public static final int MCI_ANIM_GETDEVCAPS_SLOW_RATE = 16387;
	public static final int MCI_ANIM_INFO_TEXT = 65536;
	public static final int MCI_ANIM_OPEN_NOSTATIC = 262144;
	public static final int MCI_ANIM_OPEN_PARENT = 131072;
	public static final int MCI_ANIM_OPEN_WS = 65536;
	public static final int MCI_ANIM_PLAY_FAST = 262144;
	public static final int MCI_ANIM_PLAY_REVERSE = 131072;
	public static final int MCI_ANIM_PLAY_SCAN = 1048576;
	public static final int MCI_ANIM_PLAY_SLOW = 524288;
	public static final int MCI_ANIM_PLAY_SPEED = 65536;
	public static final int MCI_ANIM_PUT_DESTINATION = 262144;
	public static final int MCI_ANIM_PUT_SOURCE = 131072;
	public static final int MCI_ANIM_REALIZE_BKGD = 131072;
	public static final int MCI_ANIM_REALIZE_NORM = 65536;
	public static final int MCI_ANIM_RECT = 65536;
	public static final int MCI_ANIM_STATUS_FORWARD = 16386;
	public static final int MCI_ANIM_STATUS_HPAL = 16388;
	public static final int MCI_ANIM_STATUS_HWND = 16387;
	public static final int MCI_ANIM_STATUS_SPEED = 16385;
	public static final int MCI_ANIM_STATUS_STRETCH = 16389;
	public static final int MCI_ANIM_STEP_FRAMES = 131072;
	public static final int MCI_ANIM_STEP_REVERSE = 65536;
	public static final int MCI_ANIM_UPDATE_HDC = 131072;
	public static final int MCI_ANIM_WHERE_DESTINATION = 262144;
	public static final int MCI_ANIM_WHERE_SOURCE = 131072;
	public static final int MCI_ANIM_WINDOW_DISABLE_STRETCH = 2097152;
	public static final int MCI_ANIM_WINDOW_ENABLE_STRETCH = 1048576;
	public static final int MCI_ANIM_WINDOW_HWND = 65536;
	public static final int MCI_ANIM_WINDOW_STATE = 262144;
	public static final int MCI_ANIM_WINDOW_TEXT = 524288;
	public static final int MCI_BREAK = 2065;
	public static final int MCI_BREAK_HWND = 512;
	public static final int MCI_BREAK_KEY = 256;
	public static final int MCI_BREAK_OFF = 1024;
	public static final int MCI_CD_OFFSET = 1088;
	public static final int MCI_CDA_STATUS_TYPE_TRACK = 16385;
	public static final int MCI_CDA_TRACK_AUDIO = WinMMLibrary.MCI_CD_OFFSET;
	public static final int MCI_CDA_TRACK_OTHER = (WinMMLibrary.MCI_CD_OFFSET + 1);
	public static final int MCI_CLOSE = 2052;
	public static final int MCI_COPY = 2130;
	public static final int MCI_CUE = 2096;
	public static final int MCI_CUT = 2129;
	public static final int MCI_DELETE = 2134;
	public static final int MCI_DEVTYPE_ANIMATION = 519;
	public static final int MCI_DEVTYPE_CD_AUDIO = 516;
	public static final int MCI_DEVTYPE_DAT = 517;
	public static final int MCI_DEVTYPE_DIGITAL_VIDEO = 520;
	public static final int MCI_DEVTYPE_FIRST = WinMMLibrary.MCI_DEVTYPE_VCR;
	public static final int MCI_DEVTYPE_FIRST_USER = 4096;
	public static final int MCI_DEVTYPE_LAST = WinMMLibrary.MCI_DEVTYPE_SEQUENCER;
	public static final int MCI_DEVTYPE_OTHER = 521;
	public static final int MCI_DEVTYPE_OVERLAY = 515;
	public static final int MCI_DEVTYPE_SCANNER = 518;
	public static final int MCI_DEVTYPE_SEQUENCER = 523;
	public static final int MCI_DEVTYPE_VCR = 513;
	public static final int MCI_DEVTYPE_VIDEODISC = 514;
	public static final int MCI_DEVTYPE_WAVEFORM_AUDIO = 522;
	public static final int MCI_ESCAPE = 2053;
	public static final int MCI_FORMAT_BYTES = 8;
	public static final int MCI_FORMAT_FRAMES = 3;
	public static final int MCI_FORMAT_HMS = 1;
	public static final int MCI_FORMAT_MILLISECONDS = 0;
	public static final int MCI_FORMAT_MSF = 2;
	public static final int MCI_FORMAT_SAMPLES = 9;
	public static final int MCI_FORMAT_SMPTE_24 = 4;
	public static final int MCI_FORMAT_SMPTE_25 = 5;
	public static final int MCI_FORMAT_SMPTE_30 = 6;
	public static final int MCI_FORMAT_SMPTE_30DROP = 7;
	public static final int MCI_FORMAT_TMSF = 10;
	public static final int MCI_FREEZE = 2116;
	public static final int MCI_FROM = 4;
	public static final int MCI_GETDEVCAPS = 2059;
	public static final int MCI_GETDEVCAPS_CAN_EJECT = 7;
	public static final int MCI_GETDEVCAPS_CAN_PLAY = 8;
	public static final int MCI_GETDEVCAPS_CAN_RECORD = 1;
	public static final int MCI_GETDEVCAPS_CAN_SAVE = 9;
	public static final int MCI_GETDEVCAPS_COMPOUND_DEVICE = 6;
	public static final int MCI_GETDEVCAPS_DEVICE_TYPE = 4;
	public static final int MCI_GETDEVCAPS_HAS_AUDIO = 2;
	public static final int MCI_GETDEVCAPS_HAS_VIDEO = 3;
	public static final int MCI_GETDEVCAPS_ITEM = 256;
	public static final int MCI_GETDEVCAPS_USES_FILES = 5;
	public static final int MCI_INFO = 2058;
	public static final int MCI_INFO_COPYRIGHT = 8192;
	public static final int MCI_INFO_FILE = 512;
	public static final int MCI_INFO_MEDIA_IDENTITY = 2048;
	public static final int MCI_INFO_MEDIA_UPC = 1024;
	public static final int MCI_INFO_NAME = 4096;
	public static final int MCI_INFO_PRODUCT = 256;
	public static final int MCI_LAST = 4095;
	public static final int MCI_LOAD = 2128;
	public static final int MCI_LOAD_FILE = 256;
	public static final int MCI_MODE_NOT_READY = (WinMMLibrary.MCI_STRING_OFFSET + 12);
	public static final int MCI_MODE_OPEN = (WinMMLibrary.MCI_STRING_OFFSET + 18);
	public static final int MCI_MODE_PAUSE = (WinMMLibrary.MCI_STRING_OFFSET + 17);
	public static final int MCI_MODE_PLAY = (WinMMLibrary.MCI_STRING_OFFSET + 14);
	public static final int MCI_MODE_RECORD = (WinMMLibrary.MCI_STRING_OFFSET + 15);
	public static final int MCI_MODE_SEEK = (WinMMLibrary.MCI_STRING_OFFSET + 16);
	public static final int MCI_MODE_STOP = (WinMMLibrary.MCI_STRING_OFFSET + 13);
	public static final int MCI_NOTIFY = 1;
	public static final int MCI_NOTIFY_ABORTED = 4;
	public static final int MCI_NOTIFY_FAILURE = 8;
	public static final int MCI_NOTIFY_SUCCESSFUL = 1;
	public static final int MCI_NOTIFY_SUPERSEDED = 2;
	public static final int MCI_OPEN = 2051;
	public static final int MCI_OPEN_ALIAS = 1024;
	public static final int MCI_OPEN_ELEMENT = 512;
	public static final int MCI_OPEN_ELEMENT_ID = 2048;
	public static final int MCI_OPEN_SHAREABLE = 256;
	public static final int MCI_OPEN_TYPE = 8192;
	public static final int MCI_OPEN_TYPE_ID = 4096;
	public static final int MCI_OVLY_GETDEVCAPS_CAN_FREEZE = 16386;
	public static final int MCI_OVLY_GETDEVCAPS_CAN_STRETCH = 16385;
	public static final int MCI_OVLY_GETDEVCAPS_MAX_WINDOWS = 16387;
	public static final int MCI_OVLY_INFO_TEXT = 65536;
	public static final int MCI_OVLY_OPEN_PARENT = 131072;
	public static final int MCI_OVLY_OPEN_WS = 65536;
	public static final int MCI_OVLY_PUT_DESTINATION = 262144;
	public static final int MCI_OVLY_PUT_FRAME = 524288;
	public static final int MCI_OVLY_PUT_SOURCE = 131072;
	public static final int MCI_OVLY_PUT_VIDEO = 1048576;
	public static final int MCI_OVLY_RECT = 65536;
	public static final int MCI_OVLY_STATUS_HWND = 16385;
	public static final int MCI_OVLY_STATUS_STRETCH = 16386;
	public static final int MCI_OVLY_WHERE_DESTINATION = 262144;
	public static final int MCI_OVLY_WHERE_FRAME = 524288;
	public static final int MCI_OVLY_WHERE_SOURCE = 131072;
	public static final int MCI_OVLY_WHERE_VIDEO = 1048576;
	public static final int MCI_OVLY_WINDOW_DISABLE_STRETCH = 2097152;
	public static final int MCI_OVLY_WINDOW_ENABLE_STRETCH = 1048576;
	public static final int MCI_OVLY_WINDOW_HWND = 65536;
	public static final int MCI_OVLY_WINDOW_STATE = 262144;
	public static final int MCI_OVLY_WINDOW_TEXT = 524288;
	public static final int MCI_PASTE = 2131;
	public static final int MCI_PAUSE = 2057;
	public static final int MCI_PLAY = 2054;
	public static final int MCI_PUT = 2114;
	public static final int MCI_REALIZE = 2112;
	public static final int MCI_RECORD = 2063;
	public static final int MCI_RECORD_INSERT = 256;
	public static final int MCI_RECORD_OVERWRITE = 512;
	public static final int MCI_RESUME = 2133;
	public static final int MCI_SAVE = 2067;
	public static final int MCI_SAVE_FILE = 256;
	public static final int MCI_SEEK = 2055;
	public static final int MCI_SEEK_TO_END = 512;
	public static final int MCI_SEEK_TO_START = 256;
	public static final int MCI_SEQ_DIV_PPQN = WinMMLibrary.MCI_SEQ_OFFSET;
	public static final int MCI_SEQ_DIV_SMPTE_24 = (WinMMLibrary.MCI_SEQ_OFFSET + 1);
	public static final int MCI_SEQ_DIV_SMPTE_25 = (WinMMLibrary.MCI_SEQ_OFFSET + 2);
	public static final int MCI_SEQ_DIV_SMPTE_30 = (WinMMLibrary.MCI_SEQ_OFFSET + 4);
	public static final int MCI_SEQ_DIV_SMPTE_30DROP = (WinMMLibrary.MCI_SEQ_OFFSET + 3);
	public static final int MCI_SEQ_FILE = 16386;
	public static final int MCI_SEQ_FORMAT_SONGPTR = 16385;
	public static final int MCI_SEQ_MAPPER = 65535;
	public static final int MCI_SEQ_MIDI = 16387;
	public static final int MCI_SEQ_NONE = 65533;
	public static final int MCI_SEQ_OFFSET = 1216;
	public static final int MCI_SEQ_SET_MASTER = 524288;
	public static final int MCI_SEQ_SET_OFFSET = 16777216;
	public static final int MCI_SEQ_SET_PORT = 131072;
	public static final int MCI_SEQ_SET_SLAVE = 262144;
	public static final int MCI_SEQ_SET_TEMPO = 65536;
	public static final int MCI_SEQ_SMPTE = 16388;
	public static final int MCI_SEQ_STATUS_COPYRIGHT = 16396;
	public static final int MCI_SEQ_STATUS_DIVTYPE = 16394;
	public static final int MCI_SEQ_STATUS_MASTER = 16392;
	public static final int MCI_SEQ_STATUS_NAME = 16395;
	public static final int MCI_SEQ_STATUS_OFFSET = 16393;
	public static final int MCI_SEQ_STATUS_PORT = 16387;
	public static final int MCI_SEQ_STATUS_SLAVE = 16391;
	public static final int MCI_SEQ_STATUS_TEMPO = 16386;
	public static final int MCI_SET = 2061;
	public static final int MCI_SET_AUDIO = 2048;
	public static final int MCI_SET_AUDIO_ALL = 0;
	public static final int MCI_SET_AUDIO_LEFT = 1;
	public static final int MCI_SET_AUDIO_RIGHT = 2;
	public static final int MCI_SET_DOOR_CLOSED = 512;
	public static final int MCI_SET_DOOR_OPEN = 256;
	public static final int MCI_SET_OFF = 16384;
	public static final int MCI_SET_ON = 8192;
	public static final int MCI_SET_TIME_FORMAT = 1024;
	public static final int MCI_SET_VIDEO = 4096;
	public static final int MCI_SPIN = 2060;
	public static final int MCI_STATUS = 2068;
	public static final int MCI_STATUS_CURRENT_TRACK = 8;
	public static final int MCI_STATUS_ITEM = 256;
	public static final int MCI_STATUS_LENGTH = 1;
	public static final int MCI_STATUS_MEDIA_PRESENT = 5;
	public static final int MCI_STATUS_MODE = 4;
	public static final int MCI_STATUS_NUMBER_OF_TRACKS = 3;
	public static final int MCI_STATUS_POSITION = 2;
	public static final int MCI_STATUS_READY = 7;
	public static final int MCI_STATUS_START = 512;
	public static final int MCI_STATUS_TIME_FORMAT = 6;
	public static final int MCI_STEP = 2062;
	public static final int MCI_STOP = 2056;
	public static final int MCI_STRING_OFFSET = 512;
	public static final int MCI_SYSINFO = 2064;
	public static final int MCI_SYSINFO_INSTALLNAME = 2048;
	public static final int MCI_SYSINFO_NAME = 1024;
	public static final int MCI_SYSINFO_OPEN = 512;
	public static final int MCI_SYSINFO_QUANTITY = 256;
	public static final int MCI_TO = 8;
	public static final int MCI_TRACK = 16;
	public static final int MCI_UNFREEZE = 2117;
	public static final int MCI_UPDATE = 2132;
	public static final int MCI_VD_ESCAPE_STRING = 256;
	public static final int MCI_VD_FORMAT_TRACK = 16385;
	public static final int MCI_VD_GETDEVCAPS_CAN_REVERSE = 16386;
	public static final int MCI_VD_GETDEVCAPS_CAV = 131072;
	public static final int MCI_VD_GETDEVCAPS_CLV = 65536;
	public static final int MCI_VD_GETDEVCAPS_FAST_RATE = 16387;
	public static final int MCI_VD_GETDEVCAPS_NORMAL_RATE = 16389;
	public static final int MCI_VD_GETDEVCAPS_SLOW_RATE = 16388;
	public static final int MCI_VD_MEDIA_CAV = (WinMMLibrary.MCI_VD_OFFSET + 3);
	public static final int MCI_VD_MEDIA_CLV = (WinMMLibrary.MCI_VD_OFFSET + 2);
	public static final int MCI_VD_MEDIA_OTHER = (WinMMLibrary.MCI_VD_OFFSET + 4);
	public static final int MCI_VD_MODE_PARK = (WinMMLibrary.MCI_VD_OFFSET + 1);
	public static final int MCI_VD_OFFSET = 1024;
	public static final int MCI_VD_PLAY_FAST = 131072;
	public static final int MCI_VD_PLAY_REVERSE = 65536;
	public static final int MCI_VD_PLAY_SCAN = 524288;
	public static final int MCI_VD_PLAY_SLOW = 1048576;
	public static final int MCI_VD_PLAY_SPEED = 262144;
	public static final int MCI_VD_SEEK_REVERSE = 65536;
	public static final int MCI_VD_SPIN_DOWN = 131072;
	public static final int MCI_VD_SPIN_UP = 65536;
	public static final int MCI_VD_STATUS_DISC_SIZE = 16390;
	public static final int MCI_VD_STATUS_FORWARD = 16387;
	public static final int MCI_VD_STATUS_MEDIA_TYPE = 16388;
	public static final int MCI_VD_STATUS_SIDE = 16389;
	public static final int MCI_VD_STATUS_SPEED = 16386;
	public static final int MCI_VD_STEP_FRAMES = 65536;
	public static final int MCI_VD_STEP_REVERSE = 131072;
	public static final int MCI_WAIT = 2;
	public static final int MCI_WAVE_GETDEVCAPS_INPUTS = 16385;
	public static final int MCI_WAVE_GETDEVCAPS_OUTPUTS = 16386;
	public static final int MCI_WAVE_INPUT = 4194304;
	public static final int MCI_WAVE_MAPPER = (WinMMLibrary.MCI_WAVE_OFFSET + 1);
	public static final int MCI_WAVE_OFFSET = 1152;
	public static final int MCI_WAVE_OPEN_BUFFER = 65536;
	public static final int MCI_WAVE_OUTPUT = 8388608;
	public static final int MCI_WAVE_PCM = WinMMLibrary.MCI_WAVE_OFFSET;
	public static final int MCI_WAVE_SET_ANYINPUT = 67108864;
	public static final int MCI_WAVE_SET_ANYOUTPUT = 134217728;
	public static final int MCI_WAVE_SET_AVGBYTESPERSEC = 524288;
	public static final int MCI_WAVE_SET_BITSPERSAMPLE = 2097152;
	public static final int MCI_WAVE_SET_BLOCKALIGN = 1048576;
	public static final int MCI_WAVE_SET_CHANNELS = 131072;
	public static final int MCI_WAVE_SET_FORMATTAG = 65536;
	public static final int MCI_WAVE_SET_SAMPLESPERSEC = 262144;
	public static final int MCI_WAVE_STATUS_AVGBYTESPERSEC = 16388;
	public static final int MCI_WAVE_STATUS_BITSPERSAMPLE = 16390;
	public static final int MCI_WAVE_STATUS_BLOCKALIGN = 16389;
	public static final int MCI_WAVE_STATUS_CHANNELS = 16386;
	public static final int MCI_WAVE_STATUS_FORMATTAG = 16385;
	public static final int MCI_WAVE_STATUS_LEVEL = 16391;
	public static final int MCI_WAVE_STATUS_SAMPLESPERSEC = 16387;
	public static final int MCI_WHERE = 2115;
	public static final int MCI_WINDOW = 2113;
	public static final int MCIERR_BAD_CONSTANT = (WinMMLibrary.MCIERR_BASE + 34);
	public static final int MCIERR_BAD_INTEGER = (WinMMLibrary.MCIERR_BASE + 14);
	public static final int MCIERR_BAD_TIME_FORMAT = (WinMMLibrary.MCIERR_BASE + 37);
	public static final int MCIERR_BASE = 256;
	public static final int MCIERR_CANNOT_LOAD_DRIVER = (WinMMLibrary.MCIERR_BASE + 10);
	public static final int MCIERR_CANNOT_USE_ALL = (WinMMLibrary.MCIERR_BASE + 23);
	public static final int MCIERR_CREATEWINDOW = (WinMMLibrary.MCIERR_BASE + 91);
	public static final int MCIERR_CUSTOM_DRIVER_BASE = (WinMMLibrary.MCIERR_BASE + 256);
	public static final int MCIERR_DEVICE_LENGTH = (WinMMLibrary.MCIERR_BASE + 54);
	public static final int MCIERR_DEVICE_LOCKED = (WinMMLibrary.MCIERR_BASE + 32);
	public static final int MCIERR_DEVICE_NOT_INSTALLED = (WinMMLibrary.MCIERR_BASE + 50);
	public static final int MCIERR_DEVICE_NOT_READY = (WinMMLibrary.MCIERR_BASE + 20);
	public static final int MCIERR_DEVICE_OPEN = (WinMMLibrary.MCIERR_BASE + 9);
	public static final int MCIERR_DEVICE_ORD_LENGTH = (WinMMLibrary.MCIERR_BASE + 55);
	public static final int MCIERR_DEVICE_TYPE_REQUIRED = (WinMMLibrary.MCIERR_BASE + 31);
	public static final int MCIERR_DRIVER = (WinMMLibrary.MCIERR_BASE + 22);
	public static final int MCIERR_DRIVER_INTERNAL = (WinMMLibrary.MCIERR_BASE + 16);
	public static final int MCIERR_DUPLICATE_ALIAS = (WinMMLibrary.MCIERR_BASE + 33);
	public static final int MCIERR_DUPLICATE_FLAGS = (WinMMLibrary.MCIERR_BASE + 39);
	public static final int MCIERR_EXTENSION_NOT_FOUND = (WinMMLibrary.MCIERR_BASE + 25);
	public static final int MCIERR_EXTRA_CHARACTERS = (WinMMLibrary.MCIERR_BASE + 49);
	public static final int MCIERR_FILE_NOT_FOUND = (WinMMLibrary.MCIERR_BASE + 19);
	public static final int MCIERR_FILE_NOT_SAVED = (WinMMLibrary.MCIERR_BASE + 30);
	public static final int MCIERR_FILE_READ = (WinMMLibrary.MCIERR_BASE + 92);
	public static final int MCIERR_FILE_WRITE = (WinMMLibrary.MCIERR_BASE + 93);
	public static final int MCIERR_FILENAME_REQUIRED = (WinMMLibrary.MCIERR_BASE + 48);
	public static final int MCIERR_FLAGS_NOT_COMPATIBLE = (WinMMLibrary.MCIERR_BASE + 28);
	public static final int MCIERR_GET_CD = (WinMMLibrary.MCIERR_BASE + 51);
	public static final int MCIERR_HARDWARE = (WinMMLibrary.MCIERR_BASE + 6);
	public static final int MCIERR_ILLEGAL_FOR_AUTO_OPEN = (WinMMLibrary.MCIERR_BASE + 47);
	public static final int MCIERR_INTERNAL = (WinMMLibrary.MCIERR_BASE + 21);
	public static final int MCIERR_INVALID_DEVICE_ID = (WinMMLibrary.MCIERR_BASE + 1);
	public static final int MCIERR_INVALID_DEVICE_NAME = (WinMMLibrary.MCIERR_BASE + 7);
	public static final int MCIERR_INVALID_FILE = (WinMMLibrary.MCIERR_BASE + 40);
	public static final int MCIERR_MISSING_COMMAND_STRING = (WinMMLibrary.MCIERR_BASE + 11);
	public static final int MCIERR_MISSING_DEVICE_NAME = (WinMMLibrary.MCIERR_BASE + 36);
	public static final int MCIERR_MISSING_PARAMETER = (WinMMLibrary.MCIERR_BASE + 17);
	public static final int MCIERR_MISSING_STRING_ARGUMENT = (WinMMLibrary.MCIERR_BASE + 13);
	public static final int MCIERR_MULTIPLE = (WinMMLibrary.MCIERR_BASE + 24);
	public static final int MCIERR_MUST_USE_SHAREABLE = (WinMMLibrary.MCIERR_BASE + 35);
	public static final int MCIERR_NEW_REQUIRES_ALIAS = (WinMMLibrary.MCIERR_BASE + 43);
	public static final int MCIERR_NO_CLOSING_QUOTE = (WinMMLibrary.MCIERR_BASE + 38);
	public static final int MCIERR_NO_ELEMENT_ALLOWED = (WinMMLibrary.MCIERR_BASE + 45);
	public static final int MCIERR_NO_IDENTITY = (WinMMLibrary.MCIERR_BASE + 94);
	public static final int MCIERR_NO_INTEGER = (WinMMLibrary.MCIERR_BASE + 56);
	public static final int MCIERR_NO_WINDOW = (WinMMLibrary.MCIERR_BASE + 90);
	public static final int MCIERR_NONAPPLICABLE_FUNCTION = (WinMMLibrary.MCIERR_BASE + 46);
	public static final int MCIERR_NOTIFY_ON_AUTO_OPEN = (WinMMLibrary.MCIERR_BASE + 44);
	public static final int MCIERR_NULL_PARAMETER_BLOCK = (WinMMLibrary.MCIERR_BASE + 41);
	public static final int MCIERR_OUT_OF_MEMORY = (WinMMLibrary.MCIERR_BASE + 8);
	public static final int MCIERR_OUTOFRANGE = (WinMMLibrary.MCIERR_BASE + 26);
	public static final int MCIERR_PARAM_OVERFLOW = (WinMMLibrary.MCIERR_BASE + 12);
	public static final int MCIERR_PARSER_INTERNAL = (WinMMLibrary.MCIERR_BASE + 15);
	public static final int MCIERR_SEQ_DIV_INCOMPATIBLE = (WinMMLibrary.MCIERR_BASE + 80);
	public static final int MCIERR_SEQ_NOMIDIPRESENT = (WinMMLibrary.MCIERR_BASE + 87);
	public static final int MCIERR_SEQ_PORT_INUSE = (WinMMLibrary.MCIERR_BASE + 81);
	public static final int MCIERR_SEQ_PORT_MAPNODEVICE = (WinMMLibrary.MCIERR_BASE + 83);
	public static final int MCIERR_SEQ_PORT_MISCERROR = (WinMMLibrary.MCIERR_BASE + 84);
	public static final int MCIERR_SEQ_PORT_NONEXISTENT = (WinMMLibrary.MCIERR_BASE + 82);
	public static final int MCIERR_SEQ_PORTUNSPECIFIED = (WinMMLibrary.MCIERR_BASE + 86);
	public static final int MCIERR_SEQ_TIMER = (WinMMLibrary.MCIERR_BASE + 85);
	public static final int MCIERR_SET_CD = (WinMMLibrary.MCIERR_BASE + 52);
	public static final int MCIERR_SET_DRIVE = (WinMMLibrary.MCIERR_BASE + 53);
	public static final int MCIERR_UNNAMED_RESOURCE = (WinMMLibrary.MCIERR_BASE + 42);
	public static final int MCIERR_UNRECOGNIZED_COMMAND = (WinMMLibrary.MCIERR_BASE + 5);
	public static final int MCIERR_UNRECOGNIZED_KEYWORD = (WinMMLibrary.MCIERR_BASE + 3);
	public static final int MCIERR_UNSUPPORTED_FUNCTION = (WinMMLibrary.MCIERR_BASE + 18);
	public static final int MCIERR_WAVE_INPUTSINUSE = (WinMMLibrary.MCIERR_BASE + 66);
	public static final int MCIERR_WAVE_INPUTSUNSUITABLE = (WinMMLibrary.MCIERR_BASE + 72);
	public static final int MCIERR_WAVE_INPUTUNSPECIFIED = (WinMMLibrary.MCIERR_BASE + 69);
	public static final int MCIERR_WAVE_OUTPUTSINUSE = (WinMMLibrary.MCIERR_BASE + 64);
	public static final int MCIERR_WAVE_OUTPUTSUNSUITABLE = (WinMMLibrary.MCIERR_BASE + 70);
	public static final int MCIERR_WAVE_OUTPUTUNSPECIFIED = (WinMMLibrary.MCIERR_BASE + 68);
	public static final int MCIERR_WAVE_SETINPUTINUSE = (WinMMLibrary.MCIERR_BASE + 67);
	public static final int MCIERR_WAVE_SETINPUTUNSUITABLE = (WinMMLibrary.MCIERR_BASE + 73);
	public static final int MCIERR_WAVE_SETOUTPUTINUSE = (WinMMLibrary.MCIERR_BASE + 65);
	public static final int MCIERR_WAVE_SETOUTPUTUNSUITABLE = (WinMMLibrary.MCIERR_BASE + 71);
	public static final byte MEVT_COMMENT = (byte) (130);
	public static final int MEVT_F_CALLBACK = 1073741824;
	public static final int MEVT_F_LONG = -2147483648;
	public static final int MEVT_F_SHORT = 0;
	public static final byte MEVT_LONGMSG = (byte) (128);
	public static final int MEVT_NOP = 2;
	public static final int MEVT_SHORTMSG = 0;
	public static final int MEVT_TEMPO = 1;
	public static final byte MEVT_VERSION = (byte) (132);
	public static final int MHDR_DONE = 1;
	public static final int MHDR_INQUEUE = 4;
	public static final int MHDR_ISSTRM = 8;
	public static final int MHDR_PREPARED = 2;
	public static final int MIDI_CACHE_ALL = 1;
	public static final int MIDI_CACHE_BESTFIT = 2;
	public static final int MIDI_CACHE_QUERY = 3;
	public static final int MIDI_IO_STATUS = 32;
	public static final int MIDI_UNCACHE = 4;
	public static final int MIDICAPS_CACHE = 4;
	public static final int MIDICAPS_LRVOLUME = 2;
	public static final int MIDICAPS_STREAM = 8;
	public static final int MIDICAPS_VOLUME = 1;
	public static final int MIDIERR_BADOPENMODE = (WinMMLibrary.MIDIERR_BASE + 6);
	public static final int MIDIERR_BASE = 64;
	public static final int MIDIERR_DONT_CONTINUE = (WinMMLibrary.MIDIERR_BASE + 7);
	public static final int MIDIERR_INVALIDSETUP = (WinMMLibrary.MIDIERR_BASE + 5);
	public static final int MIDIERR_LASTERROR = (WinMMLibrary.MIDIERR_BASE + 7);
	public static final int MIDIERR_NODEVICE = (WinMMLibrary.MIDIERR_BASE + 4);
	public static final int MIDIERR_NOMAP = (WinMMLibrary.MIDIERR_BASE + 2);
	public static final int MIDIERR_NOTREADY = (WinMMLibrary.MIDIERR_BASE + 3);
	public static final int MIDIERR_STILLPLAYING = (WinMMLibrary.MIDIERR_BASE + 1);
	public static final int MIDIERR_UNPREPARED = WinMMLibrary.MIDIERR_BASE;
	public static final int MIDIPATCHSIZE = 128;
	public static final int MIDIPROP_GET = 1073741824;
	public static final int MIDIPROP_SET = -2147483648;
	public static final int MIDIPROP_TEMPO = 2;
	public static final int MIDIPROP_TIMEDIV = 1;
	public static final int MIDISTRM_ERROR = (-2);
	public static final int MIM_CLOSE = WinMMLibrary.MM_MIM_CLOSE;
	public static final int MIM_DATA = WinMMLibrary.MM_MIM_DATA;
	public static final int MIM_ERROR = WinMMLibrary.MM_MIM_ERROR;
	public static final int MIM_LONGDATA = WinMMLibrary.MM_MIM_LONGDATA;
	public static final int MIM_LONGERROR = WinMMLibrary.MM_MIM_LONGERROR;
	public static final int MIM_MOREDATA = WinMMLibrary.MM_MIM_MOREDATA;
	public static final int MIM_OPEN = WinMMLibrary.MM_MIM_OPEN;
	public static final int MIXER_GETCONTROLDETAILSF_LISTTEXT = 1;
	public static final int MIXER_GETCONTROLDETAILSF_QUERYMASK = 15;
	public static final int MIXER_GETCONTROLDETAILSF_VALUE = 0;
	public static final int MIXER_GETLINECONTROLSF_ALL = 0;
	public static final int MIXER_GETLINECONTROLSF_ONEBYID = 1;
	public static final int MIXER_GETLINECONTROLSF_ONEBYTYPE = 2;
	public static final int MIXER_GETLINECONTROLSF_QUERYMASK = 15;
	public static final int MIXER_GETLINEINFOF_COMPONENTTYPE = 3;
	public static final int MIXER_GETLINEINFOF_DESTINATION = 0;
	public static final int MIXER_GETLINEINFOF_LINEID = 2;
	public static final int MIXER_GETLINEINFOF_QUERYMASK = 15;
	public static final int MIXER_GETLINEINFOF_SOURCE = 1;
	public static final int MIXER_GETLINEINFOF_TARGETTYPE = 4;
	public static final int MIXER_LONG_NAME_CHARS = 64;
	public static final int MIXER_OBJECTF_AUX = 1342177280;
	public static final int MIXER_OBJECTF_HANDLE = -2147483648;
	public static final int MIXER_OBJECTF_HMIDIIN = (WinMMLibrary.MIXER_OBJECTF_HANDLE | WinMMLibrary.MIXER_OBJECTF_MIDIIN);
	public static final int MIXER_OBJECTF_HMIDIOUT = (WinMMLibrary.MIXER_OBJECTF_HANDLE | WinMMLibrary.MIXER_OBJECTF_MIDIOUT);
	public static final int MIXER_OBJECTF_HMIXER = (WinMMLibrary.MIXER_OBJECTF_HANDLE | WinMMLibrary.MIXER_OBJECTF_MIXER);
	public static final int MIXER_OBJECTF_HWAVEIN = (WinMMLibrary.MIXER_OBJECTF_HANDLE | WinMMLibrary.MIXER_OBJECTF_WAVEIN);
	public static final int MIXER_OBJECTF_HWAVEOUT = (WinMMLibrary.MIXER_OBJECTF_HANDLE | WinMMLibrary.MIXER_OBJECTF_WAVEOUT);
	public static final int MIXER_OBJECTF_MIDIIN = 1073741824;
	public static final int MIXER_OBJECTF_MIDIOUT = 805306368;
	public static final int MIXER_OBJECTF_MIXER = 0;
	public static final int MIXER_OBJECTF_WAVEIN = 536870912;
	public static final int MIXER_OBJECTF_WAVEOUT = 268435456;
	public static final int MIXER_SETCONTROLDETAILSF_CUSTOM = 1;
	public static final int MIXER_SETCONTROLDETAILSF_QUERYMASK = 15;
	public static final int MIXER_SETCONTROLDETAILSF_VALUE = 0;
	public static final int MIXER_SHORT_NAME_CHARS = 16;
	public static final int MIXERCONTROL_CONTROLF_DISABLED = -2147483648;
	public static final int MIXERCONTROL_CONTROLF_MULTIPLE = 2;
	public static final int MIXERCONTROL_CONTROLF_UNIFORM = 1;
	public static final int MIXERCONTROL_CONTROLTYPE_BOOLEAN = (WinMMLibrary.MIXERCONTROL_CT_CLASS_SWITCH | WinMMLibrary.MIXERCONTROL_CT_SC_SWITCH_BOOLEAN | WinMMLibrary.MIXERCONTROL_CT_UNITS_BOOLEAN);
	public static final int MIXERCONTROL_CONTROLTYPE_BOOLEANMETER = (WinMMLibrary.MIXERCONTROL_CT_CLASS_METER | WinMMLibrary.MIXERCONTROL_CT_SC_METER_POLLED | WinMMLibrary.MIXERCONTROL_CT_UNITS_BOOLEAN);
	public static final int MIXERCONTROL_CONTROLTYPE_BUTTON = (WinMMLibrary.MIXERCONTROL_CT_CLASS_SWITCH | WinMMLibrary.MIXERCONTROL_CT_SC_SWITCH_BUTTON | WinMMLibrary.MIXERCONTROL_CT_UNITS_BOOLEAN);
	public static final int MIXERCONTROL_CONTROLTYPE_CUSTOM = (WinMMLibrary.MIXERCONTROL_CT_CLASS_CUSTOM | WinMMLibrary.MIXERCONTROL_CT_UNITS_CUSTOM);
	public static final int MIXERCONTROL_CONTROLTYPE_DECIBELS = (WinMMLibrary.MIXERCONTROL_CT_CLASS_NUMBER | WinMMLibrary.MIXERCONTROL_CT_UNITS_DECIBELS);
	public static final int MIXERCONTROL_CONTROLTYPE_FADER = (WinMMLibrary.MIXERCONTROL_CT_CLASS_FADER | WinMMLibrary.MIXERCONTROL_CT_UNITS_UNSIGNED);
	public static final int MIXERCONTROL_CONTROLTYPE_MICROTIME = (WinMMLibrary.MIXERCONTROL_CT_CLASS_TIME | WinMMLibrary.MIXERCONTROL_CT_SC_TIME_MICROSECS | WinMMLibrary.MIXERCONTROL_CT_UNITS_UNSIGNED);
	public static final int MIXERCONTROL_CONTROLTYPE_MILLITIME = (WinMMLibrary.MIXERCONTROL_CT_CLASS_TIME | WinMMLibrary.MIXERCONTROL_CT_SC_TIME_MILLISECS | WinMMLibrary.MIXERCONTROL_CT_UNITS_UNSIGNED);
	public static final int MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT = (WinMMLibrary.MIXERCONTROL_CT_CLASS_LIST | WinMMLibrary.MIXERCONTROL_CT_SC_LIST_MULTIPLE | WinMMLibrary.MIXERCONTROL_CT_UNITS_BOOLEAN);
	public static final int MIXERCONTROL_CONTROLTYPE_PERCENT = (WinMMLibrary.MIXERCONTROL_CT_CLASS_NUMBER | WinMMLibrary.MIXERCONTROL_CT_UNITS_PERCENT);
	public static final int MIXERCONTROL_CONTROLTYPE_SIGNED = (WinMMLibrary.MIXERCONTROL_CT_CLASS_NUMBER | WinMMLibrary.MIXERCONTROL_CT_UNITS_SIGNED);
	public static final int MIXERCONTROL_CONTROLTYPE_SIGNEDMETER = (WinMMLibrary.MIXERCONTROL_CT_CLASS_METER | WinMMLibrary.MIXERCONTROL_CT_SC_METER_POLLED | WinMMLibrary.MIXERCONTROL_CT_UNITS_SIGNED);
	public static final int MIXERCONTROL_CONTROLTYPE_SINGLESELECT = (WinMMLibrary.MIXERCONTROL_CT_CLASS_LIST | WinMMLibrary.MIXERCONTROL_CT_SC_LIST_SINGLE | WinMMLibrary.MIXERCONTROL_CT_UNITS_BOOLEAN);
	public static final int MIXERCONTROL_CONTROLTYPE_SLIDER = (WinMMLibrary.MIXERCONTROL_CT_CLASS_SLIDER | WinMMLibrary.MIXERCONTROL_CT_UNITS_SIGNED);
	public static final int MIXERCONTROL_CONTROLTYPE_UNSIGNED = (WinMMLibrary.MIXERCONTROL_CT_CLASS_NUMBER | WinMMLibrary.MIXERCONTROL_CT_UNITS_UNSIGNED);
	public static final int MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER = (WinMMLibrary.MIXERCONTROL_CT_CLASS_METER | WinMMLibrary.MIXERCONTROL_CT_SC_METER_POLLED | WinMMLibrary.MIXERCONTROL_CT_UNITS_UNSIGNED);
	public static final int MIXERCONTROL_CT_CLASS_CUSTOM = 0;
	public static final int MIXERCONTROL_CT_CLASS_FADER = 1342177280;
	public static final int MIXERCONTROL_CT_CLASS_LIST = 1879048192;
	public static final int MIXERCONTROL_CT_CLASS_MASK = -268435456;
	public static final int MIXERCONTROL_CT_CLASS_METER = 268435456;
	public static final int MIXERCONTROL_CT_CLASS_NUMBER = 805306368;
	public static final int MIXERCONTROL_CT_CLASS_SLIDER = 1073741824;
	public static final int MIXERCONTROL_CT_CLASS_SWITCH = 536870912;
	public static final int MIXERCONTROL_CT_CLASS_TIME = 1610612736;
	public static final int MIXERCONTROL_CT_SC_LIST_MULTIPLE = 16777216;
	public static final int MIXERCONTROL_CT_SC_LIST_SINGLE = 0;
	public static final int MIXERCONTROL_CT_SC_METER_POLLED = 0;
	public static final int MIXERCONTROL_CT_SC_SWITCH_BOOLEAN = 0;
	public static final int MIXERCONTROL_CT_SC_SWITCH_BUTTON = 16777216;
	public static final int MIXERCONTROL_CT_SC_TIME_MICROSECS = 0;
	public static final int MIXERCONTROL_CT_SC_TIME_MILLISECS = 16777216;
	public static final int MIXERCONTROL_CT_SUBCLASS_MASK = 251658240;
	public static final int MIXERCONTROL_CT_UNITS_BOOLEAN = 65536;
	public static final int MIXERCONTROL_CT_UNITS_CUSTOM = 0;
	public static final int MIXERCONTROL_CT_UNITS_DECIBELS = 262144;
	public static final int MIXERCONTROL_CT_UNITS_MASK = 16711680;
	public static final int MIXERCONTROL_CT_UNITS_PERCENT = 327680;
	public static final int MIXERCONTROL_CT_UNITS_SIGNED = 131072;
	public static final int MIXERCONTROL_CT_UNITS_UNSIGNED = 196608;
	public static final int MIXERLINE_COMPONENTTYPE_DST_DIGITAL = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_DST_FIRST + 1);
	public static final int MIXERLINE_COMPONENTTYPE_DST_FIRST = 0;
	public static final int MIXERLINE_COMPONENTTYPE_DST_HEADPHONES = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_DST_FIRST + 5);
	public static final int MIXERLINE_COMPONENTTYPE_DST_LAST = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_DST_FIRST + 8);
	public static final int MIXERLINE_COMPONENTTYPE_DST_LINE = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_DST_FIRST + 2);
	public static final int MIXERLINE_COMPONENTTYPE_DST_MONITOR = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_DST_FIRST + 3);
	public static final int MIXERLINE_COMPONENTTYPE_DST_SPEAKERS = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_DST_FIRST + 4);
	public static final int MIXERLINE_COMPONENTTYPE_DST_TELEPHONE = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_DST_FIRST + 6);
	public static final int MIXERLINE_COMPONENTTYPE_DST_UNDEFINED = WinMMLibrary.MIXERLINE_COMPONENTTYPE_DST_FIRST;
	public static final int MIXERLINE_COMPONENTTYPE_DST_VOICEIN = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_DST_FIRST + 8);
	public static final int MIXERLINE_COMPONENTTYPE_DST_WAVEIN = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_DST_FIRST + 7);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_ANALOG = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 10);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 9);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 5);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_DIGITAL = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 1);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_FIRST = 4096;
	public static final int MIXERLINE_COMPONENTTYPE_SRC_LAST = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 10);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_LINE = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 2);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 3);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 7);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 4);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 6);
	public static final int MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED = WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST;
	public static final int MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT = (WinMMLibrary.MIXERLINE_COMPONENTTYPE_SRC_FIRST + 8);
	public static final int MIXERLINE_LINEF_ACTIVE = 1;
	public static final int MIXERLINE_LINEF_DISCONNECTED = 32768;
	public static final int MIXERLINE_LINEF_SOURCE = -2147483648;
	public static final int MIXERLINE_TARGETTYPE_AUX = 5;
	public static final int MIXERLINE_TARGETTYPE_MIDIIN = 4;
	public static final int MIXERLINE_TARGETTYPE_MIDIOUT = 3;
	public static final int MIXERLINE_TARGETTYPE_UNDEFINED = 0;
	public static final int MIXERLINE_TARGETTYPE_WAVEIN = 2;
	public static final int MIXERLINE_TARGETTYPE_WAVEOUT = 1;
	public static final int MIXERR_BASE = 1024;
	public static final int MIXERR_INVALCONTROL = (WinMMLibrary.MIXERR_BASE + 1);
	public static final int MIXERR_INVALLINE = WinMMLibrary.MIXERR_BASE;
	public static final int MIXERR_INVALVALUE = (WinMMLibrary.MIXERR_BASE + 2);
	public static final int MIXERR_LASTERROR = (WinMMLibrary.MIXERR_BASE + 2);
	public static final int MM_DRVM_CLOSE = 977;
	public static final int MM_DRVM_DATA = 978;
	public static final int MM_DRVM_ERROR = 979;
	public static final int MM_DRVM_OPEN = 976;
	public static final int MM_JOY1BUTTONDOWN = 949;
	public static final int MM_JOY1BUTTONUP = 951;
	public static final int MM_JOY1MOVE = 928;
	public static final int MM_JOY1ZMOVE = 930;
	public static final int MM_JOY2BUTTONDOWN = 950;
	public static final int MM_JOY2BUTTONUP = 952;
	public static final int MM_JOY2MOVE = 929;
	public static final int MM_JOY2ZMOVE = 931;
	public static final int MM_MCINOTIFY = 953;
	public static final int MM_MCISIGNAL = 971;
	public static final int MM_MIM_CLOSE = 962;
	public static final int MM_MIM_DATA = 963;
	public static final int MM_MIM_ERROR = 965;
	public static final int MM_MIM_LONGDATA = 964;
	public static final int MM_MIM_LONGERROR = 966;
	public static final int MM_MIM_MOREDATA = 972;
	public static final int MM_MIM_OPEN = 961;
	public static final int MM_MIXM_CONTROL_CHANGE = 977;
	public static final int MM_MIXM_LINE_CHANGE = 976;
	public static final int MM_MOM_CLOSE = 968;
	public static final int MM_MOM_DONE = 969;
	public static final int MM_MOM_OPEN = 967;
	public static final int MM_MOM_POSITIONCB = 970;
	public static final int MM_STREAM_CLOSE = 981;
	public static final int MM_STREAM_DONE = 982;
	public static final int MM_STREAM_ERROR = 983;
	public static final int MM_STREAM_OPEN = 980;
	public static final int MM_WIM_CLOSE = 959;
	public static final int MM_WIM_DATA = 960;
	public static final int MM_WIM_OPEN = 958;
	public static final int MM_WOM_CLOSE = 956;
	public static final int MM_WOM_DONE = 957;
	public static final int MM_WOM_OPEN = 955;
	public static final int MMIO_ALLOCBUF = 65536;
	public static final int MMIO_COMPAT = 0;
	public static final int MMIO_CREATE = 4096;
	public static final int MMIO_CREATELIST = 64;
	public static final int MMIO_CREATERIFF = 32;
	public static final int MMIO_DEFAULTBUFFER = 8192;
	public static final int MMIO_DELETE = 512;
	public static final int MMIO_DENYNONE = 64;
	public static final int MMIO_DENYREAD = 48;
	public static final int MMIO_DENYWRITE = 32;
	public static final int MMIO_DIRTY = 268435456;
	public static final int MMIO_EMPTYBUF = 16;
	public static final int MMIO_EXCLUSIVE = 16;
	public static final int MMIO_EXIST = 16384;
	public static final int MMIO_FHOPEN = 16;
	public static final int MMIO_FINDCHUNK = 16;
	public static final int MMIO_FINDLIST = 64;
	public static final int MMIO_FINDPROC = 262144;
	public static final int MMIO_FINDRIFF = 32;
	public static final int MMIO_GETTEMP = 131072;
	public static final int MMIO_GLOBALPROC = 268435456;
	public static final int MMIO_INSTALLPROC = 65536;
	public static final int MMIO_PARSE = 256;
	public static final int MMIO_READ = 0;
	public static final int MMIO_READWRITE = 2;
	public static final int MMIO_REMOVEPROC = 131072;
	public static final int MMIO_RWMODE = 3;
	public static final int MMIO_SHAREMODE = 112;
	public static final int MMIO_TOUPPER = 16;
	public static final int MMIO_UNICODEPROC = 16777216;
	public static final int MMIO_WRITE = 1;
	public static final int MMIOERR_ACCESSDENIED = (WinMMLibrary.MMIOERR_BASE + 12);
	public static final int MMIOERR_BASE = 256;
	public static final int MMIOERR_CANNOTCLOSE = (WinMMLibrary.MMIOERR_BASE + 4);
	public static final int MMIOERR_CANNOTEXPAND = (WinMMLibrary.MMIOERR_BASE + 8);
	public static final int MMIOERR_CANNOTOPEN = (WinMMLibrary.MMIOERR_BASE + 3);
	public static final int MMIOERR_CANNOTREAD = (WinMMLibrary.MMIOERR_BASE + 5);
	public static final int MMIOERR_CANNOTSEEK = (WinMMLibrary.MMIOERR_BASE + 7);
	public static final int MMIOERR_CANNOTWRITE = (WinMMLibrary.MMIOERR_BASE + 6);
	public static final int MMIOERR_CHUNKNOTFOUND = (WinMMLibrary.MMIOERR_BASE + 9);
	public static final int MMIOERR_FILENOTFOUND = (WinMMLibrary.MMIOERR_BASE + 1);
	public static final int MMIOERR_INVALIDFILE = (WinMMLibrary.MMIOERR_BASE + 16);
	public static final int MMIOERR_NETWORKERROR = (WinMMLibrary.MMIOERR_BASE + 14);
	public static final int MMIOERR_OUTOFMEMORY = (WinMMLibrary.MMIOERR_BASE + 2);
	public static final int MMIOERR_PATHNOTFOUND = (WinMMLibrary.MMIOERR_BASE + 11);
	public static final int MMIOERR_SHARINGVIOLATION = (WinMMLibrary.MMIOERR_BASE + 13);
	public static final int MMIOERR_TOOMANYOPENFILES = (WinMMLibrary.MMIOERR_BASE + 15);
	public static final int MMIOERR_UNBUFFERED = (WinMMLibrary.MMIOERR_BASE + 10);
	public static final int MMIOM_CLOSE = 4;
	public static final int MMIOM_OPEN = 3;
	public static final int MMIOM_READ = WinMMLibrary.MMIO_READ;
	public static final int MMIOM_RENAME = 6;
	public static final int MMIOM_SEEK = 2;
	public static final int MMIOM_USER = 32768;
	public static final int MMIOM_WRITE = WinMMLibrary.MMIO_WRITE;
	public static final int MMIOM_WRITEFLUSH = 5;
	public static final int MMSYSERR_ALLOCATED = (WinMMLibrary.MMSYSERR_BASE + 4);
	public static final int MMSYSERR_BADDB = (WinMMLibrary.MMSYSERR_BASE + 14);
	public static final int MMSYSERR_BADDEVICEID = (WinMMLibrary.MMSYSERR_BASE + 2);
	public static final int MMSYSERR_BADERRNUM = (WinMMLibrary.MMSYSERR_BASE + 9);
	public static final int MMSYSERR_BASE = 0;
	public static final int MMSYSERR_DELETEERROR = (WinMMLibrary.MMSYSERR_BASE + 18);
	public static final int MMSYSERR_ERROR = (WinMMLibrary.MMSYSERR_BASE + 1);
	public static final int MMSYSERR_HANDLEBUSY = (WinMMLibrary.MMSYSERR_BASE + 12);
	public static final int MMSYSERR_INVALFLAG = (WinMMLibrary.MMSYSERR_BASE + 10);
	public static final int MMSYSERR_INVALHANDLE = (WinMMLibrary.MMSYSERR_BASE + 5);
	public static final int MMSYSERR_INVALIDALIAS = (WinMMLibrary.MMSYSERR_BASE + 13);
	public static final int MMSYSERR_INVALPARAM = (WinMMLibrary.MMSYSERR_BASE + 11);
	public static final int MMSYSERR_KEYNOTFOUND = (WinMMLibrary.MMSYSERR_BASE + 15);
	public static final int MMSYSERR_LASTERROR = (WinMMLibrary.MMSYSERR_BASE + 20);
	public static final int MMSYSERR_NODRIVER = (WinMMLibrary.MMSYSERR_BASE + 6);
	public static final int MMSYSERR_NODRIVERCB = (WinMMLibrary.MMSYSERR_BASE + 20);
	public static final int MMSYSERR_NOERROR = 0;
	public static final int MMSYSERR_NOMEM = (WinMMLibrary.MMSYSERR_BASE + 7);
	public static final int MMSYSERR_NOTENABLED = (WinMMLibrary.MMSYSERR_BASE + 3);
	public static final int MMSYSERR_NOTSUPPORTED = (WinMMLibrary.MMSYSERR_BASE + 8);
	public static final int MMSYSERR_READERROR = (WinMMLibrary.MMSYSERR_BASE + 16);
	public static final int MMSYSERR_VALNOTFOUND = (WinMMLibrary.MMSYSERR_BASE + 19);
	public static final int MMSYSERR_WRITEERROR = (WinMMLibrary.MMSYSERR_BASE + 17);
	public static final int MOD_FMSYNTH = 4;
	public static final int MOD_MAPPER = 5;
	public static final int MOD_MIDIPORT = 1;
	public static final int MOD_SQSYNTH = 3;
	public static final int MOD_SYNTH = 2;
	public static final int MOM_CLOSE = WinMMLibrary.MM_MOM_CLOSE;
	public static final int MOM_DONE = WinMMLibrary.MM_MOM_DONE;
	public static final int MOM_OPEN = WinMMLibrary.MM_MOM_OPEN;
	public static final int MOM_POSITIONCB = WinMMLibrary.MM_MOM_POSITIONCB;
	public static final int NEWTRANSPARENT = 3;
	public static final int QUERYROPSUPPORT = 40;
	public static final int SC_SCREENSAVE = 61760;
	public static final int SEEK_CUR = 1;
	public static final int SEEK_END = 2;
	public static final int SEEK_SET = 0;
	public static final int SELECTDIB = 41;
	public static final int SND_ALIAS = 65536;
	public static final int SND_ALIAS_ID = 1114112;
	public static final int SND_ALIAS_START = 0;
	public static final int SND_APPLICATION = 128;
	public static final int SND_ASYNC = 1;
	public static final int SND_FILENAME = 131072;
	public static final int SND_LOOP = 8;
	public static final int SND_MEMORY = 4;
	public static final int SND_NODEFAULT = 2;
	public static final int SND_NOSTOP = 16;
	public static final int SND_NOWAIT = 8192;
	public static final int SND_PURGE = 64;
	public static final int SND_RESOURCE = 262148;
	public static final int SND_SYNC = 0;
	public static final int TIME_BYTES = 4;
	public static final int TIME_CALLBACK_EVENT_PULSE = 32;
	public static final int TIME_CALLBACK_EVENT_SET = 16;
	public static final int TIME_CALLBACK_FUNCTION = 0;
	public static final int TIME_MIDI = 16;
	public static final int TIME_MS = 1;
	public static final int TIME_ONESHOT = 0;
	public static final int TIME_PERIODIC = 1;
	public static final int TIME_SAMPLES = 2;
	public static final int TIME_SMPTE = 8;
	public static final int TIME_TICKS = 32;
	public static final int TIMERR_BASE = 96;
	public static final int TIMERR_NOCANDO = (WinMMLibrary.TIMERR_BASE + 1);
	public static final int TIMERR_NOERROR = 0;
	public static final int TIMERR_STRUCT = (WinMMLibrary.TIMERR_BASE + 33);
	public static final int WAVE_ALLOWSYNC = 2;
	public static final int WAVE_FORMAT_1M08 = 1;
	public static final int WAVE_FORMAT_1M16 = 4;
	public static final int WAVE_FORMAT_1S08 = 2;
	public static final int WAVE_FORMAT_1S16 = 8;
	public static final int WAVE_FORMAT_2M08 = 16;
	public static final int WAVE_FORMAT_2M16 = 64;
	public static final int WAVE_FORMAT_2S08 = 32;
	public static final int WAVE_FORMAT_2S16 = 128;
	public static final int WAVE_FORMAT_4M08 = 256;
	public static final int WAVE_FORMAT_4M16 = 1024;
	public static final int WAVE_FORMAT_4S08 = 512;
	public static final int WAVE_FORMAT_4S16 = 2048;
	public static final int WAVE_FORMAT_DIRECT = 8;
	public static final int WAVE_FORMAT_DIRECT_QUERY = (WinMMLibrary.WAVE_FORMAT_QUERY | WinMMLibrary.WAVE_FORMAT_DIRECT);
	public static final int WAVE_FORMAT_EXTENSIBLE = 65534;
	public static final int WAVE_FORMAT_PCM = 1;
	public static final int WAVE_FORMAT_QUERY = 1;
	public static final int WAVE_INVALIDFORMAT = 0;
	public static final int WAVE_MAPPED = 4;
	public static final int WAVE_MAPPER = -1;
	public static final int WAVECAPS_DIRECTSOUND = 64;
	public static final int WAVECAPS_LRVOLUME = 8;
	public static final int WAVECAPS_PITCH = 1;
	public static final int WAVECAPS_PLAYBACKRATE = 2;
	public static final int WAVECAPS_SAMPLEACCURATE = 32;
	public static final int WAVECAPS_SYNC = 16;
	public static final int WAVECAPS_VOLUME = 4;
	public static final int WAVERR_BADFORMAT = (WinMMLibrary.WAVERR_BASE + 0);
	public static final int WAVERR_BASE = 32;
	public static final int WAVERR_LASTERROR = (WinMMLibrary.WAVERR_BASE + 3);
	public static final int WAVERR_STILLPLAYING = (WinMMLibrary.WAVERR_BASE + 1);
	public static final int WAVERR_SYNC = (WinMMLibrary.WAVERR_BASE + 3);
	public static final int WAVERR_UNPREPARED = (WinMMLibrary.WAVERR_BASE + 2);
	public static final int WHDR_BEGINLOOP = 4;
	public static final int WHDR_DONE = 1;
	public static final int WHDR_ENDLOOP = 8;
	public static final int WHDR_INQUEUE = 16;
	public static final int WHDR_PREPARED = 2;
	public static final int WIM_CLOSE = WinMMLibrary.MM_WIM_CLOSE;
	public static final int WIM_DATA = WinMMLibrary.MM_WIM_DATA;
	public static final int WIM_OPEN = WinMMLibrary.MM_WIM_OPEN;
	public static final int WOM_CLOSE = WinMMLibrary.MM_WOM_CLOSE;

	public static final int WOM_DONE = WinMMLibrary.MM_WOM_DONE;
	
	 public static final int WOM_OPEN = WinMMLibrary.MM_WOM_OPEN;

	int waveOutOpen(IntByReference /*HWAVEOUT*/ handle, 
			int type, 
			WAVEFORMATEX wfx, 
			WaveOutOpenFunc cb,
			int /*HANDLE*/ wSem, 
			int callback);
	int waveOutPause(int /*HWAVEOUT*/ handle);
	int waveOutPrepareHeader(int /*HWAVEOUT*/ handle,WAVEHDR hdr,int size);
	int waveOutUnprepareHeader(int /*HWAVEOUT*/ handle,WAVEHDR hdr,int size);
	int waveOutReset(int /*HWAVEOUT*/ handle);
	int waveOutRestart(int /*HWAVEOUT*/ handle);
	int waveOutWrite(int wHandle, WAVEHDR hdr, int size);
	int waveOutClose(int wHandle);
	
	int waveOutGetErrorTextW(int res, char[] str, int sz);
}
