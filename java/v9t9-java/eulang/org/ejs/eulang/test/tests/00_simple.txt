<<< simple
x : Int = 5;
getX = code() { x; };
===
call getX
assert R0 == 5
>>>

<<< shifting
x : Int = 5;
testShift1 = code() { y := 4; z := ((x << y) << 8); y = 16; z |= x << y; };
===
call testShift1
assert R0 == 0x5000
>>>

<<< call negate
x := 100;
negate = [T] code(x) { -x; };
testSimpleCall1 = code() { y := x*2; z := negate(y);  };
===
call testSimpleCall1
assert R0 == -200
>>>
