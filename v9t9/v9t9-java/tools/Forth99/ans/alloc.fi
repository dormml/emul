

\ pointer to end of block chain;  0 if no heap
\
\ heapptr 
\
2   RamVar  heapptr

\ allocated block:    [ link to prev block &~ 1 ] [ next 'here' ] [ data .... ]
\ deallocated block:  [ link to prev block |  1 ] [ next 'here' ] [ data .... ]
| 4 Constant #heaphdr  

: allocate ( u -- a-addr ior )
\ Allocate u address units of contiguous data space. 
\ EJS: ignored: [[[ The data-space pointer is unaffected by this operation. ]]] 
\ The initial content of the allocated space is undefined.
\
\ If the allocation succeeds, a-addr is the aligned starting address of the
\ allocated space and ior is zero.
\ 
\ If the operation fails, a-addr does not represent a valid address and ior 
\ is the implementation-defined I/O result code. 

	\ every allocation on 2-byte boundary
	align
	
	\ get the space, plus a slot for the link pointer
	#heaphdr +  			( #bytes )
	dup  mfree u>  if
		err-no-memory  exit
	then

	\ the new addr
	here  >r
	
    allot 

	\ link to previous slot
	heapptr @   ( prev )
	
	\ remember last buffer
	r@  heapptr !
	
	\ store link to prev
	r@  !

	\ and remember last 'here'
	here  r@  cell+  !

	\ leave new addr
	r>	#heaphdr +
	0
;

: heap? ( a-addr )
	\ point to link addr
	#heaphdr -	 >r
	
	\ walk all allocated items
	heapptr @ 
	begin
		r@ over = if
			rdrop drop true exit
		then
		
		\ prev entry
		1 nand  @
		dup 0=
	until
	drop rdrop false
;

: hdump ( ) 
	heapptr @
	begin
		dup 
	while
		dup	 		( buffer buffer )
		@  dup  	( buffer link link )
		1 AND  if &70 emit then		\ 'free'
		swap  #heaphdr +  u.
		1 NAND
	repeat
	&69 emit
	drop
;

: free ( a-addr -- ior )
	dup  heap?  0=  err-invalid-addr ?throw
	
	\ point to block head
	#heaphdr -  :> buffer
	
	\ mark block deallocated
	buffer @   1 OR  buffer !  
	
	begin
		\ IFF the current block is deallocated and at the end of the 
		\ heap, free space
		buffer if
			buffer @  1 AND		\ deallocated?
			buffer heapptr @  = 	\ and this is the top?
			AND
		else
			0
		then
	while
		buffer @  1 NAND 
		
		dup  heapptr !		( save link )
		
		\ see if the dictionary can shrink	
		buffer cell+  @  here =  if 
			\ restore DP
			buffer  dp !
		then
		
		to buffer  			
	repeat
;


