
| : unhosted-EMIT ( ch -- )
	drop
;
' unhosted-EMIT 	TO EMIT

| : unhosted-KEY ( --  k )
	begin again
;
' unhosted-KEY 		TO KEY

| : unhosted-KEY? ( --  f )
	false
;
' unhosted-KEY? 	TO KEY?

: unhosted-QUIT ( -- )
	BEGIN  KEY EMIT  AGAIN
;
' unhosted-QUIT		TO QUIT

: unhosted-ABORT ( i*x -- ) ( R: j*x -- )
\ Empty the data stack and perform the function of QUIT, which includes 
\ emptying the return stack, without displaying a message.

	hang
	
	 regs-init
	 quit
;

' unhosted-ABORT	TO ABORT

[IFUNDEF] ABORT"
: ABORT"
\        Compilation: ( "ccc<quote>" -- )
\
\   Parse ccc delimited by a " (double-quote). Append the run-time semantics
\   given below to the current definition.
\
\        Run-time: ( i*x x1 --  | i*x ) ( R: j*x --  | j*x )
\
\   Remove x1 from the stack. If any bit of x1 is not zero, display ccc and
\   perform an implementation-defined abort sequence that includes the
\   function of ABORT.

	postpone s"
	2drop
; immediate  target-only
[THEN]

: unhosted-S"
	0 0
; immediate  target-only

' unhosted-S"		TO S"

| : (ABORT")
    rot if 
        type cr 
        abort
    else  
        2drop  
    then
;

: unhosted-ABORT"
\        Compilation: ( "ccc<quote>" -- )
\
\   Parse ccc delimited by a " (double-quote). Append the run-time semantics
\   given below to the current definition.
\
\        Run-time: ( i*x x1 --  | i*x ) ( R: j*x --  | j*x )
\
\   Remove x1 from the stack. If any bit of x1 is not zero, display ccc and
\   perform an implementation-defined abort sequence that includes the
\   function of ABORT.

    postpone s"
    (ABORT")
; immediate  target-only

' unhosted-ABORT"	TO ABORT"


[IFUNDEF] ."
: ."
    postpone s"
    type
;    immediate target-only
[THEN]
