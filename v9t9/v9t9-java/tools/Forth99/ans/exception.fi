\   exception.fi
\ 
\   (c) 2011 Edward Swartz
\ 
\   This program is free software; you can redistribute it and/or modify
\   it under the terms of the GNU General Public License as published by
\   the Free Software Foundation; either version 2 of the License, or
\   (at your option) any later version.
\  
\   This program is distributed in the hope that it will be useful, but
\   WITHOUT ANY WARRANTY; without even the implied warranty of
\   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
\   General Public License for more details.
\  
\   You should have received a copy of the GNU General Public License
\   along with this program; if not, write to the Free Software
\   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
\   02111-1307, USA.
\ 

\ catch/throw from ANS specification, with amendment to handle throwing 
\ when no catch block active.

| User handler

: catch  ( xt -- exception# | 0 ) \ return addr on stack
    sp@ >r         \ save data stack pointer
    lp@ >r         \ save local pointer
    handler @ >r   \ and previous handler
    rp@ handler !  \ set current handler
    execute        \ execute returns if no throw
    r> handler !   \ restore previous handler
    rdrop          \ discard saved local ptr
    rdrop          \ discard saved stack ptr
    0              \ normal completion
;

: throw  ( ??? exception# -- ??? exception# )
    ?dup if          ( exc# ) \ 0 throw is no-op
        handler @      
        dup if
            rp!            \ restore prev return stack
            r> handler !   \ restore prev handler
            r>  lp!        \ restore locals
            r> swap >r     \ exc# on return stack
            sp! drop r>    \ restore stack
                \  return to the caller of catch because return
                \  stack is restored to the state that existed
                \  when catch began execution
        else
            abort           \ no handler in place
        then
    then
;

0 <export

: exc-init 
    0 handler !
;

export>

