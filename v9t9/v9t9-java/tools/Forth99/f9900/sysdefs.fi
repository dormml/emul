\   sysdefs.fi
\ 
\   (c) 2010-2013 Edward Swartz
\ 
\   All rights reserved. This program and the accompanying materials
\   are made available under the terms of the Eclipse Public License v1.0
\   which accompanies this distribution, and is available at
\   http://www.eclipse.org/legal/epl-v10.html
\ 


\   ---------   memory map

|+ MMIO $00 +       constant    VDPRD
|+ MMIO $02 +       constant    VDPST
|+ MMIO $04 +       constant    VDPWD
|+ MMIO $06 +       constant    VDPWA       \ high then low
|+ MMIO $08 +       constant    VDPCL
|+ MMIO $0A +       constant    VDPWI

|+ MMIO $10 +       constant    GPLRD
|+ MMIO $12 +       constant    GPLRA       \ high then low
|+ MMIO $14 +       constant    GPLWD
|+ MMIO $16 +       constant    GPLWA

|+ MMIO $18 +       constant    SPCHRD
|+ MMIO $1a +       constant    SPCHWT

|+ MMIO $20 +       constant    SOUND  \ ... 0x20!

\   ---------  peripherals (CRU @ 0xC0)

|+ CRU $00 +       constant    'INTS
|+ CRU $01 +       constant    'INTSP
    
    $1      constant    M_INT_BKPT
    $2      constant    M_INT_EXT
    $4      constant    M_INT_VDP
    $8      constant    M_INT_KBD

CRU $02 +       constant    'KBD
CRU $03 +       constant    'KBDA

|+ CRU $04 +    constant    'GATE

|+ CRU $07 +    constant    'RND

CRU $08 +       constant    'DSK 

\   0: write: cmd; read: status
  'DSK 0 +  constant    'DSKCMD
        $00 constant    #dskCmdRestore
        $10 constant    #dskCmdSeek
        $80 constant    #dskCmdReadSector
        $A0 constant    #dskCmdWriteSector
        $F0 constant    #dskCmdInterrupt
        
        $08 constant    #dskCmd'Head
        $04 constant    #dskCmd'Verify
        $02 constant    #dskCmd'10ms
        
\   0: write: cmd; read: status
  'DSK 0 +  constant    'DSKST
        $80 constant    #dskStRdy
        $02 constant    #dskStDrq
        $01 constant    #dskStBusy
        
\   1: write/read: track addr
  'DSK 1 +  constant    'DSKTRK
  
\  2: write/read: sector addr
  'DSK 2 +  constant    'DSKSEC
  
\  3: write/read: data
  'DSK 3 +  constant    'DSKDAT
  
\  4: write/read: [0 | 0 | 0 | 0 | motor | hold | head | side ] 
  'DSK 4 +  constant    'DSKFLG
        $01 constant    #dskFlgSide
        $02 constant    #dskFlgHead
        $04 constant    #dskFlgHold
        $08 constant    #dskFlgMotor
  
\  5: write/read: [0 | 0 | 0 | 0 | 0 | D2 | D1 | D0] 
  'DSK 5 +  constant    'DSKNUM

$00ff       constant    'DBG

\   -----------------------    

|+ $0       constant    IntVecs     \ ... 0x40

|+     0       constant    INT_RESET
|+     1       constant    INT_VDP

\ sizes of fixed areas
$80         constant    (#RP)
$80         constant    (#SP)

\ minimum size is (2*n)+2 where n is cell size
#cell 3 LSHIFT  2*  2+ 
            constant   (#numbuf)
$100        constant   (#slit-pad)
$100        constant   #TIB

|+ $400        constant    CHARS/BLOCK \ basic block size
CHARS/BLOCK 
    2 +     \ block # field (or 0x8000 for modified)
            constant   (#blk)
(#blk) 3 *  constant   (#blks)    \ total block space

$80        constant   (#up)       \ global user space

$28	      	constant	#maxrdefers		\ since we don't know ahead of time, make room for max # words
 
|+ Workspaces  
	(#RP) - (#SP) - 
	(#numbuf) - (#slit-pad) - 
	#TIB - (#blks) - 
	(#up) -
	#maxrdefers -
            				constant RamTop    \ grows down

\ Arrange memory to minimize problems in case of overflow.
RamTop							constant (first)    \ grows up
(first) (#blks) +				constant (limit)
(limit)							constant (up0)      \ grows up 
(up0) (#up) +					constant (rdefertbl)      
(rdefertbl) #maxrdefers +		
	 (#numbuf) + 
								constant (numbuf0)     \ grows down
(numbuf0)						constant (slit-pad0)    \ grows up
(slit-pad0) (#slit-pad) +		constant TIB         \ grows up
TIB #TIB + (#rp) +				constant (rp0)    \ grows down
(rp0) (#sp) +					constant (sp0)      \ grows down


\ -----------   GROM addresses

$0

dup         constant    >grom_sig           2+
dup         constant    >grom_dict          2+      \ note: build depends on this offset
dup         constant    >grom_dictend       2+      \ note: build depends on this offset
dup         constant    >grom_logo          2+
dup         constant    >grom_kbdlist       2+
dup         constant    >grom_font8x8       2+
dup         constant    >grom_font5x6       2+
dup         constant    >grom_errptrs       2+
dup         constant    >grom_editorhelp    2+
dup         constant    >grom_menubar       2+

drop

$4000       Constant    >gram_dict_base
$8000       Constant    >gram_disk_base

\ ----------    syscalls


\ ---------     interrupt flag bits

$80         constant    v-int-nosprmot
$40         constant    v-int-nocursor
$20         constant    v-int-noabort



