\   cold.fi
\ 
\   (c) 2014 Ed Swartz
\ 
\   All rights reserved. This program and the accompanying materials
\   are made available under the terms of the Eclipse Public License v1.0
\   which accompanies this distribution, and is available at
\   http://www.eclipse.org/legal/epl-v10.html
\ 


has? TASKS [IF]

[IFUNDEF] task
| : regs-init
    (SP0) (UP0) (RP0)   (REGS) 
;
[THEN]

[THEN]

| Code regs-init
	rRP *R		rTOS	,MOV	( save R-entry )

has? TASKS [IF]

	@>		rR2			,MOV	'me ,		
	0 $+				,JEQ				( in a task? )

	rR2			 rSP	,MOV 	
	rSP					,AI 	>tsp ,
	
	rR2			 rUP	,MOV
	rUP					,AI 	>tup ,
	
	rR2			 rRP	,MOV
	rRP					,AI 	>trp ,
	
	1 $+				,JMP
	
[THEN]
	
0 $:
	rSP					,LI 	(SP0) ,
	rUP					,LI 	(UP0) ,
	rRP					,LI 	(RP0) ,
    		 
1 $:
	rRP					,DECT
	rTOS 		rRP *R	,MOV	( restore R-entry )

	@>					,BL		' ((DOERS)) ,	

end-code


: cold-init
    @DP0 @       	DP  !
    @LATEST @  		>latest !
    
[ has? GROM-DICT [IF] ]    
	\ >gram_dict_base  GDP !
	>gram_dict_end 1-  GDP !
[ [THEN] ]
    
    		\ TODO     GRAM
    
			\  TODO      gheap dict-hinit
    
	UP0 @       	UDP !
    
    (RAM0) 	 		RAM !
    
    (numbuf0) 		(numbuf) !
    (slit-pad0) 	(spad) !
    
[ has? STANDALONE [if] ]

    \ setup NMI interrupt
	IntWS  ['] abort  $fffc  2!
	
[ [then] ]
;

: COLD
	regs-init
	
	(resolve-rdefers)
	
	cold-init

	(main)
;


