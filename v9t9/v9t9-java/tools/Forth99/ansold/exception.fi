\   exception.fi
\ 
\   (c) 2011 Edward Swartz
\ 
\   All rights reserved. This program and the accompanying materials
\   are made available under the terms of the Eclipse Public License v1.0
\   which accompanies this distribution, and is available at
\   http://www.eclipse.org/legal/epl-v10.html
\ 

\ catch/throw from ANS specification, with amendment to handle throwing 
\ when no catch block active.

| User handler

: catch  ( xt -- exception# | 0 ) \ return addr on stack
    sp@ >r         \ save data stack pointer
    lp@ >r         \ save local pointer
    handler @ >r   \ and previous handler
    rp@ handler !  \ set current handler
    execute        \ execute returns if no throw
    r> handler !   \ restore previous handler
    rdrop          \ discard saved local ptr
    rdrop          \ discard saved stack ptr
    0              \ normal completion
;

: throw  ( ??? exception# -- ??? exception# )
    ?dup if          ( exc# ) \ 0 throw is no-op
        handler @      
        dup if
            rp!            \ restore prev return stack
            r> handler !   \ restore prev handler
            r>  lp!        \ restore locals
            r> swap >r     \ exc# on return stack
            sp! drop r>    \ restore stack
                \  return to the caller of catch because return
                \  stack is restored to the state that existed
                \  when catch began execution
        else
        	regs-init
        	quit           \ no handler in place
        then
    then
;


\ Extension

: ?throw ( t|f code -- )
    swap 0<> swap  AND  throw
;


0 <export

: exc-init 
    0 handler !
;

export>

