\   sysprims.fi
\ 
\   (c) 2010-2011 Edward Swartz
\ 
\   This program is free software; you can redistribute it and/or modify
\   it under the terms of the GNU General Public License as published by
\   the Free Software Foundation; either version 2 of the License, or
\   (at your option) any later version.
\  
\   This program is distributed in the hope that it will be useful, but
\   WITHOUT ANY WARRANTY; without even the implied warranty of
\   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
\   General Public License for more details.
\  
\   You should have received a copy of the GNU General Public License
\   along with this program; if not, write to the Free Software
\   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
\   02111-1307, USA.
\ 


:   ints-on
    INT_KBD  [ ItoContext c, CTX_INT field, ] 
;   target-only
:   ints-off
    0  [ ItoContext c,  CTX_INT field, ] 
;   target-only


: pick ( n -- v )
    1+ cells [ IcontextFrom c, CTX_SP field, ] + @  
;   target-only

: rpick ( n -- v )
    cells  [ IcontextFrom c, CTX_RP field, ] + @  
;   target-only

\ Move memory backward (src -> dst)
: cmove              ( src dst # -- )  
    1 1 [ Icmove c, ]
;   target-only

\ Move memory forward (src -> dst)
: cmove>            ( src dst # -- )
    -1 -1 [ Icmove c, ]
;   target-only

: m/mod      ( ud un -- un.r ud.q )
    >r  s>d dup r>
    s>d
    [ Iudivmod_d , ]
    2>r drop 2r>
;   target-only

: u/mod      ( u un -- ur uq ) 
    0 swap
    [ Iudivmod c, ]
;   target-only
: u/      ( ud un -- uq )
    0 swap 
    [ Iudivmod c, ] swap drop
;   target-only
: umod      ( u un -- ur )
    0 swap 
    [ Iudivmod c, ] drop
;   target-only

: u*        ( ua ub -- un )
    [ Iumul c, ] drop
;   target-only


: U*/MOD       ( ua ub uc -- ua*b/c ua*b%c )
    >r  [ Iumul c, ]  r>  [ Iudivmod c, ] swap
;  target-only

: U*/       ( ua ub uc -- ua*b/c )
    U*/MOD  drop
;  target-only

: fill  ( addr n ch -- )
    1 [ Icfill c, ]
;   target-only

: rp0
    [ IcontextFrom c,  CTX_RP0 field, ] 
;   target-only
: sp0
    [ IcontextFrom c, CTX_SP0 field, ] 
;   target-only


: (dbg)     Isyscall c, #dbg c, ; immediate
: (dbgf)    Isyscall c, #dbgf c, ; immediate
: (idle)    Isyscall c, #idle c, ; immediate
: (register-symbol)    Isyscall c, #regsym c, ; immediate

: (gfind)      ( c-addr gromdict gromdictEnd -- c-addr 0 | xt -1=immed | xt 1 ) 
    [ Isyscall c,  #gfind c, ]    
; 

: (find)      ( c-addr lfa -- c-addr 0 | xt -1=immed | xt 1 ) 
    \ find word in dictionary     
    \ lfa is nfa-2

    [ Isyscall c, #find  c, ]    
; 

: >NUMBER   ( ud1 c-addr1 u1 -- ud2 c-addr2 u2 )
    base @  
    [ Isyscall c, #number c, ]
;

: (NUMBER)  ( addr -- ud dpl t | f )
    count
    base @  
    [ Isyscall c, #decorated-number c, ]

;



