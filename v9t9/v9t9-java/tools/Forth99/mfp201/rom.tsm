;   rom.tsm
; 
;   (c) 2010-2011 Edward Swartz
; 
;   This program is free software; you can redistribute it and/or modify
;   it under the terms of the GNU General Public License as published by
;   the Free Software Foundation; either version 2 of the License, or
;   (at your option) any later version.
;  
;   This program is distributed in the hope that it will be useful, but
;   WITHOUT ANY WARRANTY; without even the implied warranty of
;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;   General Public License for more details.
;  
;   You should have received a copy of the GNU General Public License
;   along with this program; if not, write to the Free Software
;   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
;   02111-1307, USA.
; 

;
;
;

    incl general.i
    incl ram.i
    incl video.i

; ============
; variables


	aorg >f000
	
reset:
	ldc sysstack, SP
	
	; initialize watchdog

	; initialize peripherals

	; turn on interrupts
	or ST_GIE, SR
	
	call vinit
	
	call vreset
	
	
	br idle
	
int1handler:
	pushn #4, R0
	pushn #4, R4
	pushn #4, R8
	push R12
	
	; reset int acknowledge bit
	
	pop R12
	popn #4, R8
	popn #4, R4
	popn #4, R0
	
	reti
	
nmihandler:
    push R0

	; reset int acknowledge bit
	
	pop R0
    reti
    
bkpthandler:
    reti
    
; =============

;	R0 = character
fillscr:
	pushn #2, r1
	ldc mode0screen, r1
	ldc 768, r2
	loop r2: mov.b r0, *r1+
	popn #2, r1
	ret
	
clrscr:
	push r0
	clr r0
	call fillscr
	pop r0
	ret

	
; =============

idle:
	clr r0
	
$0:
	call fillscr
	
	seto r12
	loop r12: nop		; note: loop must ignore changes to PC!
	
	inc r0
	jmp $0-
	
	
; =============
	
	aorg >ffe0
	
	dw bkpthandler
	
	aorg >fffc
	
	dw nmihandler

	aorg >fffe
	
	dw	reset
	
	
