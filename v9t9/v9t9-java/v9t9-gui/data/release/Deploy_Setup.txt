
SETUP
=========

Go into the <yourApplication> folder, execute "keytool -genkey -keystore $HOME/.keystore.v9t9 -alias v9t9", 
and enter all required information.


BUILDING
=========

Invoke "build_standalone.xml" *after* compiling via Eclipse (TODO)

Then enter the same keystore password when invoking the launch config for "build_standalone.xml".

If running via ant, pass '-Dstorepass=...' with the password, and also supply 
'-Dkeystore=$HOME/.keystore.v9t9'.  

Two versions of the v9t9.jnlp are deployed, v9t9-local.jnlp for testing locally 
and v9t9-remote.jnlp for using on a web server.

The remote launcher uses a hardcoded IP address for testing.  Pass a new 'v9t9.host' and 
'v9t9.root' property to override the URL encoded into v9t9-remote.jnlp (next) and used by the
test web server.

A full command example:

ant -Dkeystore=\$HOME/.keystore.v9t9 -Dstorepass=...thepassword... \
	-Dv9t9.host=mycomputer.mydomain -Dv9t9.root=/path/to/my/v9t9 \
	-f build_standalone.xml 
 
TESTING
=========

To test locally, use "javaws path/to/v9t9-local.jnlp". 

To test the remote deployer, use 'test-httpd.py' to publish a web server on localhost:8080.
Launch a browser that supports Java 6 and open ${v9t9.root}/v9t9.html and click "Launch".

Note: on some browsers, the Launch button will simply trigger a download of the .jnlp
file -- you may have to manually launch the .jnlp from the Downloads folder.

DOCS
=====

http://www.eclipse.org/swt/jws/
http://download.oracle.com/javase/1.5.0/docs/guide/javaws/developersguide/syntax.html
http://docs.oracle.com/javase/tutorial/deployment/deploymentInDepth/jnlpFileSyntax.html
