: [name. ( xt -- caddr u ) xt>nfa dup 1+ swap c@ $1f and ; 
: (runtest sp0 @ sp! ; 
: runtest) ( txt t/f -- ) 
    swap if 2a emit [name. type 2b emit drop else 5b emit 
[name. type 5d emit then  2e emit ; 
: runtests 5b emit 
 (runtest 45. 2>r 2r> 45. d= ['] 2>r runtest) 
 (runtest 50 8 um* 280. d= ['] um* runtest) 
 (runtest $55 $aa xor $ff = ['] xor runtest) 
 (runtest 2d. 6 um/mod 7 = swap 3 = and ['] um/mod runtest) 
 (runtest 1ff. f um/mod 22 = swap 1 = and ['] um/mod runtest) 
 (runtest base @ 2 base +! base @  $a base !  $c = swap $a = and ['] +! 
runtest) 
 (runtest 9 9 < 0= ['] < runtest) 
 (runtest 45 56 < ['] < runtest) 
 (runtest -45 56 < ['] < runtest) 
 (runtest -56 -45 < ['] < runtest) 
 (runtest 8 8 > 0= ['] > runtest) 
 (runtest 9 8 > ['] > runtest) 
 (runtest 7 8 > 0= ['] > runtest) 
 (runtest 56 45 > ['] > runtest) 
 (runtest 56 -45 > ['] > runtest) 
 (runtest -45 -56 > ['] > runtest) 
 (runtest 5 6 = 0= ['] = runtest) 
 (runtest 5 6 <> ['] <> runtest) 
 (runtest 13 13 <> 0= ['] <> runtest) 
 (runtest 45. 23382838. d= 0= ['] d= runtest) 
 (runtest 2938484. 2dup d= ['] d= runtest) 
 (runtest  2. 3. 2drop 2. d= ['] 2drop runtest) 
 (runtest  1. 2. 2dup 2. d= ['] 2dup runtest) 
 (runtest  1. 2. 2over 1. d=  ['] 2over runtest) 
 (runtest  1 2 over 1 = swap 2 = and swap 1 = and ['] over runtest) 
 (runtest 1ff. f fm/mod 22 = swap 1 = and ['] fm/mod runtest) 
 (runtest -1ff. f fm/mod -23 = swap e = and ['] fm/mod runtest) 
 (runtest 3 -4 m* -$c. d= ['] m* runtest) 
 (runtest -4 -3 m* $c. d= ['] m* runtest) 
 (runtest -5 6 max 6 = ['] max runtest) 
 (runtest 6 -5 min -5 = ['] min runtest) 
 (runtest 1 2 3 rot 1 = swap 3 = and swap 2 = ['] rot runtest) 
 (runtest 45 s>d 0= swap 45 = and ['] s>d runtest) 
 (runtest -$1ff. $f sm/rem -$22 = swap -$1 = and ['] sm/rem runtest) 
 (runtest 1 2 u< ['] u< runtest) 
 (runtest 2 1 u< 0= ['] u< runtest) 
 (runtest -1 2 u< 0= ['] u< runtest) 
 (runtest 2 -1 u< ['] u< runtest) 
 (runtest 0. testnum  >number 2drop 2dup d. 1. d+ or 0= ['] >number runtest) 
 (runtest 394 abs 394 = ['] abs runtest) 
 (runtest -395 abs 395 = ['] abs runtest) 
 (runtest -640 . 1 ['] . runtest) 
 (runtest mystr $32 (match) mystr drop swap type 1 ['] (match) runtest) 
 (runtest 20. 40. d< ['] d< runtest) 
 (runtest 50. 40. d< 0= ['] d< runtest) 
 (runtest -20. -10. d< ['] d< runtest) 
 (runtest -10. -20. d< 0= ['] d< runtest) 
 (runtest -10. 10. d< ['] d< runtest) 
 (runtest 10. -10. d< 0= ['] d< runtest) 
 (runtest ['] traverse xt>nfa c@ $88 =  ['] xt>nfa runtest) 
 (runtest ['] traverse dup xt>nfa nfa>xt =  ['] nfa>xt runtest) 
 (runtest hex 21 wordtofind pad swap cmove pad 2 over c! find 
2dup . . if execute 42 = else 0 then decimal  ['] find runtest) 
 (runtest 3 >r 2 1 do loop r> 3 = ['] unloop runtest) 
 5d emit ; 
