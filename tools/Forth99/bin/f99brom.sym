0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
0608 lp@
0612 lp!
061E (do)
062C (loop)
0638 (+loop)
0644 (uloop)
0652 (u+loop)
065C (?do)
066E execute
0678 ?dup
0682 2dup
0694 (context>)
06A4 (>context)
06B0 (user)
06B8 0<
06C2 0<=
06CC 0>
06D6 0>=
06E0 0U<
06EC 0U<=
06F6 0U>
0702 0U>=
070A <
0712 <=
0718 >
0720 >=
0728 U<
0730 U<=
0738 U>
0740 U>=
0748 D0<
0754 D0<=
075E D0>
076A D0>=
0776 DU0<
0782 DU0<=
078E DU0>
079A DU0>=
07A4 D<
07AE D<=
07B8 D>
07C2 D>=
07CC DU<
07D8 DU<=
07E2 DU>
07EE DU>=
07FE (unloop)
080E 2rdrop
0818 2/
0820 2*
082C LSHIFT
0838 RSHIFT
0844 URSHIFT
0850 CRSHIFT
085A SWPB
0868 DLSHIFT
0876 DRSHIFT
0886 DURSHIFT
0896 DCRSHIFT
089E *
08AA 2drop
08B4 d>q
08C4 dum/mod
08CE s>d
08DA true
08E4 false
08F0 (fill)
08FC (cfill)
0908 (move)
0914 (cmove)
0922 (LITERAL)
0932 (DLITERAL)
0940 ((s"))
0954 (S")
0964 (SYSCALL)
0966 I/O
0968 VDPRD
096A VDPST
096C VDPWD
096E VDPWA
0970 VDPCL
0974 VDPWI
0978 GPLRD
097C GPLRA
0980 GPLWD
0984 GPLWA
0988 SPCHRD
098C SPCHWT
0990 KBD
0994 SOUND
0998 'INTS
099C 'INTSP
09A0 M_INT_BKPT
09A2 M_INT_EXT
09A4 M_INT_VDP
09A6 M_INT_KBD
09AA 'KBD
09AE 'KBDA
09B2 'GATE
09B6 'DBG
09BA ROM
09BE (BOOT)
09C2 (COLD)
09C6 DP0
09CA (LATEST)
09CE (#RP)
09D2 (#SP)
09D6 (#pad)
09DA (##-pad)
09DE (#slit-pad)
09E2 (#tib)
09E6 (#blk)
09EA (#up)
09EE RamTop
09F2 (rp0)
09F6 (sp0)
09FA (pad0)
09FE (#-pad0)
0A02 (slit-pad0)
0A06 (tib0)
0A0A (first)
0A0E (limit)
0A12 (up0)
0A16 SysCalls
0A1A IntVecs
0A1E INT_RESET
0A22 INT_NMI
0A26 INT_KBD
0A28 INT_VDP
0A2A INT_BKPT
0A2C grom_kbdlist
0A2E grom_font8x8
0A32 grom_font5x6
0A36 CTX_SP
0A38 CTX_RP
0A3A CTX_UP
0A3C CTX_INT
0A3E IbranchX
0A40 I0branchX
0A44 IRfrom
0A48 IRdrop
0A4C IatR
0A50 Isub
0A54 Iumul
0A58 Iudivmod
0A5C Iudivmod_d
0A60 Iload
0A64 Icload
0A68 Istore
0A6C Icstore
0A70 Iuser
0A74 Iupidx
0A78 IloopUp
0A7C IuloopUp
0A80 IplusLoopUp
0A84 IuplusLoopUp
0A88 Icfill
0A8C Icmove
0A90 Iexit
0A94 Idovar
0A98 Isyscall
0A9C IlitB
0AA0 IlitW
0AA4 IbranchB
0AA8 I0branchB
0AAC Idup_d
0AB0 ItoR_d
0AB4 Irdrop_d
0AB8 Irpidx
0ABC #idle
0ABE #dbg
0AC0 #dbgf
0AC2 #regsym
0AC4 (dbg)
0ACC (dbgf)
0AD4 (idle)
0ADC (register-symbol)
0AE4 UP
0AE8 ramptr
0AEC rp0
0AF0 sp0
0AFC STATE
0B0A literal
0B46 dliteral
0B90 >call
0BA4 compile,
0C7C RamVar
0C8A +Nfield
0C8E +field
0C92 +1field
0CA0 vwaddr
0CAE !vwaddr
0CC2 vsetbank
0CDC +vwaddr
0CEE +!vwaddr
0D02 gwaddr
0D10 graddr
0D1C g@
0D30 gc@
0D3C vc@
0D48 vc!
0D58 (vmbr)
0D68 vmbr
0D78 (vmbw)
0D88 vmbw
0D98 gvmove
0DAE >bit
0DC8 v-data
0DCC v-screen
0DD0 v-screensz
0DD4 v-patts
0DD8 v-pattsz
0DDC v-colors
0DE0 v-colorsz
0DE4 v-sprites
0DE8 v-sprcol
0DEC v-sprpat
0DF0 v-sprmot
0DF4 v-free
0DF8 v-text
0DFC v-mono
0E00 v-width
0E04 v-height
0E08 v-font
0E0C v-fntwidth
0E10 v-fntheight
0E14 'v-coordaddr
0E18 'v-drawchar
0E1C 'v-readchar
0E20 'v-blinkcursor
0E24 'v-setupmode
0E28 'v-updatecolors
0E2C 'v-setfont
0E30 'v-clear
0E34 'v-hchar
0E38 'v-vchar
0E3C msx-stride
0E40 msx-shift
0E44 msx-mask
0E48 v-regsave
0E4C v-data-size
0E50 w>b
0E5A write-vregaddr
0E74 get-vreg
0E7A write-vregs
0E90 vid-show
0E9E >v-fontaddr
0EAA v-curs-under
0EAE v-curs
0EB2 v-cursor-timer
0EB6 v-cursor-blink
0EBA write-var-list
0ECA (mode)
0F02 fg
0F06 bg
0F0A color-byte
0F18 color-word
0F28 v-refresh-colors
0F34 fg!
0F44 bg!
0F54 fg@
0F5E bg@
0F62 vreset
0F74 vstdpal
0F76 v-cursor-off
0F86 update-cursor
0F9E video-modes
0FBE text
0FC6 gfx
0FD2 bitmap
0FDC gfx2
0FE6 gfx3
0FF0 gfx4
0FFA gfx5
1004 gfx6
100E gfx7
1018 text2
1024 mono
1030 multi
1034 last-video-mode
1040 #scr
104A #ssz
1054 #col
105E #csz
1068 #pat
1072 #psz
107C #spt
1086 #spr
1090 #smt
109C #spc
10A8 #fre
10AC txt-chaddr
10BA txt-waddr
10C0 txt-drawchar
10C6 txt-readchar
10CE txt-blinkcursor
10F4 range-wrap
1114 txt-hchar
112E txt-vchar
1178 txt-setupmode
117E txt-updatecolors
1188 txt-clear
1196 std-setfont
11A0 TextFunctions
11C0 TextModeParams
1200 TextModeRegs
120C text-mode
121C (sprite-setup)
123C std-sprite-setup
1248 v9938-sprite-setup
125E GfxModeRegs
1270 GfxModeParams
12B0 gfx-setupmode
12B8 gfx-updatecolors
12C6 gfx-mode
12D6 Text2ModeRegs
12E8 Text2ModeParams
1328 txt2-setupmode
1336 text2-mode
1346 bit-pixaddr
135A bit-waddr
1360 bit-raddr
1366 bit-setupmode
137A bit-drawchar
13AA (set-bits)
13C4 (reset-bits)
13CC bit-blinkcursor
141C bit-clear
1434 bit-updatecolors
1452 bit-setfont
1454 BitFunctions
1468 BitModeRegs
147A BitModeParams
14BA bit-mode
14CA MonoBitModeRegs
14DC mono-mode
14FE Gfx3ModeRegs
1512 Gfx3ModeParams
1552 gfx3-mode
1562 msx-stdpalette
1584 msx-enhregs
1594 msx-vstatus0
159A msx-pixaddr
15B4 msx-setupmode
15BA msx-cmdsetup
15C2 msx-waitcmdready
15D6 msx-waittxready
15EC msx-setupMMMcommand
15FC msx-cmd-word
1606 msx-setup-cursor-DXDY
1610 msx-blinkcursor
1634 msx-color-temp
1638 msx-clear
1646 msx-updatecolors
16F2 msx-setfont
16F4 msx-use-drawchar-accel
16F6 msx-sendcharpixel
1706 msx-drawchar-accel
176A msx-drawchar-16
17C4 msx-drawchar-4
182A msx-drawchar-256
1896 MsxFunctions
18A6 Gfx4ModeRegs
18B6 Gfx4ModeParams
1906 gfx4-mode
1916 Gfx6ModeRegs
1926 Gfx6ModeParams
1976 gfx6-mode
1986 Gfx5ModeRegs
1998 Gfx5ModeParams
19E8 gfx5-mode
19F8 Gfx7ModeRegs
1A08 Gfx7ModeParams
1A58 gfx7-mode
1A70 mode
1A80 vfill
1A94 (setfont)
1AAA font8x8
1ACA font6x8
1AEA font5x6
1AFE video-init
1B12 t-data
1B16 v-x
1B1A v-y
1B1E win-x
1B22 win-y
1B26 win-sx
1B2A win-sy
1B2E t-data-size
1B32 term-refresh
1B68 term-reset
1B82 home
1B94 xy
1BA4 xy!
1BB0 curs-addr
1BC8 home-col
1BCE ch>xy
1BE2 ch>y
1BF2 ch>x
1C02 win-chsize
1C28 advance-row
1C40 advance-cursor
1C58 cursor-off
1C5E crlf
1C66 bksp
1CB2 chfill
1CDC hchar
1D0A vchar
1D76 cls
1D88 (emit)
1D98 emit
1DC0 getch
1DD4 cr
1DE2 space
1DF0 type
1DFE kbdbufsize
1E02 kbdbuf
1E06 kbdstate
1E0A kbdtimer
1E0E kbddelay
1E12 kbdrate
1E16 kbdshift
1E1A kbdscan
1E1E kbdlast
1E22 kbdflag
1E26 kbdtail
1E2A kbdhead
1E2E timeout
1E32 randnoise
1E36 read-row
1E40 toupper
1E4E buffer-key
1E76 repeat-key
1EB8 lookup-key
1ECC handle-key
1EFA key-actions
1F10 kbd-scan
1F5C kbd-no-key
1F72 kbd-init
1F92 key?
1FA8 (key)
1FC8 key
1FD6 ints-check
1FDC vdp-status
1FE0 vdp-ticks
1FE4 vdp-int-handler
2010 kbd-int-handler
2028 nmi-int-handler
2034 >int-vec
203A set-int-vec
203E enable-int
2050 call-int
205A ints-init
207C ints-on
208C ints-off
2098 pick
20A8 rpick
20B8 cmove
20C6 cmove>
20D2 m/mod
20EC u/mod
20F6 u/
2104 umod
2110 u*
211C fill
212C /STRING
213A |!
2148 &!
215A compare
2192 tolower
21AA comparef
21E8 align-to
2204 base
220E dp
221A (pad)
2228 (#pad)
2236 (spad)
2242 here
2250 decimal
225C hex
226A digit
2280 #ptr
228C demit
229A dtype
22B6 d.d
22CA .d
22DC constant
22E8 /cells
22F2 (d)
2300 DEPTH
2312 RDEPTH
2322 TUCK
232C 2!
233A 2@
234A ALIGN
235C ALIGNED
236A CHAR+
2376 CHARS
2382 CELL+
238E DABS
239E MOVE
23B4 */
23C2 */MOD
23CE /
23DC /MOD
23EA ABS
23FC FM/MOD
2422 M*
243A MAX
244C MIN
245E MOD
246C SM/REM
248A (skip)
2494 dn*
24AA >digit
24E4 >NUMBER
250E ]
251A s,
2534 SLITERAL
2542 S"
2568 (abort")
258E ABORT"
25A6 hld
25B2 -pad
25BC <#
25CA HOLD
25DA (#)
25EE #
25FC #>
260C #S
2618 .
2624 BL
2630 SIGN
2644 SPACES
265E U.
266C COUNT
267A (>c)
2692 (parse-word)
26A0 WORD
26B0 overstrike
26C8 ACCEPT
271A ENVIRONMENT?
2728 (quit?)
273E (pause?)
275A #TIB
2764 0<>
276E <>
2778 .R
279A ERASE
27A4 NIP
27AE PAD
27BC (match)
27E4 (src>)
27FE (>src)
280C PARSE
281A (skip-spaces)
2842 U.R
285C WITHIN
286A BLK
2874 C/L
287C \
28A0 D.R
28BC D.
28CA UD.R
28E0 UD.
28EC .S
2926 r.S
295E ?
2962 message
2A5C ?error
2A76 CHARS/BLOCK
2A82 L/BLK
2A8E FIRST
2A9A PREV
2AA6 LIMIT
2AB0 USE
2ABA SCR
2AC8 (b/blk)
2AD4 RWBLK
2AE0 R/W
2AEE +BUF
2B0E buffer
2B3E block
2B76 dirty?
2B88 revert
2B98 update
2BB2 save-buffers
2BD6 flush
2BEA EMPTY-BUFFERS
2C0A load
2C3A ?loading
2C4A -->
2C58 thru
2C6E (line)
2C80 .line
2C98 list
2CBE index
2CE0 >latest
2CEE latest
2CF2 |immed
2CF6 |srch
2D06 traverse
2D3C nfa>xt
2D4A xt>nfa
2D5A nfa>imm?
2D6C lfa>nfa
2D74 >id
2D80 id.
2D90 width
2D98 '
2DBA ,
2DCA >BODY
2DD8 ALLOT
2DE6 C,
2DF8 (find)
2E1A nfa=
2E44 (lookup)
2E58 FIND
2E76 [']
2E88 IMMEDIATE
2E9E UNUSED
2EAC dwalk
2EC0 .word
2ECE WORDS
2ED6 docol!
2ED8 dovar,
2EE0 douser,
2EFA dodoes,
2F02 xt!
2F0E docol,
2F10 dodefer!
2F1E (compile)
2F28 jmpoffs,
2F3E jmpoffsalloc,
2F6A >fixup
2F78 loop,
2F86 (does>)
2F98 does>
2FB6 lastnfa
2FC6 lastxt
2FD0 [
2FDE noop
2FE8 ?comp
2FFC smudge
3008 parse-name
301C name"
303E CREATE
306E per-line
3084 2u.
3096 4u.
30B0 (dmpln)
3110 (dmp)
3138 dump
3150 vdump
316C [COMPILE]
318A POSTPONE
31A0 csp
31A4 leave-list
31B0 !csp
31C2 ?csp
31D2 :
31E6 ;
31FC ?pairs
320A BACK
3218 IF
322C THEN
3240 ELSE
3252 (leave)
3268 DO
327A ?DO
3288 leave-resolve
329E loop-compile
32C4 LOOP
32D4 +LOOP
32E4 ULOOP
32F6 U+LOOP
3308 UNLOOP
3316 LEAVE
3328 BEGIN
3336 UNTIL
334A AGAIN
335E WHILE
336C REPEAT
3382 RECURSE
3390 EXIT
33A0 DEFER
33B8 VARIABLE
33C4 UDP
33D0 USER
33EC :NONAME
340A env:
341A has?
342C (
343A >IN
3446 CHAR
3458 REFILL
34B0 RESTORE-INPUT
34EE SAVE-INPUT
350E SOURCE-ID
3524 >tib
352E TIB
353E loadfile
354E loadline
355C <input
3582 input>
35A4 ,"
35BE ?stack
35E2 huh?
35F6 dpl
3604 number
3662 interpreter
36A2 interpret
36BE EVALUATE
36E8 (clrsrc)
36FE QUIT
3742 SOURCE
3760 [CHAR]
376E str=
377E comment?
37A4 [ELSE]
3838 [THEN]
3844 [ENDIF]
384E [IF]
3860 defined?
3876 [IFUNDEF]
3886 [IFDEF]
388C regs-init
38BC cold-init
38E2 'quit
38F6 abort
3916 cycle
393C snd
3954 delay
3966 blast0
398E blast1
39B6 square
39C6 bootup
