0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
0608 lp@
0612 lp!
061E (do)
062C (loop)
0638 (+loop)
0644 (uloop)
0652 (u+loop)
065C (?do)
066E execute
0678 ?dup
0682 2dup
0694 (context>)
06A4 (>context)
06B0 (user)
06B8 0<
06C2 0<=
06CC 0>
06D6 0>=
06E0 0U<
06EC 0U<=
06F6 0U>
0702 0U>=
070A <
0712 <=
0718 >
0720 >=
0728 U<
0730 U<=
0738 U>
0740 U>=
0748 D0<
0754 D0<=
075E D0>
076A D0>=
0776 DU0<
0782 DU0<=
078E DU0>
079A DU0>=
07A4 D<
07AE D<=
07B8 D>
07C2 D>=
07CC DU<
07D8 DU<=
07E2 DU>
07EE DU>=
07FE (unloop)
080E 2rdrop
0818 2/
0820 2*
082C LSHIFT
0838 RSHIFT
0844 URSHIFT
0850 CSHIFT
085A SWPB
0868 DLSHIFT
0876 DRSHIFT
0886 DURSHIFT
0894 DCSHIFT
089C *
08A8 2drop
08B2 d>q
08C2 dum/mod
08CC s>d
08D8 true
08E2 false
08EE (fill)
08FA (cfill)
0906 (move)
0912 (cmove)
0920 (LITERAL)
0930 (DLITERAL)
093E ((s"))
0952 (S")
0962 (SYSCALL)
0964 I/O
0966 VDPRD
0968 VDPST
096A VDPWD
096E VDPWA
0972 VDPCL
0976 VDPWI
097A GPLRD
097E GPLRA
0982 GPLWD
0986 GPLWA
098A SPCHRD
098E SPCHWT
0992 KBD
0996 SOUND
099A 'INTS
099E 'INTSP
09A2 M_INT_BKPT
09A4 M_INT_EXT
09A6 M_INT_VDP
09A8 M_INT_KBD
09AC 'KBD
09B0 'KBDA
09B4 'DBG
09B8 ROM
09BC (BOOT)
09C0 (COLD)
09C4 DP0
09C8 (LATEST)
09CC (#RP)
09D0 (#SP)
09D4 (#pad)
09D8 (##-pad)
09DC (#slit-pad)
09E0 (#tib)
09E4 (#blk)
09E8 (#up)
09EC RamTop
09F0 (rp0)
09F4 (sp0)
09F8 (pad0)
09FC (#-pad0)
0A00 (slit-pad0)
0A04 (tib0)
0A08 (first)
0A0C (limit)
0A10 (up0)
0A14 SysCalls
0A18 IntVecs
0A1C INT_RESET
0A20 INT_NMI
0A24 INT_KBD
0A26 INT_VDP
0A28 INT_BKPT
0A2A grom_kbdlist
0A2C grom_font8x8
0A30 grom_font5x6
0A34 CTX_SP
0A36 CTX_RP
0A38 CTX_UP
0A3A CTX_INT
0A3C IbranchX
0A3E I0branchX
0A42 IRfrom
0A46 IatR
0A4A Isub
0A4E Iumul
0A52 Iudivmod
0A56 Iudivmod_d
0A5A Iuser
0A5E Iupidx
0A62 IloopUp
0A66 IuloopUp
0A6A IplusLoopUp
0A6E IuplusLoopUp
0A72 Icfill
0A76 Icmove
0A7A Iexit
0A7E Idovar
0A82 Isyscall
0A86 IlitB
0A8A IlitW
0A8E IbranchB
0A92 I0branchB
0A96 Idup_d
0A9A ItoR_d
0A9E Irdrop_d
0AA2 Irpidx
0AA6 #idle
0AA8 #dbg
0AAA #dbgf
0AAC #regsym
0AAE (dbg)
0AB6 (dbgf)
0ABE (idle)
0AC6 (register-symbol)
0ACE UP
0AD2 ramptr
0AD6 rp0
0ADA sp0
0ADE (pad)
0AE2 (#pad)
0AE6 (spad)
0AF2 STATE
0B00 literal
0B3C dliteral
0B86 >call
0B9A compile,
0C30 RamVar
0C48 vwaddr
0C56 !vwaddr
0C6A vsetbank
0C84 +vwaddr
0C96 +!vwaddr
0CAA gwaddr
0CB8 graddr
0CC4 g@
0CD8 gc@
0CE4 vc@
0CF0 vc!
0D02 (vmbr)
0D12 vmbr
0D22 (vmbw)
0D32 vmbw
0D42 gvmove
0D5A >bit
0D74 +Nfield
0D78 +field
0D7C +1field
0D80 v-data
0D84 v-screen
0D88 v-screensz
0D8C v-patts
0D90 v-pattsz
0D94 v-colors
0D98 v-colorsz
0D9C v-sprites
0DA0 v-sprcol
0DA4 v-sprpat
0DA8 v-sprmot
0DAC v-free
0DB0 v-width
0DB4 v-height
0DB8 v-ccols
0DBC v-crows
0DC0 v-chwidth
0DC4 v-chheight
0DC8 v-mono
0DCC 'v-coordaddr
0DD0 'v-drawchar
0DD4 'v-savechar
0DD8 'v-restorechar
0DDC 'v-drawcursor
0DE0 'v-setupmode
0DE4 'v-updatecolors
0DE8 'v-setfont
0DEC 'v-clear
0DF0 'v-hchar
0DF4 'v-vchar
0DF8 bit-cursor
0DFC msx-stride
0E00 msx-shift
0E04 msx-mask
0E08 v-regsave
0E0C v-data-size
0E10 v-font
0E14 w>b
0E1E write-vregaddr
0E38 get-vreg
0E3E (>LOCALS)
0E46 (LOCALS>)
0E50 write-vregs
0E68 vid-show
0E76 >v-fontaddr
0E82 v-curs-under
0E86 v-curs
0E8A v-cursor-timer
0E8E v-cursor-blink
0E92 write-var-list
0EA2 (mode)
0EC2 fg
0EC6 bg
0ECA color-byte
0ED8 color-word
0EE8 v-refresh-colors
0EF4 fg!
0F04 bg!
0F14 fg@
0F1E bg@
0F22 vreset
0F34 vstdpal
0F36 v-cursor-on
0F54 v-cursor-off
0F6E update-cursor
0F8C video-modes
0FAC text
0FB4 gfx
0FC0 bitmap
0FCA gfx2
0FD4 gfx3
0FDE gfx4
0FE8 gfx5
0FF2 gfx6
0FFC gfx7
1006 text2
1012 mono
101E multi
1022 last-video-mode
102E #scr
1038 #ssz
1042 #col
104C #csz
1056 #pat
1060 #psz
106A #spt
1074 #spr
107E #smt
108A #spc
1096 #fre
109A txt-coordaddr
10A8 txt-waddr
10AC txt-raddr
10B2 txt-drawchar
10B8 txt-savechar
10BE txt-restorechar
10C6 txt-drawcursor
10CE range-wrap
10EE txt-hchar
1106 txt-vchar
114E txt-setupmode
1150 txt-updatecolors
115A txt-clear
1168 std-setfont
118C TextFunctions
11B4 TextModeParams
11F4 TextModeRegs
1200 text-mode
1210 (sprite-setup)
1230 std-sprite-setup
123C v9938-sprite-setup
1252 GfxModeRegs
1264 GfxModeParams
12A4 gfx-setupmode
12A8 gfx-updatecolors
12B6 gfx-mode
12C6 Text2ModeRegs
12D8 Text2ModeParams
1318 txt2-setupmode
1326 text2-mode
1336 bit-cursor-8
1340 bit-cursor
1344 bit-pixaddr
1358 bit-waddr
135C bit-raddr
1360 bit-setupmode
1376 bit-coordaddr
1388 bit-drawchar
13B4 bit-savechar
13C0 bit-restorechar
13CA bit-drawcursor
13D6 bit-clear
13EE bit-updatecolors
140C bit-setfont
141A BitFunctions
1442 BitModeRegs
1454 BitModeParams
1494 bit-mode
14AA MonoBitModeRegs
14BC mono-mode
14E4 Gfx3ModeRegs
14F8 Gfx3ModeParams
1538 gfx3-mode
1554 msx-stdpalette
1576 msx-enhregs
1586 msx-vstatus0
158C msx-colorbyte
1594 msx-pixaddr
15A8 msx-setupmode
15AE msx-coordaddr
15BE msx-cmdsetup
15C6 msx-waitcmdready
15CE msx-waittxready
15D6 msx-setupMMMcommand
15E6 msx-cmd-word
15F0 msx-setup-cursor-DXDY
15FA msx-sendcharpixel
160A msx-drawchar
1674 msx-savechar
1678 msx-restorechar
167C msx-drawcursor
1680 msx-clear
168E msx-updatecolors
1698 msx-setfont
169A MsxFunctions
16C2 Gfx4ModeRegs
16D2 Gfx4ModeParams
171E gfx4-mode
1742 mode
1752 vfill
1768 (setfont)
177E font8x8
1794 video-init
17A8 vx
17AC vy
17B0 win-x
17B4 win-y
17B8 win-sx
17BC win-sy
17C0 term-refresh
17DE term-reset
17FA home
1804 xy
180C xy!
1814 curs-addr
1828 advance-row
183E advance-cursor
184E cursor-off
1854 crlf
1858 bksp
1888 chfill
18A8 hchar
18D4 vchar
1920 cls
1932 (emit)
1942 emit
1966 cr
1974 space
1982 type
1990 kbdbufsize
1994 kbdbuf
1998 kbdstate
199C kbdtimer
19A0 kbddelay
19A4 kbdrate
19A8 kbdshift
19AC kbdscan
19B0 kbdlast
19B4 kbdflag
19B8 kbdtail
19BC kbdhead
19C0 timeout
19C4 randnoise
19C8 read-row
19D2 toupper
19E0 buffer-key
1A08 repeat-key
1A4A lookup-key
1A5E handle-key
1A8C key-actions
1AA2 kbd-scan
1AEE kbd-no-key
1B04 kbd-init
1B24 key?
1B38 (key)
1B58 key
1B66 ints-check
1B6C vdp-status
1B70 vdp-ticks
1B74 vdp-int-handler
1BA0 kbd-int-handler
1BB8 nmi-int-handler
1BBC >int-vec
1BC2 set-int-vec
1BC6 enable-int
1BD8 call-int
1BE2 ints-init
1C04 ints-on
1C14 ints-off
1C20 pick
1C30 rpick
1C40 cmove
1C4E cmove>
1C5A m/mod
1C74 u/mod
1C7E u/
1C8C umod
1C98 u*
1CA4 fill
1CB4 /STRING
1CC2 |!
1CD0 &!
1CE2 compare
1D1A tolower
1D32 comparef
1D6C base
1D76 dp
1D82 (pad)
1D90 (#pad)
1D9E (spad)
1DAA here
1DB8 decimal
1DC4 hex
1DD2 digit
1DE8 #ptr
1DF4 demit
1E02 dtype
1E1E d.d
1E32 .d
1E44 constant
1E50 /cells
1E5A (d)
1E68 DEPTH
1E7A RDEPTH
1E8A TUCK
1E94 2!
1EA2 2@
1EB2 ALIGN
1EC4 ALIGNED
1ED2 CHAR+
1EDE CHARS
1EEA CELL+
1EF6 DABS
1F06 MOVE
1F1C */
1F2A */MOD
1F36 /
1F44 /MOD
1F52 ABS
1F64 FM/MOD
1F8A M*
1FA2 MAX
1FB4 MIN
1FC6 MOD
1FD4 SM/REM
1FF2 (skip)
1FFC dn*
2012 >digit
204C >NUMBER
2076 ]
2082 s,
209C SLITERAL
20AA S"
20D0 (abort")
20F6 ABORT"
210E hld
211A -pad
2124 <#
2132 HOLD
2142 (#)
2156 #
2164 #>
2174 #S
2180 .
218C BL
2198 SIGN
21AC SPACES
21C6 U.
21D4 COUNT
21E2 (>c)
21FA (parse-word)
2208 WORD
2218 overstrike
2230 ACCEPT
2282 ENVIRONMENT?
2290 (quit?)
22A6 (pause?)
22C2 #TIB
22CC 0<>
22D6 <>
22E0 .R
2302 ERASE
230C NIP
2316 PAD
2324 (match)
234C (src>)
2366 (>src)
2374 PARSE
2382 (skip-spaces)
23AA U.R
23C4 WITHIN
23D2 BLK
23DC C/L
23E4 \
2408 D.R
2424 D.
2432 UD.R
2448 UD.
2454 .S
248E r.S
24C6 ?
24CA message
25C4 ?error
25DE CHARS/BLOCK
25EA L/BLK
25F6 FIRST
2602 PREV
260E LIMIT
2618 USE
2622 SCR
2630 (b/blk)
263C RWBLK
2648 R/W
2656 +BUF
2676 buffer
26A6 block
26DE dirty?
26F0 revert
2700 update
271A save-buffers
273E flush
2752 EMPTY-BUFFERS
2772 load
27A2 ?loading
27B2 -->
27C0 thru
27D6 (line)
27E8 .line
2800 list
2826 index
2848 >latest
2856 latest
285A |immed
285E |srch
286E traverse
28A4 nfa>xt
28B2 xt>nfa
28C2 nfa>imm?
28D4 lfa>nfa
28DC >id
28E8 id.
28F8 width
2900 '
2922 ,
2932 >BODY
2940 ALLOT
294E C,
2960 (find)
296C FIND
298A [']
299C IMMEDIATE
29B2 UNUSED
29C0 dwalk
29D4 .word
29E2 WORDS
29EA docol!
29EC dovar,
29F4 douser,
2A0E dodoes,
2A16 xt!
2A22 docol,
2A24 dodefer!
2A32 (compile)
2A3C jmpoffs,
2A52 jmpoffsalloc,
2A7A >fixup
2A88 loop,
2A96 lastnfa
2AA6 lastxt
2AB6 (does>)
2AC8 does>
2AD8 [
2AE6 noop
2AF0 ?comp
2B04 smudge
2B10 parse-name
2B24 name"
2B46 CREATE
2B76 per-line
2B8C 2u.
2B9E 4u.
2BB8 (dmpln)
2C18 (dmp)
2C40 dump
2C58 vdump
2C74 [COMPILE]
2C92 POSTPONE
2CA8 csp
2CAC leave-list
2CB8 !csp
2CCA ?csp
2CDA :
2CEE ;
2D04 (does>)
2D14 ?pairs
2D22 BACK
2D32 BEGIN
2D3E IF
2D52 THEN
2D66 ELSE
2D78 (leave)
2D8E DO
2DA0 ?DO
2DAE leave-resolve
2DC4 loop-compile
2DEA LOOP
2DFA +LOOP
2E0A ULOOP
2E1C U+LOOP
2E2E UNLOOP
2E3C LEAVE
2E4E UNTIL
2E62 AGAIN
2E76 WHILE
2E84 REPEAT
2E9A RECURSE
2EA8 EXIT
2EB8 DEFER
2ED0 VARIABLE
2EDC UDP
2EE8 USER
2F04 :NONAME
2F22 env:
2F32 has?
2F44 (
2F52 >IN
2F5E CHAR
2F70 REFILL
2FC8 RESTORE-INPUT
3006 SAVE-INPUT
3026 SOURCE-ID
303C >tib
3046 TIB
3056 loadfile
3066 loadline
3074 <input
309A input>
30BE (>c)
30CC ,"
30E6 (find)
3108 nfa=
3132 (lookup)
3148 ?stack
316C huh?
3180 dpl
318E number
31EC interpreter
322C interpret
3248 EVALUATE
3272 (clrsrc)
3288 QUIT
32CC SOURCE
32EA [CHAR]
32F8 str=
3308 comment?
332E [ELSE]
33C2 [THEN]
33CE [ENDIF]
33D8 [IF]
33EA defined?
3400 [IFUNDEF]
3410 [IFDEF]
3416 regs-init
3446 cold-init
346C 'quit
3480 abort
34A0 cycle
34C0 bootup
