0408 cell
040A cells
040E ;S
0410 @
0412 c@
0414 d@
0418 !
041A c!
041C d!
0420 +!
0422 c+!
0424 d+!
0428 1+
042A 2+
042C 1-
042E 2-
0430 dup
0432 drop
0434 swap
0436 2swap
043A over
043C 2over
0440 rot
0442 2rot
0446 0=
0448 D0=
044C =
044E D=
0452 0branch
0454 branch
0456 negate
0458 dnegate
045C +
045E d+
0462 -
0464 d-
0468 um*
046A um/mod
046C nip
0470 invert
0472 dinvert
0476 not
0478 dnot
047C or
047E dor
0482 and
0484 dand
0488 xor
048A dxor
048E nand
0490 dnand
0494 >r
0496 2>r
049A r>
049C 2r>
04A0 rdrop
04A2 r@
04A4 i
04A6 i'
04AA j
04AE j'
04B2 k
04B6 k'
04BA sp@
04BE sp!
04C2 rp@
04C6 rp!
04CA lp@
04CE lp!
04D2 (do)
04D6 (loop)
04D8 (+loop)
04DA (uloop)
04DC (u+loop)
04DE (?do)
04E6 execute
04E8 ?dup
04EA 2dup
04EE (context>)
04F0 (>context)
04F2 (user)
04F4 0<
04F8 0<=
04FC 0>
0500 0>=
0504 0U<
0508 0U<=
050C 0U>
0510 0U>=
0514 <
0516 <=
0518 >
051A >=
051C U<
051E U<=
0520 U>
0522 U>=
0524 D0<
0528 D0<=
052C D0>
0530 D0>=
0534 DU0<
0538 DU0<=
053C DU0>
0540 DU0>=
0544 D<
0548 D<=
054C D>
0550 D>=
0554 DU<
0558 DU<=
055C DU>
0560 DU>=
0564 (unloop)
056A 2rdrop
056E 2/
0570 2*
0572 LSHIFT
0574 RSHIFT
0576 URSHIFT
0578 CRSHIFT
057A SWPB
057E DLSHIFT
0582 DRSHIFT
0586 DURSHIFT
058A DCRSHIFT
058E *
0592 2drop
0596 d>q
059C dum/mod
05A0 s>d
05A4 true
05A6 false
05A8 (fill)
05AA (cfill)
05AC (cmove)
05AE (LITERAL)
05B0 (DLITERAL)
05B4 ((s"))
05C0 (S")
05C4 (SYSCALL)
05C6 CHARS/BLOCK
05CA (dbg)
05D2 (dbgf)
05DA (idle)
05E2 (register-symbol)
05EA UP0
05EE >call
05F6 call>
05FA call,
0600 inlineable
061E inlineable-imm
064C STATE
0650 literal
0680 dliteral
06C2 compile,
0794 RamVar
07A2 +Nfield
07A6 +field
07AA +1field
07AE msg:
07B2 vwaddr
07B6 !vwaddr
07BE +vwaddr
07C4 +!vwaddr
07CE gwaddr
07D2 graddr
07D8 g@
07E6 gc@
07EC vc@
07F2 vc!
07F8 +vc@
07FE +vc!
0804 vfill
080E +vfill
0818 +gvmove
0826 vcmove
083A cvmove
084E gcmove
0862 cgmove
0876 >bit
0890 (gtype)
089E gtype
08A2 v-data
08A6 v-screen
08AA v-screensz
08AE v-patts
08B2 v-pattsz
08B6 v-colors
08BA v-colorsz
08BE v-sprites
08C2 v-sprcol
08C6 v-sprpat
08CA v-sprmot
08CE v-free
08D2 video-modes
08EA text
08EC gfx
08EE bitmap
08F0 gfx2
08F2 gfx3
08F4 gfx4
08F6 gfx5
08F8 gfx6
08FA gfx7
08FC text2
0900 mono
0904 multi
0908 vsetbank
091C >vr
092C v-regaddr
0942 (vr!)
0952 (vr@)
0958 write-vregs
096E vid-show
0982 std-set-screen-reg
0994 std-set-color-reg
09AC std-set-patt-reg
09BE std-set-sprite-reg
09D6 std-set-sprpat-reg
09E8 >v-fontaddr
09F4 v-curs-under
09F8 v-curs
09FC v-cursor-timer
0A00 write-var-list
0A10 v-set-alloc-list
0A18 (mode)
0A5C fg
0A60 bg
0A64 color-byte
0A72 color-word
0A82 v-refresh-colors
0A88 fg!
0A92 bg!
0A9C fg@
0AA0 bg@
0AA4 msx-enhregs
0AB4 (vreset)
0AC4 vreset
0ADC vstdpal
0AF4 v-cursor-off
0B04 update-cursor
0B1C (sprite-setup)
0B3C std-sprite-setup
0B48 v9938-sprite-setup
0B5E txt-choffs
0B66 txt-chaddr
0B6E txt-waddr
0B74 txt-drawchar
0B7A txt-readchar
0B82 txt-blinkcursor
0BA8 range-wrap
0BC8 (txt-hchar)
0BE0 txt-hchar
0BE6 txt-vchar
0C2A txt-setupmode
0C30 txt-updatecolors
0C3A txt-clear
0C6C std-setfont
0CC4 TextFunctions
0CE4 TextModeParams
0D2C TextModeRegs
0D34 txt-setupregs
0D3A text-mode
0D48 GfxModeRegs
0D50 GfxModeParams
0D98 gfx-setupregs
0DA2 gfx-setupmode
0DAA gfx-updatecolors
0DB8 gfx-mode
0DC6 >txt2-coloraddr
0DD6 txt2-drawchar
0DFE txt2-clear
0E2A txt2-hchar
0E48 (txt2-hchar-colors)
0EC2 txt2-vchar
0EFE txt2-setupregs
0F04 Text2ModeRegs
0F0E Text2Functions
0F22 Text2ModeParams
0F6A txt2-setupmode
0F7A text2-mode
0F8C bit-pixaddr
0FA0 bit-chaddr
0FAA bit-setupmode
0FC0 bit-drawchar
0FEE (set-bits)
1008 (reset-bits)
1010 bit-blinkcursor
1060 bit-clear-rows
1090 bit-clear
10D4 bit-updatecolors
10F0 bit-setfont
10F2 bit-set-patt-reg
1106 bit-set-color-reg
1126 bit-setupregs
1132 BitFunctions
1146 BitModeRegs
114E BitModeParams
1196 bit-mode
11A4 MonoBitModeRegs
11AC MonoModeParams
11F4 mono-mode
1206 Gfx3ModeRegs
120E Gfx3ModeParams
1256 gfx3-setupregs
125E gfx3-mode
126C msx-stdpalette
128E msx-vstatus0
1294 msx-pixaddr
12AE msx-setupmode
12CA msx-cmdsetup
12D2 msx-waitcmdready
12E6 msx-waittxready
12FC msx-setupMMMcommand
130C msx-cmd-word
1316 msx-setup-cursor-DXDY
1328 msx-cursor-color
132C msx-adjust-cursor-color
132E msx-blinkcursor
1352 msx-color-temp
1356 msx-updatecolors
141C msx-setfont
141E msx-clear
1462 msx-sendcharpixel
1472 msx-drawchar-accel
14D6 msx-crosses-bank
14EC msx-drawchar-16
155E msx-drawchar-4
15DC msx-drawchar-256
164C msx-set-patt-reg
1656 msx-set-sprite-reg
166A msx-setupregs
1672 MsxFunctions
1682 Gfx4ModeRegs
168A Gfx4ModeParams
16E6 gfx4-mode
16F4 Gfx6ModeRegs
16FC Gfx6ModeParams
1758 gfx6-mode
1766 Gfx5ModeRegs
1770 Gfx5ModeParams
17CC gfx5-mode
17DA Gfx7ModeRegs
17E2 Gfx7ModeParams
183E gfx7-mode
184C mode
1854 (setfont)
1860 v-font!
186E font!
187C font8x8
1886 font6x8
188E font5x6
1896 <video
18A4 video>
18AA vblink!
18B2 vrwpage
194A vvispage
199E vpage
19AE video-init
19CE sound-vclear
19E4 sound-off
19FC sound-init
1A00 t-data
1A04 term-refresh
1A50 term-reset
1A5A (win-update)
1A78 home
1A7E .xy
1A88 .at-xy
1AA0 xy
1ABE at-xy
1AD6 .win!
1B3A win!
1B64 full!
1B6C .win@
1B7E win@
1B9C $xy
1BB0 txt-xy>addr
1BC8 home-col
1BCE ch>xy
1BE2 ch>y
1BF2 ch>x
1C02 advance-row
1C1A new-line
1C4E advance-cursor
1C64 cursor-off
1C6E crlf
1C74 bksp
1CB6 chfill
1CD4 hchar
1CFE vchar
1D68 cls
1DA0 (emit)
1DA8 (emit+)
1DB8 emit
1DEC getch
1DFA cr
1E00 space
1E06 type
1E14 #vrs
1E1A vsave
1E36 vrestore
1E6E kbdbuf
1E72 kbdstate
1E76 randnoise
1E7A read-row
1E84 toupper
1E92 buffer-key
1EBA key-actions
1ED0 repeat-key
1F12 lookup-key
1F2A handle-key
1F5A kbd-scan
1FBA kbd-no-key
1FD0 kbd-init
1FEE key?
1FFC (key)
2016 key
201C kshift
2022 ints-on
2026 ints-off
202A pick
2032 rpick
203A cmove
203E cmove>
2042 m/mod
2054 u/mod
2058 u/
205E umod
2064 u*
2068 U*/MOD
206E U*/
2072 fill
2076 rp0
207A sp0
207E (find)
2082 (gfind)
2086 /STRING
208E |!
2096 &!
209E tolower
20AA s<>
20DC %-
20F0 w>b
20FA umax
2106 umin
2112 base
2116 dp
211A here
211E decimal
2124 hex
212A digit
2138 #ptr
213C demit
2142 dtype
2158 d.d
2166 .d
216C /cells
2170 (d)
2176 DEPTH
217E RDEPTH
2186 TUCK
218A 2!
2192 2@
219A ALIGN
21A2 ALIGNED
21A8 CHAR+
21AC CHARS
21B0 CELL+
21B4 DABS
21BC MOVE
21CC */
21D2 */MOD
21DA /
21E0 /MOD
21E8 ABS
21F0 FM/MOD
2210 M*
2222 MAX
222E MIN
223A MOD
223E SM/REM
225C (skip)
2260 dn*
226C >digit
229C >NUMBER
22C2 ]
22C8 s,
22D6 SLITERAL
22DE S"
22F8 (abort")
2314 ABORT"
2326 hld
232A -pad
2330 <#
2336 HOLD
2340 (#)
2350 #
2358 #>
2362 #S
236A .
2370 BL
2374 SIGN
237E SPACES
2392 U.
2398 COUNT
239E (>c)
23A6 (parse-word)
23AC WORD
23BC overstrike
23CA ACCEPT
240C ENVIRONMENT?
2410 (quit?)
241A (pause?)
242E 0<>
2432 <>
2436 .R
2450 ERASE
2454 PAD
245C (match)
2488 (src>)
2498 (>src)
249E (PARSE)
24B6 PARSE
24C8 (skip-spaces)
24EA U.R
24FA WITHIN
2502 BLK
2506 C/L
250A \
251E D.R
2534 D.
253A UD.R
254A UD.
2550 .S
2584 r.S
25B8 ?
25BC ?error
25C8 >message
25D2 message
25F8 L/BLK
25FC FIRST
2600 PREV
2604 LIMIT
2608 USE
260C SCR
2610 R/W
2616 +BUF
262C buffer
2654 block
2682 dirty?
268A revert
2690 update
269A save-buffers
26B6 flush
26BA EMPTY-BUFFERS
26D2 load
26E6 ?loading
26EE -->
26F4 thru
2700 (line)
270A .line
2722 list
2740 index
2758 latest
275C traverse
2786 nfa>xt
278A xt>nfa
278E nfa>imm?
2796 lfa>nfa
2798 nfa>lfa
279A >id
27A0 id.
27A8 width
27AC '
27C0 ,
27C8 >BODY
27CE ALLOT
27D6 C,
27DE FIND
27FC (lookup)
2806 [']
280C IMMEDIATE
2818 UNUSED
281E dwalk
2832 .word
2838 WORDS
2844 FORGET
2858 docol!
285A docon,
2862 dovalue,
286E do>to,
2870 dovar,
2878 douser,
2896 dodoes,
289E xt!
28A0 docol,
28A2 dodefer!
28A4 (compile)
28AE jmpoffs,
28C4 jmpoffsalloc,
28E6 >fixup
28EC loop,
28F0 (does>)
28FA does>
290E dodefer,
291A is-check
2932 is,
2938 is?,
293C lastnfa
2942 lastxt
2948 [
294E noop
2950 ?comp
2958 smudge
2964 parse-name
2972 name"
298A CREATE
29AE per-line
29BE 2u.
29CA 4u.
29DA (dmpln)
2A32 (dmp)
2A52 dump
2A62 vdump
2A72 [COMPILE]
2A84 POSTPONE
2A94 csp
2A98 !csp
2AA2 ?csp
2AAE :
2ABE ;
2ACA ?pairs
2AD0 BACK
2AD8 IF
2AE4 THEN
2AF0 ELSE
2B02 (leave)
2B12 DO
2B1E ?DO
2B2C leave-resolve
2B42 loop-compile
2B60 LOOP
2B68 +LOOP
2B70 ULOOP
2B78 U+LOOP
2B80 UNLOOP
2B86 LEAVE
2B90 BEGIN
2B96 UNTIL
2BA2 AGAIN
2BAE WHILE
2BB2 REPEAT
2BBE RECURSE
2BC4 EXIT
2BCC DEFER
2BD6 IS
2BDC IS?
2BE2 CONSTANT
2BEC VARIABLE
2BF2 VALUE
2BFC TO
2C10 UDP
2C14 USER
2C26 :NONAME
2C30 env:
2C38 has?
2C46 (
2C4E >IN
2C52 CHAR
2C58 REFILL
2CA4 RESTORE-INPUT
2CD4 SAVE-INPUT
2CE8 SOURCE-ID
2CF6 loadfile
2CFA loadline
2CFE <input
2D1A input>
2D36 ,"
2D46 ?stack
2D62 huh?
2D70 number
2DCE interpreter
2DFC (parse-name)
2E04 interpret
2E12 EVALUATE
2E30 (clrsrc)
2E3E QUIT
2E76 SOURCE
2E8A [CHAR]
2E90 str=
2E94 comment?
2EB0 [ELSE]
2F3A [THEN]
2F3C [ENDIF]
2F3E [IF]
2F44 defined?
2F4E [IFUNDEF]
2F54 [IFDEF]
2F5A guard
2F6E toss
2F84 unguard
2F94 ?toss
2F9A wait4
2FD4 fdc-ready
2FE4 fdc-wait-ready
2FEE fdc-command
2FFC dsk-flg!
3016 dsk-flg?
301C motor
3022 seek-command
3028 seek-track
3052 sec>attrs
305C block>sec
3060 disk-seek-sec
306A drq-ready
3072 (dsk-read)
307A (dsk-write)
3080 xfer
30A8 (disk-rwblk)
30E0 disk-rwblk
30FA gram-rwblk
3126 set-disk
312C DSK1
313E GRAM
3144 RWBLK
3156 io-init
315E baddrs!
31AC baddr
31B0 baddr)
31B4 (>lend)
31DC >lend
31E2 to-line
31F4 laddrs!
320E >llen
3216 >curs
321E delete-range
325E insert-range
32B4 fl|
32BA ^curs
32D4 ^del
32E4 ^ins
32F0 ^chr
32F8 caddr>col!
3300 ^home
3324 ^end
3346 space-to-column
3368 ^char
337E +tab
3390 ~curs
33AC [line)
33B6 ~del
33C0 ~ins>
33D0 ~ins
33DC (~copy)
33EC !copy-line
33F2 !paste
3414 ~dup
341C 'fl
3420 pause
342C trace
3440 !left
344A !right
3454 !up
345C !down
3464 !block-down
346A !block-up
3470 !dup-line
3476 !home-line
3478 !end-line
3484 (erase)
348C !erase
3492 !erase-to
349C !ins/ovr
34A4 fix-column
34B0 !bksp
34BA (tab)
34C8 !tab
34DC !untab
34F0 !enter
3512 !join
351A !clear
3522 !load
352C !exit
3530 !interpret
353A draw-window
35B6 !refresh
35BC !help
35F8 edittab
3676 edit.char
3684 onkey
36C4 init-editor
36D2 save-video
36E4 editor.exit
36F0 intp.window
36FC edit.window
3702 edit.drawui
37A4 edit.drawstatus
3830 drawline
387C edit.drawline
3886 #drawline
38A0 edit.drawblock
38B4 surround
38FA edit.scroll
390E edit.lastpos!
3922 edit.update
3994 edit.fixblock
39A4 (edit)
39B8 edit
39DC >edit
39E2 regs-init
3A00 cold-init
3A1E 'quit
3A32 abort
3A3C cycle
3A5C snd
3A6C delay
3A74 blast0
3A92 blast1
3AB0 square
3AC0 hang
3AC6 bootup
3AE4 ints-check
3AEA vdp-status
3AEE vdp-ticks
3AF2 vdp-timeout
3AF6 v-intflag-off?
3AFE vdp-int-handler
3B3E kbd-int-handler
3B56 nmi-int-handler
3B68 fault-int-handler
3B78 >int-vec
3B7E set-int-vec
3B82 enable-int
3B94 call-int
3B9E ints-init
