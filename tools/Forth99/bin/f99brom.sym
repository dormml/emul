0408 cell
040A cells
040E ;S
0410 @
0412 c@
0414 d@
0418 !
041A c!
041C d!
0420 +!
0422 c+!
0424 d+!
0428 1+
042A 2+
042C 1-
042E 2-
0430 dup
0432 drop
0434 swap
0436 2swap
043A over
043C 2over
0440 rot
0442 2rot
0446 0=
0448 D0=
044C =
044E D=
0452 0branch
0454 branch
0456 negate
0458 dnegate
045C +
045E d+
0462 -
0464 d-
0468 um*
046A um/mod
046C nip
0470 invert
0472 dinvert
0476 not
0478 dnot
047C or
047E dor
0482 and
0484 dand
0488 xor
048A dxor
048E nand
0490 dnand
0494 >r
0496 2>r
049A r>
049C 2r>
04A0 rdrop
04A2 r@
04A4 i
04A6 i'
04AA j
04AE j'
04B2 k
04B6 k'
04BA sp@
04BE sp!
04C2 rp@
04C6 rp!
04CA lp@
04CE lp!
04D2 (do)
04D6 (loop)
04D8 (+loop)
04DA (uloop)
04DC (u+loop)
04DE (?do)
04E6 execute
04E8 ?dup
04EA 2dup
04EE (context>)
04F0 (>context)
04F2 (user)
04F4 0<
04F8 0<=
04FC 0>
0500 0>=
0504 0U<
0508 0U<=
050C 0U>
0510 0U>=
0514 <
0516 <=
0518 >
051A >=
051C U<
051E U<=
0520 U>
0522 U>=
0524 D0<
0528 D0<=
052C D0>
0530 D0>=
0534 DU0<
0538 DU0<=
053C DU0>
0540 DU0>=
0544 D<
0548 D<=
054C D>
0550 D>=
0554 DU<
0558 DU<=
055C DU>
0560 DU>=
0564 (unloop)
056A 2rdrop
056E 2/
0570 2*
0572 LSHIFT
0574 RSHIFT
0576 URSHIFT
0578 CRSHIFT
057A SWPB
057E DLSHIFT
0582 DRSHIFT
0586 DURSHIFT
058A DCRSHIFT
058E *
0592 2drop
0596 d>q
059C dum/mod
05A0 s>d
05A4 true
05A6 false
05A8 (fill)
05AA (cfill)
05AC (cmove)
05AE (LITERAL)
05B0 (DLITERAL)
05B4 ((s"))
05C0 (S")
05C4 (SYSCALL)
05C6 CHARS/BLOCK
05CA (dbg)
05D2 (dbgf)
05DA (idle)
05E2 (register-symbol)
05EA UP0
05EE >call
05F6 call>
05FA call,
0600 inlineable
061E inlineable-imm
064C STATE
0650 literal
0680 dliteral
06C2 compile,
0794 RamVar
07A2 +Nfield
07A6 +field
07AA +1field
07AE msg:
07B2 vwaddr
07B6 !vwaddr
07BE +vwaddr
07C4 +!vwaddr
07CE gwaddr
07D2 graddr
07D8 g@
07E6 gc@
07EC vc@
07F2 vc!
07F8 +vc@
07FE +vc!
0804 vfill
080E +vfill
0818 +gvmove
0826 vcmove
083A cvmove
084E gcmove
0862 cgmove
0876 >bit
0890 (gtype)
089E gtype
08A2 v-data
08A6 v-screen
08AA v-screensz
08AE v-patts
08B2 v-pattsz
08B6 v-colors
08BA v-colorsz
08BE v-sprites
08C2 v-sprcol
08C6 v-sprpat
08CA v-sprmot
08CE v-free
08D2 video-modes
08EA text
08EC gfx
08EE bitmap
08F0 gfx2
08F2 gfx3
08F4 gfx4
08F6 gfx5
08F8 gfx6
08FA gfx7
08FC text2
0900 mono
0904 multi
0908 vsetbank
091C >vr
092C v-regaddr
0942 (vr!)
0952 (vr@)
0958 write-vregs
096E vid-show
0982 std-set-screen-reg
0994 std-set-color-reg
09AC std-set-patt-reg
09BE std-set-sprite-reg
09D6 std-set-sprpat-reg
09E8 >v-fontaddr
09F4 v-curs-under
09F8 v-curs
09FC v-cursor-timer
0A00 write-var-list
0A10 v-set-alloc-list
0A18 (mode)
0A5C fg
0A60 bg
0A64 color-byte
0A72 color-word
0A82 v-refresh-colors
0A88 fg!
0A92 bg!
0A9C fg@
0AA0 bg@
0AA4 msx-enhregs
0AB4 (vreset)
0AC4 vreset
0ADC vstdpal
0AF4 v-cursor-off
0B04 update-cursor
0B1C (sprite-setup)
0B3C std-sprite-setup
0B48 v9938-sprite-setup
0B5E txt-choffs
0B66 txt-chaddr
0B6E txt-waddr
0B74 txt-drawchar
0B7A txt-readchar
0B82 txt-blinkcursor
0BA8 range-wrap
0BC8 (txt-hchar)
0BE0 txt-hchar
0BE6 txt-vchar
0C2A txt-setupmode
0C30 txt-updatecolors
0C3A txt-clear
0C6C std-setfont
0CC4 TextFunctions
0CE4 TextModeParams
0D2C TextModeRegs
0D34 txt-setupregs
0D3A text-mode
0D48 GfxModeRegs
0D50 GfxModeParams
0D98 gfx-setupregs
0DA2 gfx-setupmode
0DAA gfx-updatecolors
0DB8 gfx-mode
0DC6 >txt2-coloraddr
0DD6 txt2-drawchar
0DFE txt2-clear
0E2A txt2-hchar
0E48 (txt2-hchar-colors)
0EC2 txt2-vchar
0EFE txt2-setupregs
0F04 Text2ModeRegs
0F0E Text2Functions
0F22 Text2ModeParams
0F6A txt2-setupmode
0F7A text2-mode
0F8C bit-pixaddr
0FA0 bit-chaddr
0FAA bit-setupmode
0FC0 bit-drawchar
0FEE (set-bits)
1008 (reset-bits)
1010 bit-blinkcursor
1060 bit-clear-rows
1090 bit-clear
10D4 bit-updatecolors
10F0 bit-setfont
10F2 bit-set-patt-reg
1106 bit-set-color-reg
1126 bit-setupregs
1132 BitFunctions
1146 BitModeRegs
114E BitModeParams
1196 bit-mode
11A4 MonoBitModeRegs
11AC MonoModeParams
11F4 mono-mode
1206 Gfx3ModeRegs
120E Gfx3ModeParams
1256 gfx3-setupregs
125E gfx3-mode
126C msx-stdpalette
128E msx-vstatus0
1294 msx-pixaddr
12AE msx-setupmode
12CA msx-cmdsetup
12D2 msx-waitcmdready
12E6 msx-waittxready
12FC msx-setupMMMcommand
130C msx-cmd-word
1316 msx-setup-cursor-DXDY
1328 msx-cursor-color
132C msx-adjust-cursor-color
132E msx-blinkcursor
1352 msx-color-temp
1356 msx-updatecolors
141C msx-setfont
141E msx-clear
1462 msx-sendcharpixel
1472 msx-drawchar-accel
14D6 msx-crosses-bank
14EC msx-drawchar-16
155E msx-drawchar-4
15DC msx-drawchar-256
164C msx-set-patt-reg
1656 msx-set-sprite-reg
166A msx-setupregs
1672 MsxFunctions
1682 Gfx4ModeRegs
168A Gfx4ModeParams
16E6 gfx4-mode
16F4 Gfx6ModeRegs
16FC Gfx6ModeParams
1758 gfx6-mode
1766 Gfx5ModeRegs
1770 Gfx5ModeParams
17CC gfx5-mode
17DA Gfx7ModeRegs
17E2 Gfx7ModeParams
183E gfx7-mode
184C mode
1854 (setfont)
1860 v-font!
1868 font!
1876 font8x8
1880 font6x8
1888 font5x6
1890 <video
189E video>
18A4 vblink!
18AC vrwpage
1944 vvispage
1998 vpage
19A8 video-init
19C8 sound-vclear
19DE sound-off
19F6 sound-init
19FA t-data
19FE term-refresh
1A4A term-reset
1A54 (win-update)
1A72 home
1A78 .xy
1A82 .at-xy
1A9A xy
1AB8 at-xy
1AD0 .win!
1B34 win!
1B5E full!
1B66 .win@
1B78 win@
1B96 $xy
1BAA txt-xy>addr
1BC2 home-col
1BC8 ch>xy
1BDC ch>y
1BEC ch>x
1BFC advance-row
1C14 new-line
1C48 advance-cursor
1C5E cursor-off
1C68 crlf
1C6E bksp
1CB0 chfill
1CCE hchar
1CF8 vchar
1D62 cls
1D9A (emit)
1DA2 (emit+)
1DB2 emit
1DE6 getch
1DF4 cr
1DFA space
1E00 type
1E0E #vrs
1E14 vsave
1E30 vrestore
1E68 kbdbuf
1E6C kbdstate
1E70 randnoise
1E74 read-row
1E7E toupper
1E8C buffer-key
1EB4 key-actions
1ECA repeat-key
1F0C lookup-key
1F24 handle-key
1F54 kbd-scan
1FB4 kbd-no-key
1FCA kbd-init
1FE8 key?
1FF6 (key)
2010 key
2016 kshift
201C ints-on
2020 ints-off
2024 pick
202C rpick
2034 cmove
2038 cmove>
203C m/mod
204E u/mod
2052 u/
2058 umod
205E u*
2062 U*/MOD
2068 U*/
206C fill
2070 rp0
2074 sp0
2078 (find)
207C (gfind)
2080 /STRING
2088 |!
2090 &!
2098 tolower
20A4 s<>
20D6 %-
20EA w>b
20F4 umax
2100 umin
210C base
2110 dp
2114 here
2118 decimal
211E hex
2124 digit
2132 #ptr
2136 demit
213C dtype
2152 d.d
2160 .d
2166 /cells
216A (d)
2170 DEPTH
2178 RDEPTH
2180 TUCK
2184 2!
218C 2@
2194 ALIGN
219C ALIGNED
21A2 CHAR+
21A6 CHARS
21AA CELL+
21AE DABS
21B6 MOVE
21C6 */
21CC */MOD
21D4 /
21DA /MOD
21E2 ABS
21EA FM/MOD
220A M*
221C MAX
2228 MIN
2234 MOD
2238 SM/REM
2256 (skip)
225A dn*
2266 >digit
2296 >NUMBER
22BC ]
22C2 s,
22D0 SLITERAL
22D8 S"
22F2 (abort")
230E ABORT"
2320 hld
2324 -pad
232A <#
2330 HOLD
233A (#)
234A #
2352 #>
235C #S
2364 .
236A BL
236E SIGN
2378 SPACES
238C U.
2392 COUNT
2398 (>c)
23A0 (parse-word)
23A6 WORD
23B6 overstrike
23C4 ACCEPT
2406 ENVIRONMENT?
240A (quit?)
2414 (pause?)
2428 0<>
242C <>
2430 .R
244A ERASE
244E PAD
2456 (match)
2482 (src>)
2492 (>src)
2498 (PARSE)
24B0 PARSE
24C2 (skip-spaces)
24E4 U.R
24F4 WITHIN
24FC BLK
2500 C/L
2504 \
2518 D.R
252E D.
2534 UD.R
2544 UD.
254A .S
257E r.S
25B2 ?
25B6 ?error
25C2 >message
25CC message
25EC L/BLK
25F0 FIRST
25F4 PREV
25F8 LIMIT
25FC USE
2600 SCR
2604 R/W
260A +BUF
2620 buffer
2648 block
2676 dirty?
267E revert
2684 update
268E save-buffers
26AA flush
26AE EMPTY-BUFFERS
26C6 load
26DA ?loading
26E2 -->
26E8 thru
26F4 (line)
26FE .line
2716 list
2734 index
274C latest
2750 traverse
277A nfa>xt
277E xt>nfa
2782 nfa>imm?
278A lfa>nfa
278C nfa>lfa
278E >id
2794 id.
279C width
27A0 '
27B4 ,
27BC >BODY
27C2 ALLOT
27CA C,
27D2 FIND
27EA (lookup)
27F4 [']
27FA IMMEDIATE
2806 UNUSED
280C dwalk
2820 .word
2826 WORDS
2832 FORGET
2846 docol!
2848 docon,
2850 dovalue,
285C do>to,
285E dovar,
2866 douser,
2884 dodoes,
288C xt!
288E docol,
2890 dodefer!
2892 (compile)
289C jmpoffs,
28B2 jmpoffsalloc,
28D4 >fixup
28DA loop,
28DE (does>)
28E8 does>
28FC dodefer,
2908 is-check
2920 is,
2926 is?,
292A lastnfa
2930 lastxt
2936 [
293C noop
293E ?comp
2946 smudge
2952 parse-def-name
2960 name"
2978 CREATE
299C [COMPILE]
29AE POSTPONE
29BE csp
29C2 !csp
29CC ?csp
29D8 :
29E8 ;
29F4 ?pairs
29FA BACK
2A02 IF
2A0E THEN
2A1A ELSE
2A2C (leave)
2A3C DO
2A48 ?DO
2A56 leave-resolve
2A6C loop-compile
2A8A LOOP
2A92 +LOOP
2A9A ULOOP
2AA2 U+LOOP
2AAA UNLOOP
2AB0 LEAVE
2ABA BEGIN
2AC0 UNTIL
2ACC AGAIN
2AD8 WHILE
2ADC REPEAT
2AE8 RECURSE
2AEE EXIT
2AF6 DEFER
2B00 IS
2B06 IS?
2B0C CONSTANT
2B16 VARIABLE
2B1C VALUE
2B26 TO
2B3A UDP
2B3E USER
2B50 :NONAME
2B5A env:
2B62 has?
2B70 (
2B78 >IN
2B7C CHAR
2B82 REFILL
2BCE RESTORE-INPUT
2BFE SAVE-INPUT
2C12 SOURCE-ID
2C20 loadfile
2C24 loadline
2C28 <input
2C44 input>
2C60 ,"
2C70 ?stack
2C8C huh?
2C9A number
2CF8 interpreter
2D26 (parse-name)
2D2E interpret
2D3C EVALUATE
2D5A (clrsrc)
2D68 QUIT
2DA0 SOURCE
2DB4 [CHAR]
2DBA str=
2DBE comment?
2DDA [ELSE]
2E64 [THEN]
2E66 [ENDIF]
2E68 [IF]
2E6E defined?
2E78 [IFUNDEF]
2E7E [IFDEF]
2E84 per-line
2E94 2u.
2EA0 4u.
2EB0 (dmpln)
2F08 (dmp)
2F28 dump
2F38 vdump
2F48 guard
2F5C toss
2F72 unguard
2F82 ?toss
2F88 wait4
2FC2 fdc-ready
2FD2 fdc-wait-ready
2FDC fdc-command
2FEA dsk-flg!
3004 dsk-flg?
300A motor
3010 seek-command
3016 seek-track
3040 sec>attrs
304A block>sec
304E disk-seek-sec
3058 drq-ready
3060 (dsk-read)
3068 (dsk-write)
306E xfer
3096 (disk-rwblk)
30CE disk-rwblk
30E8 gram-rwblk
3114 set-disk
311A DSK1
312C GRAM
3132 RWBLK
3144 io-init
314C baddrs!
319A baddr
319E baddr)
31A2 (>lend)
31CA >lend
31D0 to-line
31E2 laddrs!
31FC >llen
3204 >curs
320C delete-range
324C insert-range
32A2 fl|
32A8 ^curs
32C2 ^del
32D2 ^ins
32DE ^chr
32E6 caddr>col!
32EE ^home
3312 ^end
3334 space-to-column
3356 ^char
336C +tab
337E ~curs
339A [line)
33A4 ~del
33AE ~ins>
33BE ~ins
33CA (~copy)
33DA !copy-line
33E0 !paste
3402 ~dup
340A 'fl
340E pause
341A trace
342E !left
3438 !right
3442 !up
344A !down
3452 !block-down
3458 !block-up
345E !dup-line
3464 !home-line
3466 !end-line
3472 (erase)
347A !erase
3480 !erase-to
348A !ins/ovr
3492 fix-column
349E !bksp
34A8 (tab)
34B6 !tab
34CA !untab
34DE !enter
3500 !join
3508 !clear
3510 !load
351A !exit
351E !interpret
3528 draw-window
35A4 !refresh
35AA !help
35E0 edittab
365E edit.char
366C onkey
36AC init-editor
36BA save-video
36CC editor.exit
36D8 intp.window
36E4 edit.window
36EA edit.drawui
378C edit.drawstatus
3818 drawline
3864 edit.drawline
386E #drawline
3888 edit.drawblock
389C surround
38E2 edit.scroll
38F6 edit.lastpos!
390A edit.update
397C edit.fixblock
398C (edit)
39A0 edit
39C4 >edit
39CA regs-init
39E8 cold-init
3A06 'quit
3A1A abort
3A24 cycle
3A44 snd
3A54 delay
3A5C blast0
3A7A blast1
3A98 square
3AA8 hang
3AAE bootup
3ACC ints-check
3AD2 vdp-status
3AD6 vdp-ticks
3ADA vdp-timeout
3ADE v-intflag-off?
3AE6 vdp-int-handler
3B26 kbd-int-handler
3B3E nmi-int-handler
3B50 fault-int-handler
3B60 >int-vec
3B66 set-int-vec
3B6A enable-int
3B7C call-int
3B86 ints-init
