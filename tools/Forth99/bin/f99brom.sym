0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
0608 lp@
0612 lp!
061E (do)
062C (loop)
0638 (+loop)
0644 (uloop)
0652 (u+loop)
065C (?do)
066E execute
0678 ?dup
0682 2dup
0694 (context>)
06A4 (>context)
06B0 (user)
06B8 0<
06C2 0<=
06CC 0>
06D6 0>=
06E0 0U<
06EC 0U<=
06F6 0U>
0702 0U>=
070A <
0712 <=
0718 >
0720 >=
0728 U<
0730 U<=
0738 U>
0740 U>=
0748 D0<
0754 D0<=
075E D0>
076A D0>=
0776 DU0<
0782 DU0<=
078E DU0>
079A DU0>=
07A4 D<
07AE D<=
07B8 D>
07C2 D>=
07CC DU<
07D8 DU<=
07E2 DU>
07EE DU>=
07FE (unloop)
080E 2rdrop
0818 2/
0820 2*
082C LSHIFT
0838 RSHIFT
0844 URSHIFT
0850 CRSHIFT
085A SWPB
0868 DLSHIFT
0876 DRSHIFT
0886 DURSHIFT
0896 DCRSHIFT
089E *
08AA 2drop
08B4 d>q
08C4 dum/mod
08CE s>d
08DA true
08E4 false
08F0 (fill)
08FC (cfill)
0908 (move)
0914 (cmove)
0922 (LITERAL)
0932 (DLITERAL)
0940 ((s"))
0954 (S")
0964 (SYSCALL)
0966 I/O
0968 VDPRD
096A VDPST
096C VDPWD
096E VDPWA
0970 VDPCL
0974 VDPWI
0978 GPLRD
097C GPLRA
0980 GPLWD
0984 GPLWA
0988 SPCHRD
098C SPCHWT
0990 KBD
0994 SOUND
0998 'INTS
099C 'INTSP
09A0 M_INT_BKPT
09A2 M_INT_EXT
09A4 M_INT_VDP
09A6 M_INT_KBD
09AA 'KBD
09AE 'KBDA
09B2 'DBG
09B6 ROM
09BA (BOOT)
09BE (COLD)
09C2 DP0
09C6 (LATEST)
09CA (#RP)
09CE (#SP)
09D2 (#pad)
09D6 (##-pad)
09DA (#slit-pad)
09DE (#tib)
09E2 (#blk)
09E6 (#up)
09EA RamTop
09EE (rp0)
09F2 (sp0)
09F6 (pad0)
09FA (#-pad0)
09FE (slit-pad0)
0A02 (tib0)
0A06 (first)
0A0A (limit)
0A0E (up0)
0A12 SysCalls
0A16 IntVecs
0A1A INT_RESET
0A1E INT_NMI
0A22 INT_KBD
0A24 INT_VDP
0A26 INT_BKPT
0A28 grom_kbdlist
0A2A grom_font8x8
0A2E grom_font5x6
0A32 CTX_SP
0A34 CTX_RP
0A36 CTX_UP
0A38 CTX_INT
0A3A IbranchX
0A3C I0branchX
0A40 IRfrom
0A44 IatR
0A48 Isub
0A4C Iumul
0A50 Iudivmod
0A54 Iudivmod_d
0A58 Iuser
0A5C Iupidx
0A60 IloopUp
0A64 IuloopUp
0A68 IplusLoopUp
0A6C IuplusLoopUp
0A70 Icfill
0A74 Icmove
0A78 Iexit
0A7C Idovar
0A80 Isyscall
0A84 IlitB
0A88 IlitW
0A8C IbranchB
0A90 I0branchB
0A94 Idup_d
0A98 ItoR_d
0A9C Irdrop_d
0AA0 Irpidx
0AA4 #idle
0AA6 #dbg
0AA8 #dbgf
0AAA #regsym
0AAC (dbg)
0AB4 (dbgf)
0ABC (idle)
0AC4 (register-symbol)
0ACC UP
0AD0 ramptr
0AD4 rp0
0AD8 sp0
0ADC (pad)
0AE0 (#pad)
0AE4 (spad)
0AF0 STATE
0AFE literal
0B3A dliteral
0B84 >call
0B98 compile,
0C2E RamVar
0C3C +Nfield
0C40 +field
0C44 +1field
0C52 vwaddr
0C60 !vwaddr
0C74 vsetbank
0C8C +vwaddr
0C9E +!vwaddr
0CB2 gwaddr
0CC0 graddr
0CCC g@
0CE0 gc@
0CEC vc@
0CF8 vc!
0D08 (vmbr)
0D18 vmbr
0D28 (vmbw)
0D38 vmbw
0D48 gvmove
0D5E >bit
0D78 v-data
0D7C v-screen
0D80 v-screensz
0D84 v-patts
0D88 v-pattsz
0D8C v-colors
0D90 v-colorsz
0D94 v-sprites
0D98 v-sprcol
0D9C v-sprpat
0DA0 v-sprmot
0DA4 v-free
0DA8 v-mono
0DAC v-width
0DB0 v-height
0DB4 v-font
0DB8 v-fntwidth
0DBC v-fntheight
0DC0 'v-chsize
0DC4 'v-coordaddr
0DC8 'v-drawchar
0DCC 'v-readchar
0DD0 'v-blinkcursor
0DD4 'v-setupmode
0DD8 'v-updatecolors
0DDC 'v-setfont
0DE0 'v-clear
0DE4 'v-hchar
0DE8 'v-vchar
0DEC bit-cursor
0DF0 msx-stride
0DF4 msx-shift
0DF8 msx-mask
0DFC v-regsave
0E00 v-data-size
0E04 w>b
0E0E write-vregaddr
0E28 get-vreg
0E2E (>LOCALS)
0E36 (LOCALS>)
0E40 write-vregs
0E58 vid-show
0E66 >v-fontaddr
0E72 v-curs-under
0E76 v-curs
0E7A v-cursor-timer
0E7E v-cursor-blink
0E82 write-var-list
0E92 (mode)
0ECA fg
0ECE bg
0ED2 color-byte
0EE0 color-word
0EF0 v-refresh-colors
0EFC fg!
0F0C bg!
0F1C fg@
0F26 bg@
0F2A vreset
0F3C vstdpal
0F3E v-cursor-off
0F4E update-cursor
0F66 video-modes
0F86 text
0F8E gfx
0F9A bitmap
0FA4 gfx2
0FAE gfx3
0FB8 gfx4
0FC2 gfx5
0FCC gfx6
0FD6 gfx7
0FE0 text2
0FEC mono
0FF8 multi
0FFC last-video-mode
1008 #scr
1012 #ssz
101C #col
1026 #csz
1030 #pat
103A #psz
1044 #spt
104E #spr
1058 #smt
1064 #spc
1070 #fre
1074 txt-chsize
1078 txt-chaddr
1086 txt-waddr
108C txt-drawchar
1092 txt-readchar
109A txt-blinkcursor
10C0 range-wrap
10E0 txt-hchar
10FA txt-vchar
1140 txt-setupmode
1142 txt-updatecolors
114C txt-clear
115A std-setfont
1164 TextFunctions
1188 TextModeParams
11C8 TextModeRegs
11D4 text-mode
11E4 (sprite-setup)
1204 std-sprite-setup
1210 v9938-sprite-setup
1226 GfxModeRegs
1238 GfxModeParams
1278 gfx-setupmode
127C gfx-updatecolors
128A gfx-mode
129A Text2ModeRegs
12AC Text2ModeParams
12EC txt2-setupmode
12FA text2-mode
130A bit-cursor-8
1314 bit-cursor
1318 bit-chsize
1322 bit-pixaddr
1336 bit-waddr
133C bit-raddr
1342 bit-setupmode
1356 bit-drawchar
1386 (set-bits)
13A2 (reset-bits)
13AA bit-blinkcursor
13FA bit-clear
1412 bit-updatecolors
1430 bit-setfont
143E BitFunctions
1456 BitModeRegs
1468 BitModeParams
14A8 bit-mode
14B8 MonoBitModeRegs
14CA mono-mode
14EC Gfx3ModeRegs
1500 Gfx3ModeParams
1540 gfx3-mode
1550 msx-stdpalette
1572 msx-enhregs
1582 msx-vstatus0
1588 msx-colorbyte
1590 msx-chsize
159A msx-pixaddr
15AE msx-setupmode
15B4 msx-cmdsetup
15BC msx-waitcmdready
15C4 msx-waittxready
15CC msx-setupMMMcommand
15DC msx-cmd-word
15E6 msx-setup-cursor-DXDY
15F0 msx-sendcharpixel
1600 msx-drawchar
1666 msx-blinkcursor
1684 msx-clear
1692 msx-updatecolors
169C msx-setfont
169E MsxFunctions
16B6 Gfx4ModeRegs
16C6 Gfx4ModeParams
1712 gfx4-mode
172A mode
173A vfill
174E (setfont)
1762 font8x8
1778 video-init
178C t-data
1790 v-x 1794 v-y 1798 win-x
179C win-y
17A0 win-sx
17A4 win-sy
17A8 t-data-size
17AC term-reset
17D2 home
17E4 xy
17F4 xy!
17FE curs-addr
1816 home-col
181C ch>xy
1822 ch>y
1828 ch>x
182C advance-row
1844 advance-cursor
185C cursor-off
1862 crlf
1868 bksp
18B2 chfill
18EC hchar
191A vchar
197E cls
1990 (emit)
19A0 emit
19C8 getch
19DE cr
19EC space
19FA type
1A08 kbdbufsize
1A0C kbdbuf
1A10 kbdstate
1A14 kbdtimer
1A18 kbddelay
1A1C kbdrate
1A20 kbdshift
1A24 kbdscan
1A28 kbdlast
1A2C kbdflag
1A30 kbdtail
1A34 kbdhead
1A38 timeout
1A3C randnoise
1A40 read-row
1A4A toupper
1A58 buffer-key
1A80 repeat-key
1AC2 lookup-key
1AD6 handle-key
1B04 key-actions
1B1A kbd-scan
1B66 kbd-no-key
1B7C kbd-init
1B9C key?
1BB2 (key)
1BD2 key
1BE0 ints-check
1BE6 vdp-status
1BEA vdp-ticks
1BEE vdp-int-handler
1C1A kbd-int-handler
1C32 nmi-int-handler
1C36 >int-vec
1C3C set-int-vec
1C40 enable-int
1C52 call-int
1C5C ints-init
1C7E ints-on
1C8E ints-off
1C9A pick
1CAA rpick
1CBA cmove
1CC8 cmove>
1CD4 m/mod
1CEE u/mod
1CF8 u/
1D06 umod
1D12 u*
1D1E fill
1D2E /STRING
1D3C |!
1D4A &!
1D5C compare
1D94 tolower
1DAC comparef
1DE6 base
1DF0 dp
1DFC (pad)
1E0A (#pad)
1E18 (spad)
1E24 here
1E32 decimal
1E3E hex
1E4C digit
1E62 #ptr
1E6E demit
1E7C dtype
1E98 d.d
1EAC .d
1EBE constant
1ECA /cells
1ED4 (d)
1EE2 DEPTH
1EF4 RDEPTH
1F04 TUCK
1F0E 2!
1F1C 2@
1F2C ALIGN
1F3E ALIGNED
1F4C CHAR+
1F58 CHARS
1F64 CELL+
1F70 DABS
1F80 MOVE
1F96 */
1FA4 */MOD
1FB0 /
1FBE /MOD
1FCC ABS
1FDE FM/MOD
2004 M*
201C MAX
202E MIN
2040 MOD
204E SM/REM
206C (skip)
2076 dn*
208C >digit
20C6 >NUMBER
20F0 ]
20FC s,
2116 SLITERAL
2124 S"
214A (abort")
2170 ABORT"
2188 hld
2194 -pad
219E <#
21AC HOLD
21BC (#)
21D0 #
21DE #>
21EE #S
21FA .
2206 BL
2212 SIGN
2226 SPACES
2240 U.
224E COUNT
225C (>c)
2274 (parse-word)
2282 WORD
2292 overstrike
22AA ACCEPT
22FC ENVIRONMENT?
230A (quit?)
2320 (pause?)
233C #TIB
2346 0<>
2350 <>
235A .R
237C ERASE
2386 NIP
2390 PAD
239E (match)
23C6 (src>)
23E0 (>src)
23EE PARSE
23FC (skip-spaces)
2424 U.R
243E WITHIN
244C BLK
2456 C/L
245E \
2482 D.R
249E D.
24AC UD.R
24C2 UD.
24CE .S
2508 r.S
2540 ?
2544 message
263E ?error
2658 CHARS/BLOCK
2664 L/BLK
2670 FIRST
267C PREV
2688 LIMIT
2692 USE
269C SCR
26AA (b/blk)
26B6 RWBLK
26C2 R/W
26D0 +BUF
26F0 buffer
2720 block
2758 dirty?
276A revert
277A update
2794 save-buffers
27B8 flush
27CC EMPTY-BUFFERS
27EC load
281C ?loading
282C -->
283A thru
2850 (line)
2862 .line
287A list
28A0 index
28C2 >latest
28D0 latest
28D4 |immed
28D8 |srch
28E8 traverse
291E nfa>xt
292C xt>nfa
293C nfa>imm?
294E lfa>nfa
2956 >id
2962 id.
2972 width
297A '
299C ,
29AC >BODY
29BA ALLOT
29C8 C,
29DA (find)
29E6 FIND
2A04 [']
2A16 IMMEDIATE
2A2C UNUSED
2A3A dwalk
2A4E .word
2A5C WORDS
2A64 docol!
2A66 dovar,
2A6E douser,
2A88 dodoes,
2A90 xt!
2A9C docol,
2A9E dodefer!
2AAC (compile)
2AB6 jmpoffs,
2ACC jmpoffsalloc,
2AF4 >fixup
2B02 loop,
2B10 lastnfa
2B20 lastxt
2B30 (does>)
2B42 does>
2B52 [
2B60 noop
2B6A ?comp
2B7E smudge
2B8A parse-name
2B9E name"
2BC0 CREATE
2BF0 per-line
2C06 2u.
2C18 4u.
2C32 (dmpln)
2C92 (dmp)
2CBA dump
2CD2 vdump
2CEE [COMPILE]
2D0C POSTPONE
2D22 csp
2D26 leave-list
2D32 !csp
2D44 ?csp
2D54 :
2D68 ;
2D7E (does>)
2D8E ?pairs
2D9C BACK
2DAC BEGIN
2DB8 IF
2DCC THEN
2DE0 ELSE
2DF2 (leave)
2E08 DO
2E1A ?DO
2E28 leave-resolve
2E3E loop-compile
2E64 LOOP
2E74 +LOOP
2E84 ULOOP
2E96 U+LOOP
2EA8 UNLOOP
2EB6 LEAVE
2EC8 UNTIL
2EDC AGAIN
2EF0 WHILE
2EFE REPEAT
2F14 RECURSE
2F22 EXIT
2F32 DEFER
2F4A VARIABLE
2F56 UDP
2F62 USER
2F7E :NONAME
2F9C env:
2FAC has?
2FBE (
2FCC >IN
2FD8 CHAR
2FEA REFILL
3042 RESTORE-INPUT
3080 SAVE-INPUT
30A0 SOURCE-ID
30B6 >tib
30C0 TIB
30D0 loadfile
30E0 loadline
30EE <input
3114 input>
3138 (>c)
3146 ,"
3160 (find)
3182 nfa=
31AC (lookup)
31C2 ?stack
31E6 huh?
31FA dpl
3208 number
3266 interpreter
32A6 interpret
32C2 EVALUATE
32EC (clrsrc)
3302 QUIT
3346 SOURCE
3364 [CHAR]
3372 str=
3382 comment?
33A8 [ELSE]
343C [THEN]
3448 [ENDIF]
3452 [IF]
3464 defined?
347A [IFUNDEF]
348A [IFDEF]
3490 regs-init
34C0 cold-init
34E6 'quit
34FA abort
351A cycle
353A bootup
