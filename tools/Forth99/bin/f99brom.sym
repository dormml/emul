0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
0608 lp@
0612 lp!
061E (do)
062C (loop)
0638 (+loop)
0644 (uloop)
0652 (u+loop)
065C (?do)
066E execute
0678 ?dup
0682 2dup
0694 (context>)
06A4 (>context)
06B0 (user)
06B8 0<
06C2 0<=
06CC 0>
06D6 0>=
06E0 0U<
06EC 0U<=
06F6 0U>
0702 0U>=
070A <
0712 <=
0718 >
0720 >=
0728 U<
0730 U<=
0738 U>
0740 U>=
0748 D0<
0754 D0<=
075E D0>
076A D0>=
0776 DU0<
0782 DU0<=
078E DU0>
079A DU0>=
07A4 D<
07AE D<=
07B8 D>
07C2 D>=
07CC DU<
07D8 DU<=
07E2 DU>
07EE DU>=
07FE (unloop)
080E 2rdrop
0818 2/
0820 2*
082C LSHIFT
0838 RSHIFT
0844 URSHIFT
0850 CRSHIFT
085A SWPB
0868 DLSHIFT
0876 DRSHIFT
0886 DURSHIFT
0896 DCRSHIFT
089E *
08AA 2drop
08B4 d>q
08C4 dum/mod
08CE s>d
08DA true
08E4 false
08F0 (fill)
08FC (cfill)
0908 (move)
0914 (cmove)
0922 (LITERAL)
0932 (DLITERAL)
0940 ((s"))
0954 (S")
0964 (SYSCALL)
0966 I/O
0968 VDPRD
096A VDPST
096C VDPWD
096E VDPWA
0970 VDPCL
0974 VDPWI
0978 GPLRD
097C GPLRA
0980 GPLWD
0984 GPLWA
0988 SPCHRD
098C SPCHWT
0990 KBD
0994 SOUND
0998 'INTS
099C 'INTSP
09A0 M_INT_BKPT
09A2 M_INT_EXT
09A4 M_INT_VDP
09A6 M_INT_KBD
09AA 'KBD
09AE 'KBDA
09B2 'DBG
09B6 ROM
09BA (BOOT)
09BE (COLD)
09C2 DP0
09C6 (LATEST)
09CA (#RP)
09CE (#SP)
09D2 (#pad)
09D6 (##-pad)
09DA (#slit-pad)
09DE (#tib)
09E2 (#blk)
09E6 (#up)
09EA RamTop
09EE (rp0)
09F2 (sp0)
09F6 (pad0)
09FA (#-pad0)
09FE (slit-pad0)
0A02 (tib0)
0A06 (first)
0A0A (limit)
0A0E (up0)
0A12 SysCalls
0A16 IntVecs
0A1A INT_RESET
0A1E INT_NMI
0A22 INT_KBD
0A24 INT_VDP
0A26 INT_BKPT
0A28 grom_kbdlist
0A2A grom_font8x8
0A2E grom_font5x6
0A32 CTX_SP
0A34 CTX_RP
0A36 CTX_UP
0A38 CTX_INT
0A3A IbranchX
0A3C I0branchX
0A40 IRfrom
0A44 IatR
0A48 Isub
0A4C Iumul
0A50 Iudivmod
0A54 Iudivmod_d
0A58 Iuser
0A5C Iupidx
0A60 IloopUp
0A64 IuloopUp
0A68 IplusLoopUp
0A6C IuplusLoopUp
0A70 Icfill
0A74 Icmove
0A78 Iexit
0A7C Idovar
0A80 Isyscall
0A84 IlitB
0A88 IlitW
0A8C IbranchB
0A90 I0branchB
0A94 Idup_d
0A98 ItoR_d
0A9C Irdrop_d
0AA0 Irpidx
0AA4 #idle
0AA6 #dbg
0AA8 #dbgf
0AAA #regsym
0AAC (dbg)
0AB4 (dbgf)
0ABC (idle)
0AC4 (register-symbol)
0ACC UP
0AD0 ramptr
0AD4 rp0
0AD8 sp0
0ADC (pad)
0AE0 (#pad)
0AE4 (spad)
0AF0 STATE
0AFE literal
0B3A dliteral
0B84 >call
0B98 compile,
0C2E RamVar
0C3C +Nfield
0C40 +field
0C44 +1field
0C52 vwaddr
0C60 !vwaddr
0C74 vsetbank
0C8C +vwaddr
0C9E +!vwaddr
0CB2 gwaddr
0CC0 graddr
0CCC g@
0CE0 gc@
0CEC vc@
0CF8 vc!
0D08 (vmbr)
0D18 vmbr
0D28 (vmbw)
0D38 vmbw
0D48 gvmove
0D5E >bit
0D78 v-data
0D7C v-screen
0D80 v-screensz
0D84 v-patts
0D88 v-pattsz
0D8C v-colors
0D90 v-colorsz
0D94 v-sprites
0D98 v-sprcol
0D9C v-sprpat
0DA0 v-sprmot
0DA4 v-free
0DA8 v-text
0DAC v-mono
0DB0 v-width
0DB4 v-height
0DB8 v-font
0DBC v-fntwidth
0DC0 v-fntheight
0DC4 'v-chsize
0DC8 'v-coordaddr
0DCC 'v-drawchar
0DD0 'v-readchar
0DD4 'v-blinkcursor
0DD8 'v-setupmode
0DDC 'v-updatecolors
0DE0 'v-setfont
0DE4 'v-clear
0DE8 'v-hchar
0DEC 'v-vchar
0DF0 bit-cursor
0DF4 msx-stride
0DF8 msx-shift
0DFC msx-mask
0E00 v-regsave
0E04 v-data-size
0E08 w>b
0E12 write-vregaddr
0E2C get-vreg
0E32 write-vregs
0E48 vid-show
0E56 >v-fontaddr
0E62 v-curs-under
0E66 v-curs
0E6A v-cursor-timer
0E6E v-cursor-blink
0E72 write-var-list
0E82 (mode)
0EBA fg
0EBE bg
0EC2 color-byte
0ED0 color-word
0EE0 v-refresh-colors
0EEC fg!
0EFC bg!
0F0C fg@
0F16 bg@
0F1A vreset
0F2C vstdpal
0F2E v-cursor-off
0F3E update-cursor
0F56 video-modes
0F76 text
0F7E gfx
0F8A bitmap
0F94 gfx2
0F9E gfx3
0FA8 gfx4
0FB2 gfx5
0FBC gfx6
0FC6 gfx7
0FD0 text2
0FDC mono
0FE8 multi
0FEC last-video-mode
0FF8 #scr
1002 #ssz
100C #col
1016 #csz
1020 #pat
102A #psz
1034 #spt
103E #spr
1048 #smt
1054 #spc
1060 #fre
1064 txt-chsize
1068 txt-chaddr
1076 txt-waddr
107C txt-drawchar
1082 txt-readchar
108A txt-blinkcursor
10B0 range-wrap
10D0 txt-hchar
10EA txt-vchar
1134 txt-setupmode
113A txt-updatecolors
1144 txt-clear
1152 std-setfont
115C TextFunctions
1180 TextModeParams
11C0 TextModeRegs
11CC text-mode
11DC (sprite-setup)
11FC std-sprite-setup
1208 v9938-sprite-setup
121E GfxModeRegs
1230 GfxModeParams
1270 gfx-setupmode
1274 gfx-updatecolors
1282 gfx-mode
1292 Text2ModeRegs
12A4 Text2ModeParams
12E4 txt2-setupmode
12F2 text2-mode
1302 bit-cursor-8
130C bit-cursor
1310 bit-chsize
131A bit-pixaddr
132E bit-waddr
1334 bit-raddr
133A bit-setupmode
134E bit-drawchar
137E (set-bits)
1398 (reset-bits)
13A0 bit-blinkcursor
13F0 bit-clear
1408 bit-updatecolors
1426 bit-setfont
1434 BitFunctions
144C BitModeRegs
145E BitModeParams
149E bit-mode
14AE MonoBitModeRegs
14C0 mono-mode
14E2 Gfx3ModeRegs
14F6 Gfx3ModeParams
1536 gfx3-mode
1546 msx-stdpalette
1568 msx-enhregs
1578 msx-vstatus0
157E msx-colorbyte
1586 msx-chsize
1590 msx-pixaddr
15A4 msx-setupmode
15AA msx-cmdsetup
15B2 msx-waitcmdready
15BA msx-waittxready
15C2 msx-setupMMMcommand
15D2 msx-cmd-word
15DC msx-setup-cursor-DXDY
15E6 msx-sendcharpixel
15F6 msx-drawchar
165A msx-blinkcursor
1678 msx-clear
1686 msx-updatecolors
1690 msx-setfont
1692 MsxFunctions
16AA Gfx4ModeRegs
16BA Gfx4ModeParams
1706 gfx4-mode
171E mode
172E vfill
1742 (setfont)
1756 font8x8
176C video-init
1780 t-data
1784 v-x
1788 v-y
178C win-x
1790 win-y
1794 win-sx
1798 win-sy
179C t-data-size
17A0 term-reset
17C6 home
17D8 xy
17E8 xy!
17F2 curs-addr
180A home-col
1810 ch>xy
1816 ch>y
181C ch>x
1820 win-chsize
1846 advance-row
185E advance-cursor
1876 cursor-off
187C crlf
1882 bksp
18CC chfill
18F6 hchar
1924 vchar
1990 cls
19A2 (emit)
19B2 emit
19DA getch
19EE cr
19FC space
1A0A type
1A18 kbdbufsize
1A1C kbdbuf
1A20 kbdstate
1A24 kbdtimer
1A28 kbddelay
1A2C kbdrate
1A30 kbdshift
1A34 kbdscan
1A38 kbdlast
1A3C kbdflag
1A40 kbdtail
1A44 kbdhead
1A48 timeout
1A4C randnoise
1A50 read-row
1A5A toupper
1A68 buffer-key
1A90 repeat-key
1AD2 lookup-key
1AE6 handle-key
1B14 key-actions
1B2A kbd-scan
1B76 kbd-no-key
1B8C kbd-init
1BAC key?
1BC2 (key)
1BE2 key
1BF0 ints-check
1BF6 vdp-status
1BFA vdp-ticks
1BFE vdp-int-handler
1C2A kbd-int-handler
1C42 nmi-int-handler
1C46 >int-vec
1C4C set-int-vec
1C50 enable-int
1C62 call-int
1C6C ints-init
1C8E ints-on
1C9E ints-off
1CAA pick
1CBA rpick
1CCA cmove
1CD8 cmove>
1CE4 m/mod
1CFE u/mod
1D08 u/
1D16 umod
1D22 u*
1D2E fill
1D3E /STRING
1D4C |!
1D5A &!
1D6C compare
1DA4 tolower
1DBC comparef
1DF6 base
1E00 dp
1E0C (pad)
1E1A (#pad)
1E28 (spad)
1E34 here
1E42 decimal
1E4E hex
1E5C digit
1E72 #ptr
1E7E demit
1E8C dtype
1EA8 d.d
1EBC .d
1ECE constant
1EDA /cells
1EE4 (d)
1EF2 DEPTH
1F04 RDEPTH
1F14 TUCK
1F1E 2!
1F2C 2@
1F3C ALIGN
1F4E ALIGNED
1F5C CHAR+
1F68 CHARS
1F74 CELL+
1F80 DABS
1F90 MOVE
1FA6 */
1FB4 */MOD
1FC0 /
1FCE /MOD
1FDC ABS
1FEE FM/MOD
2014 M*
202C MAX
203E MIN
2050 MOD
205E SM/REM
207C (skip)
2086 dn*
209C >digit
20D6 >NUMBER
2100 ]
210C s,
2126 SLITERAL
2134 S"
215A (abort")
2180 ABORT"
2198 hld
21A4 -pad
21AE <#
21BC HOLD
21CC (#)
21E0 #
21EE #>
21FE #S
220A .
2216 BL
2222 SIGN
2236 SPACES
2250 U.
225E COUNT
226C (>c)
2284 (parse-word)
2292 WORD
22A2 overstrike
22BA ACCEPT
230C ENVIRONMENT?
231A (quit?)
2330 (pause?)
234C #TIB
2356 0<>
2360 <>
236A .R
238C ERASE
2396 NIP
23A0 PAD
23AE (match)
23D6 (src>)
23F0 (>src)
23FE PARSE
240C (skip-spaces)
2434 U.R
244E WITHIN
245C BLK
2466 C/L
246E \
2492 D.R
24AE D.
24BC UD.R
24D2 UD.
24DE .S
2518 r.S
2550 ?
2554 message
264E ?error
2668 CHARS/BLOCK
2674 L/BLK
2680 FIRST
268C PREV
2698 LIMIT
26A2 USE
26AC SCR
26BA (b/blk)
26C6 RWBLK
26D2 R/W
26E0 +BUF
2700 buffer
2730 block
2768 dirty?
277A revert
278A update
27A4 save-buffers
27C8 flush
27DC EMPTY-BUFFERS
27FC load
282C ?loading
283C -->
284A thru
2860 (line)
2872 .line
288A list
28B0 index
28D2 >latest
28E0 latest
28E4 |immed
28E8 |srch
28F8 traverse
292E nfa>xt
293C xt>nfa
294C nfa>imm?
295E lfa>nfa
2966 >id
2972 id.
2982 width
298A '
29AC ,
29BC >BODY
29CA ALLOT
29D8 C,
29EA (find)
2A0C nfa=
2A36 (lookup)
2A4A FIND
2A68 [']
2A7A IMMEDIATE
2A90 UNUSED
2A9E dwalk
2AB2 .word
2AC0 WORDS
2AC8 docol!
2ACA dovar,
2AD2 douser,
2AEC dodoes,
2AF4 xt!
2B00 docol,
2B02 dodefer!
2B10 (compile)
2B1A jmpoffs,
2B30 jmpoffsalloc,
2B58 >fixup
2B66 loop,
2B74 lastnfa
2B84 lastxt
2B94 (does>)
2BA6 does>
2BB6 [
2BC4 noop
2BCE ?comp
2BE2 smudge
2BEE parse-name
2C02 name"
2C24 CREATE
2C54 per-line
2C6A 2u.
2C7C 4u.
2C96 (dmpln)
2CF6 (dmp)
2D1E dump
2D36 vdump
2D52 [COMPILE]
2D70 POSTPONE
2D86 csp
2D8A leave-list
2D96 !csp
2DA8 ?csp
2DB8 :
2DCC ;
2DE2 (does>)
2DF2 ?pairs
2E00 BACK
2E10 BEGIN
2E1C IF
2E30 THEN
2E44 ELSE
2E56 (leave)
2E6C DO
2E7E ?DO
2E8C leave-resolve
2EA2 loop-compile
2EC8 LOOP
2ED8 +LOOP
2EE8 ULOOP
2EFA U+LOOP
2F0C UNLOOP
2F1A LEAVE
2F2C UNTIL
2F40 AGAIN
2F54 WHILE
2F62 REPEAT
2F78 RECURSE
2F86 EXIT
2F96 DEFER
2FAE VARIABLE
2FBA UDP
2FC6 USER
2FE2 :NONAME
3000 env:
3010 has?
3022 (
3030 >IN
303C CHAR
304E REFILL
30A6 RESTORE-INPUT
30E4 SAVE-INPUT
3104 SOURCE-ID
311A >tib
3124 TIB
3134 loadfile
3144 loadline
3152 <input
3178 input>
319C (>c)
31AA ,"
31C4 ?stack
31E8 huh?
31FC dpl
320A number
3268 interpreter
32A8 interpret
32C4 EVALUATE
32EE (clrsrc)
3304 QUIT
3348 SOURCE
3366 [CHAR]
3374 str=
3384 comment?
33AA [ELSE]
343E [THEN]
344A [ENDIF]
3454 [IF]
3466 defined?
347C [IFUNDEF]
348C [IFDEF]
3492 regs-init
34C2 cold-init
34E8 'quit
34FC abort
351C cycle
353C bootup
