0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0570 nip
057E invert
058A dinvert
0594 not
059E dnot
05A8 or
05B0 dor
05BA and
05C4 dand
05CE xor
05D8 dxor
05E4 nand
05EE dnand
05F8 >r
0600 2>r
060A r>
0612 2r>
061E rdrop
0626 r@
062C i
0634 i'
063C j
0646 j'
064E k
0658 k'
0662 sp@
066C sp!
0676 rp@
0680 rp!
068A lp@
0694 lp!
06A0 (do)
06AE (loop)
06BA (+loop)
06C6 (uloop)
06D4 (u+loop)
06DE (?do)
06F0 execute
06FA ?dup
0704 2dup
0716 (context>)
0726 (>context)
0732 (user)
073A 0<
0744 0<=
074E 0>
0758 0>=
0762 0U<
076E 0U<=
0778 0U>
0784 0U>=
078C <
0794 <=
079A >
07A2 >=
07AA U<
07B2 U<=
07BA U>
07C2 U>=
07CA D0<
07D6 D0<=
07E0 D0>
07EC D0>=
07F8 DU0<
0804 DU0<=
0810 DU0>
081C DU0>=
0826 D<
0830 D<=
083A D>
0844 D>=
084E DU<
085A DU<=
0864 DU>
0870 DU>=
0880 (unloop)
0890 2rdrop
089A 2/
08A2 2*
08AE LSHIFT
08BA RSHIFT
08C6 URSHIFT
08D2 CRSHIFT
08DC SWPB
08EA DLSHIFT
08F8 DRSHIFT
0908 DURSHIFT
0918 DCRSHIFT
0920 *
092C 2drop
0936 d>q
0946 dum/mod
0950 s>d
095C true
0966 false
0972 (fill)
097E (cfill)
098A (cmove)
0998 (LITERAL)
09A8 (DLITERAL)
09B6 ((s"))
09CA (S")
09DA (SYSCALL)
09DC I/O
09DE VDPRD
09E0 VDPST
09E2 VDPWD
09E4 VDPWA
09E6 VDPCL
09EA VDPWI
09EE GPLRD
09F2 GPLRA
09F6 GPLWD
09FA GPLWA
09FE SPCHRD
0A02 SPCHWT
0A06 KBD
0A0A SOUND
0A0E 'INTS
0A12 'INTSP
0A16 M_INT_BKPT
0A18 M_INT_EXT
0A1A M_INT_VDP
0A1C M_INT_KBD
0A20 'KBD
0A24 'KBDA
0A28 'GATE
0A2C 'DSK
0A30 'DSKCMD
0A34 'DSKST
0A38 'DSKTRK
0A3C 'DSKSEC
0A40 'DSKDAT
0A44 'DSKFLG
0A48 'DSKNUM
0A4C 'DBG
0A50 ROM
0A54 (BOOT)
0A58 (COLD)
0A5C DP0
0A60 (LATEST)
0A64 FaultStacks
0A68 IntVecs
0A6C INT_RESET
0A70 INT_NMI
0A74 INT_FAULT
0A78 INT_KBD
0A7A INT_VDP
0A7C INT_BKPT
0A7E (#RP)
0A82 (#SP)
0A86 (#pad)
0A8A (##-pad)
0A8E (#slit-pad)
0A92 (#tib)
0A96 (#blk)
0A9A (#up)
0A9E RamTop
0AA2 (rp0)
0AA6 (sp0)
0AAA (pad0)
0AAE (#-pad0)
0AB2 (slit-pad0)
0AB6 (tib0)
0ABA (first)
0ABE (limit)
0AC2 (up0)
0AC6 grom_kbdlist
0AC8 grom_font8x8
0ACC grom_font5x6
0AD0 grom_editorhelp
0AD4 CTX_SP
0AD6 CTX_RP
0AD8 CTX_UP
0ADA CTX_INT
0ADC IbranchX
0ADE I0branchX
0AE2 IRfrom
0AE6 IRdrop
0AEA IatR
0AEE Isub
0AF2 Iumul
0AF6 Iudivmod
0AFA Iudivmod_d
0AFE Iload
0B02 Icload
0B06 Istore
0B0A Icstore
0B0E Iuser
0B12 Iupidx
0B16 IloopUp
0B1A IuloopUp
0B1E IplusLoopUp
0B22 IuplusLoopUp
0B26 Icfill
0B2A Icmove
0B2E Iexit
0B32 Iexecute
0B36 Idovar
0B3A Isyscall
0B3E IcontextFrom
0B42 ItoContext
0B46 IlitB
0B4A IlitW
0B4E IbranchB
0B52 I0branchB
0B56 Idup_d
0B5A ItoR_d
0B5E Irdrop_d
0B62 Irpidx
0B66 #idle
0B68 #dbg
0B6A #dbgf
0B6C #regsym
0B6E (dbg)
0B76 (dbgf)
0B7E (idle)
0B86 (register-symbol)
0B8E UP0
0B92 ramptr
0B96 rp0
0B9A sp0
0B9E >call
0BA6 call>
0BAA inlineable
0BC8 inlineable-imm
0BFE STATE
0C0C literal
0C48 dliteral
0C96 compile,
0D4E RamVar
0D5C +Nfield
0D60 +field
0D64 +1field
0D72 vwaddr
0D80 !vwaddr
0D94 vsetbank
0DB2 +vwaddr
0DC4 +!vwaddr
0DD8 gwaddr
0DE6 graddr
0DF2 g@
0E06 gc@
0E12 vc@
0E1E vc!
0E2C +vc@
0E3A +vc!
0E48 vfill
0E5A +vfill
0E6C +gvmove
0E84 vcmove
0EA2 cvmove
0EC0 gcmove
0EDE cgmove
0EFA >bit
0F14 v-data
0F24 v-screen
0F36 v-screensz
0F44 v-patts
0F54 v-pattsz
0F64 v-colors
0F74 v-colorsz
0F84 v-sprites
0F94 v-sprcol
0FA4 v-sprpat
0FB4 v-sprmot
0FC2 v-free
0FC6 v-pagesize
0FCA v-text
0FCE v-mono
0FD2 v-width
0FD6 v-height
0FDA v-font
0FDE v-fntwidth
0FE2 v-fntheight
0FE6 v-intflags
0FEA v-blink
0FEE v-allocinfo
0FF2 v-rwpage
0FF6 v-vispage
0FFA v-pob
0FFE v-unused
1002 v-initpages
1006 'v-setupregs
100A 'v-drawchar
100E 'v-readchar
1012 'v-blinkcursor
1016 'v-setupmode
101A 'v-updatecolors
101E 'v-setfont
1022 'v-clear
1026 'v-hchar
102A 'v-vchar
102E msx-stride
1032 msx-shift
1036 msx-mask
103A msx-colmask
103E msx-rowsperbankmask
1042 v-regsave
1046 v-data0
104A v-data-size
104E v-int-nosprmot
1052 v-int-nocursor
1056 >vr
1066 v-regaddr
1084 (vr!)
109C (vr@)
10A2 write-vregs
10B8 vid-show
10CC std-set-screen-reg
10DE std-set-color-reg
10F6 std-set-patt-reg
1108 std-set-sprite-reg
1120 std-set-sprpat-reg
1132 >v-fontaddr
113E v-curs-under
1142 v-curs
1146 v-cursor-timer
114A v-cursor-blink
114E write-var-list
115E v-set-alloc-list
1170 (mode)
11B4 fg
11B8 bg
11BC color-byte
11CA color-word
11DA v-refresh-colors
11E6 fg!
11F6 bg!
1206 fg@
1210 bg@
1214 msx-enhregs
1230 (vreset)
124A vreset
126C vstdpal
1284 v-cursor-off
1294 update-cursor
12AC video-modes
12CC text
12D4 gfx
12E0 bitmap
12EA gfx2
12F4 gfx3
12FE gfx4
1308 gfx5
1312 gfx6
131C gfx7
1326 text2
1332 mono
133E multi
1342 last-video-mode
134E #scr
1358 #ssz
1362 #col
136C #csz
1376 #pat
1380 #psz
138A #spt
1394 #spr
139E #smt
13AA #spc
13B6 #fre
13BA (sprite-setup)
13DA std-sprite-setup
13E6 v9938-sprite-setup
13FC txt-choffs
1404 txt-chaddr
140C txt-waddr
1412 txt-drawchar
1418 txt-readchar
1420 txt-blinkcursor
1446 range-wrap
1466 (txt-hchar)
1482 txt-hchar
1488 txt-vchar
14CC txt-setupmode
14D2 txt-updatecolors
14DC txt-clear
150E std-setfont
1566 TextFunctions
1586 TextModeParams
15CE TextModeRegs
15D6 txt-setupregs
15DC text-mode
15EC GfxModeRegs
15F4 GfxModeParams
163C gfx-setupregs
1646 gfx-setupmode
164E gfx-updatecolors
165C gfx-mode
166C >txt2-coloraddr
167C txt2-drawchar
16A4 txt2-clear
16D0 txt2-hchar
16EE (txt2-hchar-colors)
1768 txt2-vchar
17A4 txt2-setupregs
17AA Text2ModeRegs
17B4 Text2Functions
17C8 Text2ModeParams
1810 txt2-setupmode
1820 text2-mode
1836 bit-pixaddr
184A bit-chaddr
1854 bit-setupmode
186A bit-drawchar
1898 (set-bits)
18B2 (reset-bits)
18BA bit-blinkcursor
190A bit-clear-rows
193A bit-clear
197E bit-updatecolors
199C bit-setfont
199E bit-set-patt-reg
19B2 bit-set-color-reg
19D2 bit-setupregs
19DE BitFunctions
19F2 BitModeRegs
19FA BitModeParams
1A42 bit-mode
1A52 MonoBitModeRegs
1A5A MonoModeParams
1AA2 mono-mode
1AB8 Gfx3ModeRegs
1AC0 Gfx3ModeParams
1B08 gfx3-setupregs
1B10 gfx3-mode
1B20 msx-stdpalette
1B42 msx-vstatus0
1B48 msx-pixaddr
1B62 msx-setupmode
1B7E msx-cmdsetup
1B86 msx-waitcmdready
1B9A msx-waittxready
1BB0 msx-setupMMMcommand
1BC0 msx-cmd-word
1BCA msx-setup-cursor-DXDY
1BDC msx-cursor-color
1BE0 msx-adjust-cursor-color
1BE2 msx-blinkcursor
1C06 msx-color-temp
1C0A msx-updatecolors
1CD0 msx-setfont
1CD2 msx-clear
1D16 msx-use-drawchar-accel
1D18 msx-sendcharpixel
1D28 msx-drawchar-accel
1D8C msx-crosses-bank
1DA2 msx-drawchar-16
1E14 msx-drawchar-4
1E92 msx-drawchar-256
1F02 msx-set-patt-reg
1F0C msx-set-sprite-reg
1F20 msx-setupregs
1F28 MsxFunctions
1F38 Gfx4ModeRegs
1F40 Gfx4ModeParams
1F9C gfx4-mode
1FAC Gfx6ModeRegs
1FB4 Gfx6ModeParams
2010 gfx6-mode
2020 Gfx5ModeRegs
202A Gfx5ModeParams
2086 gfx5-mode
2096 Gfx7ModeRegs
209E Gfx7ModeParams
20FA gfx7-mode
2112 mode
2126 (setfont)
213C font8x8
215C font6x8
217C font5x6
219A <video
21B2 video>
21C0 #vrs
21CE vsave
21F6 vrestore
2236 vblink!
2248 vrwpage
22EC vvispage
2348 vpage
2358 video-init
2376 sound-vclear
2398 sound-off
23B0 sound-init
23B4 t-data
23B8 v-x
23BC v-y
23C0 win-mx
23C4 win-my
23C8 win-x
23CC win-y
23D0 win-sx
23D4 win-sy
23D8 win-chxs
23DC win-chys
23E0 win-cx
23E4 win-cy
23E8 t-data0
23EC t-data-size
23F0 term-refresh
243C term-reset
2446 (win-update)
246C home
2478 .xy
248C .at-xy
24AA xy
24D0 at-xy
24F0 .win!
255C win!
258E full!
259E .win@
25B8 win@
25D6 $xy
25EA txt-xy>addr
2602 home-col
2608 ch>xy
261C ch>y
262C ch>x
263C advance-row
2654 new-line
2688 advance-cursor
269E cursor-off
26A8 crlf
26AE bksp
26FA chfill
2720 hchar
2752 vchar
27C2 cls
2804 (emit)
2814 emit
2846 getch
285A cr
2868 space
2876 type
2884 kbdbufsize
2888 kbdbuf
288C kbdstate
2890 kbdtimer
2894 kbddelay
2898 kbdrate
289C kbdshift
28A0 kbdscan
28A4 kbdlast
28A8 kbdflag
28AC kbdtail
28B0 kbdhead
28B4 randnoise
28B8 read-row
28C2 toupper
28D0 buffer-key
28F8 key-actions
290E repeat-key
2952 lookup-key
2966 handle-key
2994 kbd-scan
29EA kbd-no-key
2A00 kbd-init
2A20 key?
2A38 (key)
2A58 key
2A68 ints-on
2A78 ints-off
2A84 pick
2A94 rpick
2AA4 cmove
2AB2 cmove>
2ABE m/mod
2AD8 u/mod
2AE2 u/
2AF0 umod
2AFC u*
2B0A U*/MOD
2B16 U*/
2B22 fill
2B32 /STRING
2B40 |!
2B4E &!
2B60 compare
2B98 tolower
2BB0 comparef
2BEE align-to
2C08 w>b
2C1A umax
2C2E umin
2C42 base
2C4C dp
2C58 (pad)
2C66 (#pad)
2C74 (spad)
2C80 here
2C8E decimal
2C9A hex
2CA8 digit
2CBE #ptr
2CCA demit
2CD8 dtype
2CF4 d.d
2D08 .d
2D18 /cells
2D22 (d)
2D30 DEPTH
2D42 RDEPTH
2D52 TUCK
2D5C 2!
2D6A 2@
2D7A ALIGN
2D8C ALIGNED
2D9A CHAR+
2DA6 CHARS
2DB2 CELL+
2DBE DABS
2DCE MOVE
2DE4 */
2DF2 */MOD
2DFE /
2E0C /MOD
2E1A ABS
2E2C FM/MOD
2E52 M*
2E6A MAX
2E7C MIN
2E8E MOD
2E9C SM/REM
2EBA (skip)
2EC4 dn*
2EDA >digit
2F14 >NUMBER
2F3E ]
2F4A s,
2F64 SLITERAL
2F72 S"
2F98 (abort")
2FBE ABORT"
2FD6 hld
2FE2 -pad
2FEC <#
2FFA HOLD
300A (#)
301E #
302C #>
303C #S
3048 .
3054 BL
3060 SIGN
3074 SPACES
308E U.
309C COUNT
30AA (>c)
30C2 (parse-word)
30D0 WORD
30E0 overstrike
30F8 ACCEPT
314A ENVIRONMENT?
3158 (quit?)
316E (pause?)
3188 0<>
3192 <>
319C .R
31BE ERASE
31C8 PAD
31D6 (match)
31FE (src>)
3218 (>src)
3226 PARSE
3234 (skip-spaces)
325C U.R
3276 WITHIN
3284 BLK
328E C/L
3296 \
32BA D.R
32D6 D.
32E4 UD.R
32FA UD.
3306 .S
3340 r.S
3378 ?
3386 ?error
3392 errptrs
33A8 error:"
33BC err-none
33C8 err-undefined
33DE err-interpret-only
33EE err-loading-only
3400 err-block-i/o
3414 err-compile-only
3422 err-empty-name
3434 err-control-nesting
344A err-not-deferred
345A err-out-of-range
346C err-file-i/o
3470 num-errptrs
3474 message
34A8 CHARS/BLOCK
34B4 L/BLK
34C0 FIRST
34CC PREV
34D8 LIMIT
34E2 USE
34EC SCR
34FA (b/blk)
3504 R/W
3512 +BUF
3532 buffer
3562 block
359A dirty?
35AC revert
35BC update
35D6 save-buffers
35FA flush
360E EMPTY-BUFFERS
362E load
364E ?loading
365C -->
366A thru
3680 (line)
3692 .line
36B2 list
36D8 index
36FA >latest
3708 latest
370C |immed
3710 |srch
3720 traverse
3756 nfa>xt
3764 xt>nfa
3774 nfa>imm?
3786 lfa>nfa
378E >id
379A id.
37AA width
37B2 '
37D4 ,
37E4 >BODY
37F2 ALLOT
3800 C,
3812 (find)
3822 (lookup)
3836 FIND
3854 [']
3866 IMMEDIATE
387C UNUSED
388A dwalk
389E .word
38AC WORDS
38B4 docol!
38B6 docon,
38BE dovar,
38C6 douser,
38E4 dodoes,
38EC xt!
38F8 docol,
38FA dodefer!
3908 (compile)
3912 jmpoffs,
3928 jmpoffsalloc,
3954 >fixup
3962 loop,
3970 (does>)
3982 does>
399E noop
39AE dodefer,
39C6 is-check
39EC is,
39FA is?,
3A08 lastnfa
3A18 lastxt
3A22 [
3A30 ?comp
3A42 smudge
3A4E parse-name
3A60 name"
3A82 CREATE
3AB2 per-line
3AC8 2u.
3ADA 4u.
3AF4 (dmpln)
3B54 (dmp)
3B7C dump
3B94 vdump
3BB0 [COMPILE]
3BCE POSTPONE
3BE4 csp
3BE8 leave-list
3BF4 !csp
3C06 ?csp
3C14 :
3C28 ;
3C3E ?pairs
3C4C BACK
3C5A IF
3C6E THEN
3C82 ELSE
3C94 (leave)
3CAA DO
3CBC ?DO
3CCA leave-resolve
3CE0 loop-compile
3D06 LOOP
3D16 +LOOP
3D26 ULOOP
3D38 U+LOOP
3D4A UNLOOP
3D58 LEAVE
3D6A BEGIN
3D78 UNTIL
3D8C AGAIN
3DA0 WHILE
3DAE REPEAT
3DC4 RECURSE
3DD2 EXIT
3DE2 DEFER
3DF2 IS
3DFE IS?
3E10 CONSTANT
3E26 VARIABLE
3E32 UDP
3E3E USER
3E5A :NONAME
3E6C env:
3E7C has?
3E8A >source
3E8E #source
3E96 (
3EA4 >IN
3EB0 CHAR
3EC2 REFILL
3F1E RESTORE-INPUT
3F5C SAVE-INPUT
3F7C SOURCE-ID
3F96 loadfile
3FA6 loadline
3FB4 <input
3FDA input>
3FFC ,"
4016 ?stack
403A huh?
404E dpl
405C number
40BA interpreter
40FA interpret
4116 EVALUATE
4140 (clrsrc)
4156 QUIT
419A SOURCE
41B8 [CHAR]
41C6 str=
41D6 comment?
41FC [ELSE]
4290 [THEN]
429C [ENDIF]
42A6 [IF]
42B8 defined?
42CE [IFUNDEF]
42DE [IFDEF]
42E4 >rwblk
42E8 exclink
42F4 guard
4310 toss
4330 unguard
4348 ?toss
4356 wait4
4390 fdc-ready
439A fdc-wait-ready
43A4 fdc-command
43B4 dsk-flg!
43CE dsk-flg?
43D4 motor
43D8 seek-command
43DE seek-track
4400 tracks-per-side
4404 secs-per-track
4408 bytes-per-sector
440C sec>attrs
4416 block>sec
441A disk-seek-block
4426 (disk-rwblk)
443E disk-rwblk
444C GRAMBASE
4450 #GRAM
4454 gram-rwblk
4488 DSK1
4498 GRAM
44A8 RWBLK
44AE io-init
44B6 tab-size
44B8 'col
44BC #left
44C4 >curs
44CA >ch-mov
44D4 ^del
44E6 ^clear-start
44EE ^clear-end
44F8 ^bksp
450E ^bksp-to
4528 ^curs
454C ^ins
455A ^chr
4562 >home
4588 ^home
458E ^end
45B2 ^char
45BE +tab
45D4 >ws?
4600 >tab
4622 'line
4626 >laddr
4630 ~curs
4654 >ln-mov
4668 ~del
4680 ~ins>
4686 ~clear-line
4690 ~ins
4698 (~copy)
46AE ~copy
46B6 ~paste
46C2 ~dup
46DA ~split
46FE ~join
4726 'fl
472A ovr
472E pause
473A trace
474E !up
4756 !left
4760 !right
476A !down
4772 !block-down
4778 !block-up
477E !dup-line
4784 !home
478A !end
4790 !home-line
4796 !end-line
479E (erase)
47AC !erase
47B2 !erase-to
47BA !del-line
47BE !ins/ovr
47C6 !del
47CC !bksp
47D6 (tab)
47FC !tab
4812 !untab
4826 !paste
482A !copy-line
482E !enter
484C !join
4850 !save
4854 !revert
4858 !clear
4860 !load
486A !exit
486E !interpret
4878 draw-window
48F4 !refresh
48F8 !help
493A edittab
49B8 editsz
49BC menubar
4A0E edit.char
4A20 onkey
4A5A orig-video
4A5E edit-video
4A62 in-editor
4A66 init-editor
4A74 save-video
4A86 editor.exit
4A92 'lastscr
4A96 'lastline
4A9A 'lastcol
4A9E #statuscol
4AA2 #x-border
4AA6 #y-border
4AA8 #y-menu
4AAC intp.window
4AB8 edit.window
4ABE edit.drawui
4B46 edit.drawstatus
4BA0 edit.drawline
4BC4 edit.drawblock
4BD2 edit.lastpos!
4BE6 edit.update
4C3A edit.fixblock
4C4C (edit)
4C6C edit
4C96 >edit
4C9C regs-init
4CCC cold-init
4CFC 'quit
4D18 abort
4D38 cycle
4D5E snd
4D76 delay
4D88 blast0
4DB0 blast1
4DD8 square
4DF0 hang
4E00 bootup
4E2C ints-check
4E40 vdp-status
4E50 vdp-ticks
4E62 vdp-timeout
4E78 vdp-int-handler
4ED0 kbd-int-handler
4EFA nmi-int-handler
4F1A fault-int-handler
4F3A >int-vec
4F4E set-int-vec
4F60 enable-int
4F7E call-int
4F94 ints-init
