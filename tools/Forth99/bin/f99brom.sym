0408 cell
040A cells
040E ;S
0410 @
0412 c@
0414 d@
0418 !
041A c!
041C d!
0420 +!
0422 c+!
0424 d+!
0428 1+
042A 2+
042C 1-
042E 2-
0430 dup
0432 drop
0434 swap
0436 2swap
043A over
043C 2over
0440 rot
0442 2rot
0446 0=
0448 D0=
044C =
044E D=
0452 0branch
0454 branch
0456 negate
0458 dnegate
045C +
045E d+
0462 -
0464 d-
0468 um*
046A um/mod
046C nip
0470 invert
0472 dinvert
0476 not
0478 dnot
047C or
047E dor
0482 and
0484 dand
0488 xor
048A dxor
048E nand
0490 dnand
0494 >r
0496 2>r
049A r>
049C 2r>
04A0 rdrop
04A2 r@
04A4 i
04A6 i'
04AA j
04AE j'
04B2 k
04B6 k'
04BA sp@
04BE sp!
04C2 rp@
04C6 rp!
04CA lp@
04CE lp!
04D2 (do)
04D6 (loop)
04D8 (+loop)
04DA (uloop)
04DC (u+loop)
04DE (?do)
04E6 execute
04E8 ?dup
04EA 2dup
04EE (context>)
04F0 (>context)
04F2 (user)
04F4 0<
04F8 0<=
04FC 0>
0500 0>=
0504 0U<
0508 0U<=
050C 0U>
0510 0U>=
0514 <
0516 <=
0518 >
051A >=
051C U<
051E U<=
0520 U>
0522 U>=
0524 D0<
0528 D0<=
052C D0>
0530 D0>=
0534 DU0<
0538 DU0<=
053C DU0>
0540 DU0>=
0544 D<
0548 D<=
054C D>
0550 D>=
0554 DU<
0558 DU<=
055C DU>
0560 DU>=
0564 (unloop)
056A 2rdrop
056E 2/
0570 2*
0572 LSHIFT
0574 RSHIFT
0576 URSHIFT
0578 CRSHIFT
057A SWPB
057E DLSHIFT
0582 DRSHIFT
0586 DURSHIFT
058A DCRSHIFT
058E *
0592 2drop
0596 d>q
059C dum/mod
05A0 s>d
05A4 true
05A6 false
05A8 (fill)
05AA (cfill)
05AC (cmove)
05AE (LITERAL)
05B0 (DLITERAL)
05B4 ((s"))
05C0 (S")
05C4 (SYSCALL)
05C6 CHARS/BLOCK
05CA (dbg)
05D2 (dbgf)
05DA (idle)
05E2 (register-symbol)
05EA UP0
05EE >call
05F6 call>
05FA call,
0600 inlineable
061E inlineable-imm
064C STATE
0650 literal
0680 dliteral
06C2 compile,
0794 RamVar
07A2 +Nfield
07A6 +field
07AA +1field
07AE error:
07B2 vwaddr
07B6 !vwaddr
07BE +vwaddr
07C4 +!vwaddr
07CE gwaddr
07D2 graddr
07D8 g@
07E6 gc@
07EC vc@
07F2 vc!
07F8 +vc@
07FE +vc!
0804 vfill
080E +vfill
0818 +gvmove
0826 vcmove
083A cvmove
084E gcmove
0862 cgmove
0876 >bit
0890 v-data
0894 v-screen
0898 v-screensz
089C v-patts
08A0 v-pattsz
08A4 v-colors
08A8 v-colorsz
08AC v-sprites
08B0 v-sprcol
08B4 v-sprpat
08B8 v-sprmot
08BC v-free
08C0 video-modes
08D8 text
08DA gfx
08DC bitmap
08DE gfx2
08E0 gfx3
08E2 gfx4
08E4 gfx5
08E6 gfx6
08E8 gfx7
08EA text2
08EE mono
08F2 multi
08F6 vsetbank
090A >vr
091A v-regaddr
0930 (vr!)
0940 (vr@)
0946 write-vregs
095C vid-show
0970 std-set-screen-reg
0982 std-set-color-reg
099A std-set-patt-reg
09AC std-set-sprite-reg
09C4 std-set-sprpat-reg
09D6 >v-fontaddr
09E2 v-curs-under
09E6 v-curs
09EA v-cursor-timer
09EE write-var-list
09FE v-set-alloc-list
0A06 (mode)
0A4A fg
0A4E bg
0A52 color-byte
0A60 color-word
0A70 v-refresh-colors
0A76 fg!
0A80 bg!
0A8A fg@
0A8E bg@
0A92 msx-enhregs
0AA2 (vreset)
0AB2 vreset
0ACA vstdpal
0AE2 v-cursor-off
0AF2 update-cursor
0B0A (sprite-setup)
0B2A std-sprite-setup
0B36 v9938-sprite-setup
0B4C txt-choffs
0B54 txt-chaddr
0B5C txt-waddr
0B62 txt-drawchar
0B68 txt-readchar
0B70 txt-blinkcursor
0B96 range-wrap
0BB6 (txt-hchar)
0BCE txt-hchar
0BD4 txt-vchar
0C18 txt-setupmode
0C1E txt-updatecolors
0C28 txt-clear
0C5A std-setfont
0CB2 TextFunctions
0CD2 TextModeParams
0D1A TextModeRegs
0D22 txt-setupregs
0D28 text-mode
0D36 GfxModeRegs
0D3E GfxModeParams
0D86 gfx-setupregs
0D90 gfx-setupmode
0D98 gfx-updatecolors
0DA6 gfx-mode
0DB4 >txt2-coloraddr
0DC4 txt2-drawchar
0DEC txt2-clear
0E18 txt2-hchar
0E36 (txt2-hchar-colors)
0EB0 txt2-vchar
0EEC txt2-setupregs
0EF2 Text2ModeRegs
0EFC Text2Functions
0F10 Text2ModeParams
0F58 txt2-setupmode
0F68 text2-mode
0F7A bit-pixaddr
0F8E bit-chaddr
0F98 bit-setupmode
0FAE bit-drawchar
0FDC (set-bits)
0FF6 (reset-bits)
0FFE bit-blinkcursor
104E bit-clear-rows
107E bit-clear
10C2 bit-updatecolors
10DE bit-setfont
10E0 bit-set-patt-reg
10F4 bit-set-color-reg
1114 bit-setupregs
1120 BitFunctions
1134 BitModeRegs
113C BitModeParams
1184 bit-mode
1192 MonoBitModeRegs
119A MonoModeParams
11E2 mono-mode
11F4 Gfx3ModeRegs
11FC Gfx3ModeParams
1244 gfx3-setupregs
124C gfx3-mode
125A msx-stdpalette
127C msx-vstatus0
1282 msx-pixaddr
129C msx-setupmode
12B8 msx-cmdsetup
12C0 msx-waitcmdready
12D4 msx-waittxready
12EA msx-setupMMMcommand
12FA msx-cmd-word
1304 msx-setup-cursor-DXDY
1316 msx-cursor-color
131A msx-adjust-cursor-color
131C msx-blinkcursor
1340 msx-color-temp
1344 msx-updatecolors
140A msx-setfont
140C msx-clear
1450 msx-sendcharpixel
1460 msx-drawchar-accel
14C4 msx-crosses-bank
14DA msx-drawchar-16
154C msx-drawchar-4
15CA msx-drawchar-256
163A msx-set-patt-reg
1644 msx-set-sprite-reg
1658 msx-setupregs
1660 MsxFunctions
1670 Gfx4ModeRegs
1678 Gfx4ModeParams
16D4 gfx4-mode
16E2 Gfx6ModeRegs
16EA Gfx6ModeParams
1746 gfx6-mode
1754 Gfx5ModeRegs
175E Gfx5ModeParams
17BA gfx5-mode
17C8 Gfx7ModeRegs
17D0 Gfx7ModeParams
182C gfx7-mode
183A mode
1842 (setfont)
184E v-font!
185C font!
186A font8x8
1874 font6x8
187C font5x6
1884 <video
1892 video>
1898 vblink!
18A0 vrwpage
1938 vvispage
198C vpage
199C video-init
19BC sound-vclear
19D2 sound-off
19EA sound-init
19EE t-data
19F2 term-refresh
1A3E term-reset
1A48 (win-update)
1A66 home
1A6C .xy
1A76 .at-xy
1A8E xy
1AAC at-xy
1AC4 .win!
1B28 win!
1B52 full!
1B5A .win@
1B6C win@
1B8A $xy
1B9E txt-xy>addr
1BB6 home-col
1BBC ch>xy
1BD0 ch>y
1BE0 ch>x
1BF0 advance-row
1C08 new-line
1C3C advance-cursor
1C52 cursor-off
1C5C crlf
1C62 bksp
1CA4 chfill
1CC2 hchar
1CEC vchar
1D56 cls
1D8E (emit)
1D96 (emit+)
1DA6 emit
1DDA getch
1DE8 cr
1DEE space
1DF4 type
1E02 #vrs
1E08 vsave
1E24 vrestore
1E5C kbdbuf
1E60 kbdstate
1E64 randnoise
1E68 read-row
1E72 toupper
1E80 buffer-key
1EA8 key-actions
1EBE repeat-key
1F00 lookup-key
1F16 handle-key
1F46 kbd-scan
1FA6 kbd-no-key
1FBC kbd-init
1FDA key?
1FE8 (key)
2002 key
2008 kshift
200E ints-on
2012 ints-off
2016 pick
201E rpick
2026 cmove
202A cmove>
202E m/mod
2040 u/mod
2044 u/
204A umod
2050 u*
2054 U*/MOD
205A U*/
205E fill
2062 rp0
2066 sp0
206A (find)
206E (gfind)
2072 /STRING
207A |!
2082 &!
208A tolower
2096 s<>
20C8 %-
20DC w>b
20E6 umax
20F2 umin
20FE base
2102 dp
2106 here
210A decimal
2110 hex
2116 digit
2124 #ptr
2128 demit
212E dtype
2144 d.d
2152 .d
2158 /cells
215C (d)
2162 DEPTH
216A RDEPTH
2172 TUCK
2176 2!
217E 2@
2186 ALIGN
218E ALIGNED
2194 CHAR+
2198 CHARS
219C CELL+
21A0 DABS
21A8 MOVE
21B8 */
21BE */MOD
21C6 /
21CC /MOD
21D4 ABS
21DC FM/MOD
21FC M*
220E MAX
221A MIN
2226 MOD
222A SM/REM
2248 (skip)
224C dn*
2258 >digit
2288 >NUMBER
22AE ]
22B4 s,
22C2 SLITERAL
22CA S"
22E4 (abort")
2300 ABORT"
2312 hld
2316 -pad
231C <#
2322 HOLD
232C (#)
233C #
2344 #>
234E #S
2356 .
235C BL
2360 SIGN
236A SPACES
237E U.
2384 COUNT
238A (>c)
2392 (parse-word)
2398 WORD
23A8 overstrike
23B6 ACCEPT
23F8 ENVIRONMENT?
23FC (quit?)
2406 (pause?)
241A 0<>
241E <>
2422 .R
243C ERASE
2440 PAD
2448 (match)
2474 (src>)
2484 (>src)
248A (PARSE)
24A2 PARSE
24B4 (skip-spaces)
24D6 U.R
24E6 WITHIN
24EE BLK
24F2 C/L
24F6 \
250A D.R
2520 D.
2526 UD.R
2536 UD.
253C .S
2570 r.S
25A4 ?
25A8 ?error
25B4 message
25EE L/BLK
25F2 FIRST
25F6 PREV
25FA LIMIT
25FE USE
2602 SCR
2606 R/W
260C +BUF
2622 buffer
264A block
2678 dirty?
2680 revert
2686 update
2690 save-buffers
26AC flush
26B0 EMPTY-BUFFERS
26C8 load
26DC ?loading
26E4 -->
26EA thru
26F6 (line)
2700 .line
2718 list
2736 index
274E latest
2752 traverse
277C nfa>xt
2780 xt>nfa
2784 nfa>imm?
278C lfa>nfa
278E nfa>lfa
2790 >id
2796 id.
279E width
27A2 '
27B6 ,
27BE >BODY
27C4 ALLOT
27CC C,
27D4 FIND
27F2 (lookup)
27FC [']
2802 IMMEDIATE
280E UNUSED
2814 dwalk
2828 .word
282E WORDS
283A FORGET
284E docol!
2850 docon,
2858 dovalue,
2864 do>to,
2866 dovar,
286E douser,
288C dodoes,
2894 xt!
2896 docol,
2898 dodefer!
289A (compile)
28A4 jmpoffs,
28BA jmpoffsalloc,
28DC >fixup
28E2 loop,
28E6 (does>)
28F0 does>
2904 dodefer,
2910 is-check
2928 is,
292E is?,
2932 lastnfa
2938 lastxt
293E [
2944 noop
2946 ?comp
294E smudge
295A parse-name
2968 name"
2980 CREATE
29A4 per-line
29B4 2u.
29C0 4u.
29D0 (dmpln)
2A28 (dmp)
2A48 dump
2A58 vdump
2A68 [COMPILE]
2A7A POSTPONE
2A8A csp
2A8E !csp
2A98 ?csp
2AA2 :
2AB2 ;
2ABE ?pairs
2AC4 BACK
2ACC IF
2AD8 THEN
2AE4 ELSE
2AF6 (leave)
2B06 DO
2B12 ?DO
2B20 leave-resolve
2B36 loop-compile
2B54 LOOP
2B5C +LOOP
2B64 ULOOP
2B6C U+LOOP
2B74 UNLOOP
2B7A LEAVE
2B84 BEGIN
2B8A UNTIL
2B96 AGAIN
2BA2 WHILE
2BA6 REPEAT
2BB2 RECURSE
2BB8 EXIT
2BC0 DEFER
2BCA IS
2BD0 IS?
2BD6 CONSTANT
2BE0 VARIABLE
2BE6 VALUE
2BF0 TO
2C04 UDP
2C08 USER
2C1A :NONAME
2C24 env:
2C2C has?
2C3A (
2C42 >IN
2C46 CHAR
2C4C REFILL
2C98 RESTORE-INPUT
2CC8 SAVE-INPUT
2CDC SOURCE-ID
2CEA loadfile
2CEE loadline
2CF2 <input
2D0E input>
2D2A ,"
2D3A ?stack
2D56 huh?
2D64 number
2DC2 interpreter
2DF0 (parse-name)
2DF8 interpret
2E06 EVALUATE
2E24 (clrsrc)
2E32 QUIT
2E6A SOURCE
2E7E [CHAR]
2E84 str=
2E88 comment?
2EA4 [ELSE]
2F2E [THEN]
2F30 [ENDIF]
2F32 [IF]
2F38 defined?
2F42 [IFUNDEF]
2F48 [IFDEF]
2F4E guard
2F62 toss
2F78 unguard
2F88 ?toss
2F8E wait4
2FC8 fdc-ready
2FD8 fdc-wait-ready
2FE2 fdc-command
2FF0 dsk-flg!
300A dsk-flg?
3010 motor
3016 seek-command
301C seek-track
3046 sec>attrs
3050 block>sec
3054 disk-seek-sec
305E drq-ready
3066 (dsk-read)
306E (dsk-write)
3074 xfer
309C (disk-rwblk)
30D4 disk-rwblk
30EE gram-rwblk
311A set-disk
3120 DSK1
3132 GRAM
3138 RWBLK
314A io-init
3152 baddrs!
31A0 baddr
31A4 baddr)
31A8 (>lend)
31D0 >lend
31D6 to-line
31E8 laddrs!
3202 >llen
320A >curs
3212 delete-range
3252 insert-range
32A8 fl|
32AE ^curs
32C8 ^del
32D8 ^ins
32E4 ^chr
32EC caddr>col!
32F4 ^home
3318 ^end
333A space-to-column
335C ^char
3372 +tab
3384 ~curs
33A0 [line)
33AA ~del
33B4 ~ins>
33C4 ~ins
33D0 (~copy)
33E0 !copy-line
33E6 !paste
3408 ~dup
3410 'fl
3414 pause
3420 trace
3434 !left
343E !right
3448 !up
3450 !down
3458 !block-down
345E !block-up
3464 !dup-line
346A !home-line
346C !end-line
3478 (erase)
3480 !erase
3486 !erase-to
3490 !ins/ovr
3498 fix-column
34A4 !bksp
34AE (tab)
34BC !tab
34D0 !untab
34E4 !enter
3506 !join
350E !clear
3516 !load
3520 !exit
3524 !interpret
352E draw-window
35AA !refresh
35B0 !help
3602 edittab
3680 edit.char
368E onkey
36CE init-editor
36DC save-video
36EE editor.exit
36FA intp.window
3706 edit.window
370C edit.drawui
37AE edit.drawstatus
383A drawline
3886 edit.drawline
3890 #drawline
38AA edit.drawblock
38BE surround
3904 edit.scroll
3918 edit.lastpos!
392C edit.update
399C edit.fixblock
39AC (edit)
39C0 edit
39E4 >edit
39EA regs-init
3A08 cold-init
3A36 'quit
3A4A abort
3A54 cycle
3A74 snd
3A84 delay
3A8C blast0
3AAA blast1
3AC8 square
3AD8 hang
3ADE bootup
3AFC ints-check
3B02 vdp-status
3B06 vdp-ticks
3B0A vdp-timeout
3B0E v-intflag-off?
3B16 vdp-int-handler
3B56 kbd-int-handler
3B6E nmi-int-handler
3B88 fault-int-handler
3B9C >int-vec
3BA2 set-int-vec
3BA6 enable-int
3BB8 call-int
3BC2 ints-init
