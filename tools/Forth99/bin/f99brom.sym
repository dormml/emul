0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0570 nip
057E invert
058A dinvert
0594 not
059E dnot
05A8 or
05B0 dor
05BA and
05C4 dand
05CE xor
05D8 dxor
05E4 nand
05EE dnand
05F8 >r
0600 2>r
060A r>
0612 2r>
061E rdrop
0626 r@
062C i
0634 i'
063C j
0646 j'
064E k
0658 k'
0662 sp@
066C sp!
0676 rp@
0680 rp!
068A lp@
0694 lp!
06A0 (do)
06AE (loop)
06BA (+loop)
06C6 (uloop)
06D4 (u+loop)
06DE (?do)
06F0 execute
06FA ?dup
0704 2dup
0716 (context>)
0726 (>context)
0732 (user)
073A 0<
0744 0<=
074E 0>
0758 0>=
0762 0U<
076E 0U<=
0778 0U>
0784 0U>=
078C <
0794 <=
079A >
07A2 >=
07AA U<
07B2 U<=
07BA U>
07C2 U>=
07CA D0<
07D6 D0<=
07E0 D0>
07EC D0>=
07F8 DU0<
0804 DU0<=
0810 DU0>
081C DU0>=
0826 D<
0830 D<=
083A D>
0844 D>=
084E DU<
085A DU<=
0864 DU>
0870 DU>=
0880 (unloop)
0890 2rdrop
089A 2/
08A2 2*
08AE LSHIFT
08BA RSHIFT
08C6 URSHIFT
08D2 CRSHIFT
08DC SWPB
08EA DLSHIFT
08F8 DRSHIFT
0908 DURSHIFT
0918 DCRSHIFT
0920 *
092C 2drop
0936 d>q
0946 dum/mod
0950 s>d
095C true
0966 false
0972 (fill)
097E (cfill)
098A (cmove)
0998 (LITERAL)
09A8 (DLITERAL)
09B6 ((s"))
09CA (S")
09DA (SYSCALL)
09DC (dbg)
09E4 (dbgf)
09EC (idle)
09F4 (register-symbol)
09FC UP0
0A00 >call
0A08 call>
0A0C inlineable
0A2A inlineable-imm
0A60 STATE
0A6E literal
0AAA dliteral
0AF8 compile,
0BB0 RamVar
0BBE +Nfield
0BC2 +field
0BC6 +1field
0BCA error:
0BD8 vwaddr
0BE6 !vwaddr
0BF8 +vwaddr
0C0A +!vwaddr
0C1E gwaddr
0C2C graddr
0C38 g@
0C4C gc@
0C58 vc@
0C64 vc!
0C72 +vc@
0C80 +vc!
0C8E vfill
0CA2 +vfill
0CB6 +gvmove
0CCE vcmove
0CEC cvmove
0D0A gcmove
0D28 cgmove
0D44 >bit
0D5E v-data
0D6E v-screen
0D80 v-screensz
0D8E v-patts
0D9E v-pattsz
0DAE v-colors
0DBE v-colorsz
0DCE v-sprites
0DDE v-sprcol
0DEE v-sprpat
0DFE v-sprmot
0E0C v-free
0E10 video-modes
0E30 text
0E38 gfx
0E44 bitmap
0E4E gfx2
0E58 gfx3
0E62 gfx4
0E6C gfx5
0E76 gfx6
0E80 gfx7
0E8A text2
0E96 mono
0EA2 multi
0EA6 vsetbank
0EBA >vr
0ECA v-regaddr
0EE8 (vr!)
0F00 (vr@)
0F06 write-vregs
0F1C vid-show
0F30 std-set-screen-reg
0F42 std-set-color-reg
0F5A std-set-patt-reg
0F6C std-set-sprite-reg
0F84 std-set-sprpat-reg
0F96 >v-fontaddr
0FA2 v-curs-under
0FA6 v-curs
0FAA v-cursor-timer
0FAE write-var-list
0FBE v-set-alloc-list
0FD0 (mode)
1014 fg
1018 bg
101C color-byte
102A color-word
103A v-refresh-colors
1046 fg!
1056 bg!
1066 fg@
1070 bg@
1074 msx-enhregs
1090 (vreset)
10AA vreset
10CC vstdpal
10E4 v-cursor-off
10F4 update-cursor
110C (sprite-setup)
112C std-sprite-setup
1138 v9938-sprite-setup
114E txt-choffs
1156 txt-chaddr
115E txt-waddr
1164 txt-drawchar
116A txt-readchar
1172 txt-blinkcursor
1198 range-wrap
11B8 (txt-hchar)
11D0 txt-hchar
11D6 txt-vchar
121A txt-setupmode
1220 txt-updatecolors
122A txt-clear
125C std-setfont
12B4 TextFunctions
12D4 TextModeParams
131C TextModeRegs
1324 txt-setupregs
132A text-mode
133A GfxModeRegs
1342 GfxModeParams
138A gfx-setupregs
1394 gfx-setupmode
139C gfx-updatecolors
13AA gfx-mode
13BA >txt2-coloraddr
13CA txt2-drawchar
13F2 txt2-clear
141E txt2-hchar
143C (txt2-hchar-colors)
14B6 txt2-vchar
14F2 txt2-setupregs
14F8 Text2ModeRegs
1502 Text2Functions
1516 Text2ModeParams
155E txt2-setupmode
156E text2-mode
1584 bit-pixaddr
1598 bit-chaddr
15A2 bit-setupmode
15B8 bit-drawchar
15E6 (set-bits)
1600 (reset-bits)
1608 bit-blinkcursor
1658 bit-clear-rows
1688 bit-clear
16CC bit-updatecolors
16E8 bit-setfont
16EA bit-set-patt-reg
16FE bit-set-color-reg
171E bit-setupregs
172A BitFunctions
173E BitModeRegs
1746 BitModeParams
178E bit-mode
179E MonoBitModeRegs
17A6 MonoModeParams
17EE mono-mode
1804 Gfx3ModeRegs
180C Gfx3ModeParams
1854 gfx3-setupregs
185C gfx3-mode
186C msx-stdpalette
188E msx-vstatus0
1894 msx-pixaddr
18AE msx-setupmode
18CA msx-cmdsetup
18D2 msx-waitcmdready
18E6 msx-waittxready
18FC msx-setupMMMcommand
190C msx-cmd-word
1916 msx-setup-cursor-DXDY
1928 msx-cursor-color
192C msx-adjust-cursor-color
192E msx-blinkcursor
1952 msx-color-temp
1956 msx-updatecolors
1A1C msx-setfont
1A1E msx-clear
1A62 msx-sendcharpixel
1A72 msx-drawchar-accel
1AD6 msx-crosses-bank
1AEC msx-drawchar-16
1B5E msx-drawchar-4
1BDC msx-drawchar-256
1C4C msx-set-patt-reg
1C56 msx-set-sprite-reg
1C6A msx-setupregs
1C72 MsxFunctions
1C82 Gfx4ModeRegs
1C8A Gfx4ModeParams
1CE6 gfx4-mode
1CF6 Gfx6ModeRegs
1CFE Gfx6ModeParams
1D5A gfx6-mode
1D6A Gfx5ModeRegs
1D74 Gfx5ModeParams
1DD0 gfx5-mode
1DE0 Gfx7ModeRegs
1DE8 Gfx7ModeParams
1E44 gfx7-mode
1E5C mode
1E70 (setfont)
1E86 v-font!
1E94 font!
1EAC font8x8
1EBE font6x8
1ED0 font5x6
1EE0 <video
1EF8 video>
1F08 vblink!
1F1A vrwpage
1FBE vvispage
201A vpage
202A video-init
204A sound-vclear
206C sound-off
2084 sound-init
2088 t-data
208C term-refresh
20D8 term-reset
20E2 (win-update)
2108 home
2114 .xy
2128 .at-xy
2146 xy
216C at-xy
218C .win!
21F8 win!
222A full!
223A .win@
2254 win@
2272 $xy
2286 txt-xy>addr
229E home-col
22A4 ch>xy
22B8 ch>y
22C8 ch>x
22D8 advance-row
22F0 new-line
2324 advance-cursor
233A cursor-off
2344 crlf
234A bksp
2396 chfill
23BC hchar
23EE vchar
245E cls
24A0 (emit)
24B0 emit
24E2 getch
24F6 cr
2504 space
2512 type
2528 #vrs
2536 vsave
255E vrestore
2596 kbdbuf
259A kbdstate
259E randnoise
25A2 read-row
25AC toupper
25BA buffer-key
25E2 key-actions
25F8 repeat-key
263A lookup-key
2650 handle-key
2680 kbd-scan
26E0 kbd-no-key
26F6 kbd-init
271C key?
2732 (key)
2752 key
2762 kshift
2772 ints-on
2782 ints-off
278E pick
279E rpick
27AE cmove
27BC cmove>
27C8 m/mod
27E2 u/mod
27EC u/
27FA umod
2806 u*
2814 U*/MOD
2820 U*/
282C fill
2836 rp0
2840 sp0
284E /STRING
285C |!
286A &!
287C tolower
288E s<>
28C6 %-
28E0 w>b
28F2 umax
2906 umin
291A base
2924 dp
2930 (pad)
293E (#pad)
294C (spad)
2958 here
2966 decimal
2972 hex
2980 digit
2996 #ptr
29A2 demit
29B0 dtype
29CC d.d
29E0 .d
29F0 /cells
29F4 (d)
2A02 DEPTH
2A14 RDEPTH
2A24 TUCK
2A2E 2!
2A3C 2@
2A4C ALIGN
2A5E ALIGNED
2A6C CHAR+
2A78 CHARS
2A84 CELL+
2A90 DABS
2AA0 MOVE
2AB6 */
2AC4 */MOD
2AD0 /
2ADE /MOD
2AEC ABS
2AFE FM/MOD
2B24 M*
2B3C MAX
2B4E MIN
2B60 MOD
2B6E SM/REM
2B8C (skip)
2B96 dn*
2BAC >digit
2BE6 >NUMBER
2C10 ]
2C1C s,
2C36 SLITERAL
2C44 S"
2C5E (abort")
2C84 ABORT"
2C9C hld
2CA8 -pad
2CB2 <#
2CC0 HOLD
2CD0 (#)
2CE4 #
2CF2 #>
2D02 #S
2D0E .
2D1A BL
2D26 SIGN
2D3A SPACES
2D54 U.
2D62 COUNT
2D70 (>c)
2D78 (parse-word)
2D86 WORD
2D96 overstrike
2DAE ACCEPT
2E00 ENVIRONMENT?
2E0E (quit?)
2E24 (pause?)
2E3E 0<>
2E48 <>
2E52 .R
2E74 ERASE
2E7E PAD
2E82 (match)
2EAA (src>)
2EC4 (>src)
2ED2 PARSE
2EE0 (skip-spaces)
2F08 U.R
2F22 WITHIN
2F30 BLK
2F3A C/L
2F42 \
2F66 D.R
2F82 D.
2F90 UD.R
2FA6 UD.
2FB2 .S
2FEC r.S
3024 ?
3032 ?error
303E message
3082 CHARS/BLOCK
308E L/BLK
309A FIRST
30A6 PREV
30B2 LIMIT
30BC USE
30C6 SCR
30D4 (b/blk)
30DE R/W
30EC +BUF
310C buffer
313C block
3174 dirty?
3186 revert
3196 update
31B0 save-buffers
31D4 flush
31E8 EMPTY-BUFFERS
3208 load
3228 ?loading
3236 -->
3244 thru
3250 (line)
325A .line
327A list
32A0 index
32C2 >latest
32D0 latest
32E0 traverse
3316 nfa>xt
3324 xt>nfa
3334 nfa>imm?
3346 lfa>nfa
334E >id
335A id.
336A width
3372 '
3394 ,
33A4 >BODY
33B2 ALLOT
33C0 C,
33C8 (find)
33CC (lookup)
33E0 FIND
33FE [']
3410 IMMEDIATE
3426 UNUSED
3434 dwalk
3448 .word
3456 WORDS
345E docol!
3460 docon,
3468 dovalue,
3474 do>to,
3476 dovar,
347E douser,
349C dodoes,
34A4 xt!
34B0 docol,
34B2 dodefer!
34C0 (compile)
34CA jmpoffs,
34E0 jmpoffsalloc,
350C >fixup
351A loop,
3528 (does>)
353A does>
3556 noop
3566 dodefer,
357E is-check
35A4 is,
35B2 is?,
35C0 lastnfa
35D0 lastxt
35DA [
35E8 ?comp
35FA smudge
3606 parse-name
3618 name"
363A CREATE
366A per-line
3680 2u.
3692 4u.
36A2 (dmpln)
36FA (dmp)
3722 dump
373A vdump
3756 [COMPILE]
3774 POSTPONE
378A csp
3796 !csp
37A8 ?csp
37B6 :
37CA ;
37E0 ?pairs
37EE BACK
37FC IF
3810 THEN
3824 ELSE
3836 (leave)
384C DO
385E ?DO
386C leave-resolve
3882 loop-compile
38A8 LOOP
38B8 +LOOP
38C8 ULOOP
38DA U+LOOP
38EC UNLOOP
38FA LEAVE
390C BEGIN
391A UNTIL
392E AGAIN
3942 WHILE
3950 REPEAT
3966 RECURSE
3974 EXIT
3984 DEFER
3994 IS
39A0 IS?
39B2 CONSTANT
39C8 VARIABLE
39D6 VALUE
39E6 TO
3A00 UDP
3A0C USER
3A28 :NONAME
3A3A env:
3A4A has?
3A5C (
3A6A >IN
3A76 CHAR
3A88 REFILL
3AE4 RESTORE-INPUT
3B22 SAVE-INPUT
3B42 SOURCE-ID
3B5C loadfile
3B6C loadline
3B7A <input
3BA0 input>
3BC2 ,"
3BDC ?stack
3C00 huh?
3C14 dpl
3C22 number
3C80 interpreter
3CC0 interpret
3CDC EVALUATE
3CFA (clrsrc)
3D10 QUIT
3D52 SOURCE
3D70 [CHAR]
3D7E str=
3D82 comment?
3DA8 [ELSE]
3E3C [THEN]
3E48 [ENDIF]
3E52 [IF]
3E64 defined?
3E7A [IFUNDEF]
3E8A [IFDEF]
3E98 guard
3EB4 toss
3ED4 unguard
3EEC ?toss
3EFA wait4
3F34 fdc-ready
3F44 fdc-wait-ready
3F4E fdc-command
3F5E dsk-flg!
3F78 dsk-flg?
3F7E motor
3F84 seek-command
3F8A seek-track
3FB4 sec>attrs
3FBE block>sec
3FC2 disk-seek-sec
3FCC drq-ready
3FD4 (dsk-read)
3FDC (dsk-write)
3FE2 xfer
400A (disk-rwblk)
4042 disk-rwblk
405C gram-rwblk
4088 set-disk
4096 DSK1
40B0 GRAM
40BE RWBLK
40C4 io-init
40CC #left
40D4 >curs
40DA >ch-mov
40E4 ^del
40F6 ^clear-start
40FE ^clear-end
4108 ^bksp
411E ^bksp-to
4138 ^curs
415C ^ins
416A ^chr
4172 >home
4198 ^home
419E ^end
41C2 ^char
41CE +tab
41E4 >ws?
4210 >tab
4232 >laddr
423C ~curs
4260 >ln-mov
4274 ~del
428C ~ins>
4292 ~clear-line
429C ~ins
42A4 (~copy)
42BA ~copy
42C2 ~paste
42CE ~dup
42E6 ~split
430A ~join
4332 ovr
4336 pause
4342 trace
4356 !up
435E !left
4368 !right
4372 !down
437A !block-down
4380 !block-up
4386 !dup-line
438C !home
4392 !end
4398 !home-line
439E !end-line
43A6 (erase)
43B4 !erase
43BA !erase-to
43C2 !del-line
43C6 !ins/ovr
43CE !del
43D4 !bksp
43DE (tab)
4404 !tab
441A !untab
442E !paste
4432 !copy-line
4436 !enter
4454 !join
4458 !save
445C !revert
4460 !clear
4468 !load
4472 !exit
4476 !interpret
4480 draw-window
44FC !refresh
4500 !help
4544 edittab
45C2 edit.char
45D4 onkey
461A init-editor
4628 save-video
463A editor.exit
4646 intp.window
4652 edit.window
4658 edit.drawui
46E4 edit.drawstatus
473E edit.drawline
4762 edit.drawblock
4770 edit.lastpos!
4784 edit.update
47D8 edit.fixblock
47EA (edit)
480A edit
4834 >edit
483A regs-init
485E cold-init
488E 'quit
48AA abort
48CA cycle
48F0 snd
4908 delay
491A blast0
4942 blast1
496A square
4982 hang
4992 bootup
49B0 ints-check
49B6 vdp-status
49BA vdp-ticks
49BE vdp-timeout
49C2 v-intflag-off?
49CA vdp-int-handler
4A0A kbd-int-handler
4A22 nmi-int-handler
4A2E fault-int-handler
4A42 >int-vec
4A48 set-int-vec
4A4C enable-int
4A5E call-int
4A68 ints-init
