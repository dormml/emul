0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
0608 lp@
0612 lp!
061E (do)
062C (loop)
0638 (+loop)
0644 (uloop)
0652 (u+loop)
065C (?do)
066E execute
0678 ?dup
0682 2dup
0694 (context>)
06A4 (>context)
06B0 (user)
06B8 0<
06C2 0<=
06CC 0>
06D6 0>=
06E0 0U<
06EC 0U<=
06F6 0U>
0702 0U>=
070A <
0712 <=
0718 >
0720 >=
0728 U<
0730 U<=
0738 U>
0740 U>=
0748 D0<
0754 D0<=
075E D0>
076A D0>=
0776 DU0<
0782 DU0<=
078E DU0>
079A DU0>=
07A4 D<
07AE D<=
07B8 D>
07C2 D>=
07CC DU<
07D8 DU<=
07E2 DU>
07EE DU>=
07FE (unloop)
080E 2rdrop
0818 2/
0820 2*
082C LSHIFT
0838 RSHIFT
0844 URSHIFT
0850 CRSHIFT
085A SWPB
0868 DLSHIFT
0876 DRSHIFT
0886 DURSHIFT
0896 DCRSHIFT
089E *
08AA 2drop
08B4 d>q
08C4 dum/mod
08CE s>d
08DA true
08E4 false
08F0 (fill)
08FC (cfill)
0908 (move)
0914 (cmove)
0922 (LITERAL)
0932 (DLITERAL)
0940 ((s"))
0954 (S")
0964 (SYSCALL)
0966 I/O
0968 VDPRD
096A VDPST
096C VDPWD
096E VDPWA
0970 VDPCL
0974 VDPWI
0978 GPLRD
097C GPLRA
0980 GPLWD
0984 GPLWA
0988 SPCHRD
098C SPCHWT
0990 KBD
0994 SOUND
0998 'INTS
099C 'INTSP
09A0 M_INT_BKPT
09A2 M_INT_EXT
09A4 M_INT_VDP
09A6 M_INT_KBD
09AA 'KBD
09AE 'KBDA
09B2 'DBG
09B6 ROM
09BA (BOOT)
09BE (COLD)
09C2 DP0
09C6 (LATEST)
09CA (#RP)
09CE (#SP)
09D2 (#pad)
09D6 (##-pad)
09DA (#slit-pad)
09DE (#tib)
09E2 (#blk)
09E6 (#up)
09EA RamTop
09EE (rp0)
09F2 (sp0)
09F6 (pad0)
09FA (#-pad0)
09FE (slit-pad0)
0A02 (tib0)
0A06 (first)
0A0A (limit)
0A0E (up0)
0A12 SysCalls
0A16 IntVecs
0A1A INT_RESET
0A1E INT_NMI
0A22 INT_KBD
0A24 INT_VDP
0A26 INT_BKPT
0A28 grom_kbdlist
0A2A grom_font8x8
0A2E grom_font5x6
0A32 CTX_SP
0A34 CTX_RP
0A36 CTX_UP
0A38 CTX_INT
0A3A IbranchX
0A3C I0branchX
0A40 IRfrom
0A44 IatR
0A48 Isub
0A4C Iumul
0A50 Iudivmod
0A54 Iudivmod_d
0A58 Iuser
0A5C Iupidx
0A60 IloopUp
0A64 IuloopUp
0A68 IplusLoopUp
0A6C IuplusLoopUp
0A70 Icfill
0A74 Icmove
0A78 Iexit
0A7C Idovar
0A80 Isyscall
0A84 IlitB
0A88 IlitW
0A8C IbranchB
0A90 I0branchB
0A94 Idup_d
0A98 ItoR_d
0A9C Irdrop_d
0AA0 Irpidx
0AA4 #idle
0AA6 #dbg
0AA8 #dbgf
0AAA #regsym
0AAC (dbg)
0AB4 (dbgf)
0ABC (idle)
0AC4 (register-symbol)
0ACC UP
0AD0 ramptr
0AD4 rp0
0AD8 sp0
0AE4 STATE
0AF2 literal
0B2E dliteral
0B78 >call
0B8C compile,
0C22 RamVar
0C30 +Nfield
0C34 +field
0C38 +1field
0C46 vwaddr
0C54 !vwaddr
0C68 vsetbank
0C82 +vwaddr
0C94 +!vwaddr
0CA8 gwaddr
0CB6 graddr
0CC2 g@
0CD6 gc@
0CE2 vc@
0CEE vc!
0CFE (vmbr)
0D0E vmbr
0D1E (vmbw)
0D2E vmbw
0D3E gvmove
0D54 >bit
0D6E v-data
0D72 v-screen
0D76 v-screensz
0D7A v-patts
0D7E v-pattsz
0D82 v-colors
0D86 v-colorsz
0D8A v-sprites
0D8E v-sprcol
0D92 v-sprpat
0D96 v-sprmot
0D9A v-free
0D9E v-text
0DA2 v-mono
0DA6 v-width
0DAA v-height
0DAE v-font
0DB2 v-fntwidth
0DB6 v-fntheight
0DBA 'v-coordaddr
0DBE 'v-drawchar
0DC2 'v-readchar
0DC6 'v-blinkcursor
0DCA 'v-setupmode
0DCE 'v-updatecolors
0DD2 'v-setfont
0DD6 'v-clear
0DDA 'v-hchar
0DDE 'v-vchar
0DE2 msx-stride
0DE6 msx-shift
0DEA msx-mask
0DEE v-regsave
0DF2 v-data-size
0DF6 w>b
0E00 write-vregaddr
0E1A get-vreg
0E20 write-vregs
0E36 vid-show
0E44 >v-fontaddr
0E50 v-curs-under
0E54 v-curs
0E58 v-cursor-timer
0E5C v-cursor-blink
0E60 write-var-list
0E70 (mode)
0EA8 fg
0EAC bg
0EB0 color-byte
0EBE color-word
0ECE v-refresh-colors
0EDA fg!
0EEA bg!
0EFA fg@
0F04 bg@
0F08 vreset
0F1A vstdpal
0F1C v-cursor-off
0F2C update-cursor
0F44 video-modes
0F64 text
0F6C gfx
0F78 bitmap
0F82 gfx2
0F8C gfx3
0F96 gfx4
0FA0 gfx5
0FAA gfx6
0FB4 gfx7
0FBE text2
0FCA mono
0FD6 multi
0FDA last-video-mode
0FE6 #scr
0FF0 #ssz
0FFA #col
1004 #csz
100E #pat
1018 #psz
1022 #spt
102C #spr
1036 #smt
1042 #spc
104E #fre
1052 txt-chaddr
1060 txt-waddr
1066 txt-drawchar
106C txt-readchar
1074 txt-blinkcursor
109A range-wrap
10BA txt-hchar
10D4 txt-vchar
111E txt-setupmode
1124 txt-updatecolors
112E txt-clear
113C std-setfont
1146 TextFunctions
1166 TextModeParams
11A6 TextModeRegs
11B2 text-mode
11C2 (sprite-setup)
11E2 std-sprite-setup
11EE v9938-sprite-setup
1204 GfxModeRegs
1216 GfxModeParams
1256 gfx-setupmode
125E gfx-updatecolors
126C gfx-mode
127C Text2ModeRegs
128E Text2ModeParams
12CE txt2-setupmode
12DC text2-mode
12EC bit-pixaddr
1300 bit-waddr
1306 bit-raddr
130C bit-setupmode
1320 bit-drawchar
1350 (set-bits)
136A (reset-bits)
1372 bit-blinkcursor
13C2 bit-clear
13DA bit-updatecolors
13F8 bit-setfont
13FA BitFunctions
140E BitModeRegs
1420 BitModeParams
1460 bit-mode
1470 MonoBitModeRegs
1482 mono-mode
14A4 Gfx3ModeRegs
14B8 Gfx3ModeParams
14F8 gfx3-mode
1508 msx-stdpalette
152A msx-enhregs
153A msx-vstatus0
1540 msx-pixaddr
155A msx-setupmode
1560 msx-cmdsetup
1568 msx-waitcmdready
1570 msx-waittxready
1578 msx-setupMMMcommand
1588 msx-cmd-word
1592 msx-setup-cursor-DXDY
159C msx-blinkcursor
15C0 msx-color-temp
15C4 msx-clear
15D2 msx-updatecolors
167E msx-setfont
1680 msx-use-drawchar-accel
1682 msx-sendcharpixel
1692 msx-drawchar-accel
16F6 msx-drawchar-16
1746 msx-drawchar-4
17B4 msx-drawchar-256
180E MsxFunctions
181E Gfx4ModeRegs
182E Gfx4ModeParams
187E gfx4-mode
188E Gfx6ModeRegs
189E Gfx6ModeParams
18EE gfx6-mode
18FE Gfx5ModeRegs
1910 Gfx5ModeParams
1960 gfx5-mode
1970 Gfx7ModeRegs
1980 Gfx7ModeParams
19D0 gfx7-mode
19E8 mode
19F8 vfill
1A0C (setfont)
1A22 font8x8
1A42 font6x8
1A58 video-init
1A6C t-data
1A70 v-x
1A74 v-y
1A78 win-x
1A7C win-y
1A80 win-sx
1A84 win-sy
1A88 t-data-size
1A8C term-refresh
1AC2 term-reset
1ADC home
1AEE xy
1AFE xy!
1B0A curs-addr
1B22 home-col
1B28 ch>xy
1B3C ch>y
1B4C ch>x
1B5C win-chsize
1B82 advance-row
1B9A advance-cursor
1BB2 cursor-off
1BB8 crlf
1BC0 bksp
1C0C chfill
1C36 hchar
1C64 vchar
1CD0 cls
1CE2 (emit)
1CF2 emit
1D1A getch
1D2E cr
1D3C space
1D4A type
1D58 kbdbufsize
1D5C kbdbuf
1D60 kbdstate
1D64 kbdtimer
1D68 kbddelay
1D6C kbdrate
1D70 kbdshift
1D74 kbdscan
1D78 kbdlast
1D7C kbdflag
1D80 kbdtail
1D84 kbdhead
1D88 timeout
1D8C randnoise
1D90 read-row
1D9A toupper
1DA8 buffer-key
1DD0 repeat-key
1E12 lookup-key
1E26 handle-key
1E54 key-actions
1E6A kbd-scan
1EB6 kbd-no-key
1ECC kbd-init
1EEC key?
1F02 (key)
1F22 key
1F30 ints-check
1F36 vdp-status
1F3A vdp-ticks
1F3E vdp-int-handler
1F6A kbd-int-handler
1F82 nmi-int-handler
1F86 >int-vec
1F8C set-int-vec
1F90 enable-int
1FA2 call-int
1FAC ints-init
1FCE ints-on
1FDE ints-off
1FEA pick
1FFA rpick
200A cmove
2018 cmove>
2024 m/mod
203E u/mod
2048 u/
2056 umod
2062 u*
206E fill
207E /STRING
208C |!
209A &!
20AC compare
20E4 tolower
20FC comparef
213A align-to
2156 base
2160 dp
216C (pad)
217A (#pad)
2188 (spad)
2194 here
21A2 decimal
21AE hex
21BC digit
21D2 #ptr
21DE demit
21EC dtype
2208 d.d
221C .d
222E constant
223A /cells
2244 (d)
2252 DEPTH
2264 RDEPTH
2274 TUCK
227E 2!
228C 2@
229C ALIGN
22AE ALIGNED
22BC CHAR+
22C8 CHARS
22D4 CELL+
22E0 DABS
22F0 MOVE
2306 */
2314 */MOD
2320 /
232E /MOD
233C ABS
234E FM/MOD
2374 M*
238C MAX
239E MIN
23B0 MOD
23BE SM/REM
23DC (skip)
23E6 dn*
23FC >digit
2436 >NUMBER
2460 ]
246C s,
2486 SLITERAL
2494 S"
24BA (abort")
24E0 ABORT"
24F8 hld
2504 -pad
250E <#
251C HOLD
252C (#)
2540 #
254E #>
255E #S
256A .
2576 BL
2582 SIGN
2596 SPACES
25B0 U.
25BE COUNT
25CC (>c)
25E4 (parse-word)
25F2 WORD
2602 overstrike
261A ACCEPT
266C ENVIRONMENT?
267A (quit?)
2690 (pause?)
26AC #TIB
26B6 0<>
26C0 <>
26CA .R
26EC ERASE
26F6 NIP
2700 PAD
270E (match)
2736 (src>)
2750 (>src)
275E PARSE
276C (skip-spaces)
2794 U.R
27AE WITHIN
27BC BLK
27C6 C/L
27CE \
27F2 D.R
280E D.
281C UD.R
2832 UD.
283E .S
2878 r.S
28B0 ?
28B4 message
29AE ?error
29C8 CHARS/BLOCK
29D4 L/BLK
29E0 FIRST
29EC PREV
29F8 LIMIT
2A02 USE
2A0C SCR
2A1A (b/blk)
2A26 RWBLK
2A32 R/W
2A40 +BUF
2A60 buffer
2A90 block
2AC8 dirty?
2ADA revert
2AEA update
2B04 save-buffers
2B28 flush
2B3C EMPTY-BUFFERS
2B5C load
2B8C ?loading
2B9C -->
2BAA thru
2BC0 (line)
2BD2 .line
2BEA list
2C10 index
2C32 >latest
2C40 latest
2C44 |immed
2C48 |srch
2C58 traverse
2C8E nfa>xt
2C9C xt>nfa
2CAC nfa>imm?
2CBE lfa>nfa
2CC6 >id
2CD2 id.
2CE2 width
2CEA '
2D0C ,
2D1C >BODY
2D2A ALLOT
2D38 C,
2D4A (find)
2D6C nfa=
2D96 (lookup)
2DAA FIND
2DC8 [']
2DDA IMMEDIATE
2DF0 UNUSED
2DFE dwalk
2E12 .word
2E20 WORDS
2E28 docol!
2E2A dovar,
2E32 douser,
2E4C dodoes,
2E54 xt!
2E60 docol,
2E62 dodefer!
2E70 (compile)
2E7A jmpoffs,
2E90 jmpoffsalloc,
2EB8 >fixup
2EC6 loop,
2ED4 lastnfa
2EE4 lastxt
2EF4 (does>)
2F06 does>
2F16 [
2F24 noop
2F2E ?comp
2F42 smudge
2F4E parse-name
2F62 name"
2F84 CREATE
2FB4 per-line
2FCA 2u.
2FDC 4u.
2FF6 (dmpln)
3056 (dmp)
307E dump
3096 vdump
30B2 [COMPILE]
30D0 POSTPONE
30E6 csp
30EA leave-list
30F6 !csp
3108 ?csp
3118 :
312C ;
3142 ?pairs
3150 BACK
3160 BEGIN
316C IF
3180 THEN
3194 ELSE
31A6 (leave)
31BC DO
31CE ?DO
31DC leave-resolve
31F2 loop-compile
3218 LOOP
3228 +LOOP
3238 ULOOP
324A U+LOOP
325C UNLOOP
326A LEAVE
327C UNTIL
3290 AGAIN
32A4 WHILE
32B2 REPEAT
32C8 RECURSE
32D6 EXIT
32E6 DEFER
32FE VARIABLE
330A UDP
3316 USER
3332 :NONAME
3350 env:
3360 has?
3372 (
3380 >IN
338C CHAR
339E REFILL
33F6 RESTORE-INPUT
3434 SAVE-INPUT
3454 SOURCE-ID
346A >tib
3474 TIB
3484 loadfile
3494 loadline
34A2 <input
34C8 input>
34EA ,"
3504 ?stack
3528 huh?
353C dpl
354A number
35A8 interpreter
35E8 interpret
3604 EVALUATE
362E (clrsrc)
3644 QUIT
3688 SOURCE
36A6 [CHAR]
36B4 str=
36C4 comment?
36EA [ELSE]
377E [THEN]
378A [ENDIF]
3794 [IF]
37A6 defined?
37BC [IFUNDEF]
37CC [IFDEF]
37D2 regs-init
3802 cold-init
3828 'quit
383C abort
385C cycle
3882 snd
389A delay
38AC blast0
38D4 blast1
38F2 bootup
