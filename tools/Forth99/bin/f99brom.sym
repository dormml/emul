0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
0608 lp@
0612 lp!
061E (do)
062C (loop)
0638 (+loop)
0644 (uloop)
0652 (u+loop)
065C (?do)
066E execute
0678 ?dup
0682 2dup
0694 (context>)
06A4 (>context)
06B0 (user)
06B8 0<
06C2 0<=
06CC 0>
06D6 0>=
06E0 0U<
06EC 0U<=
06F6 0U>
0702 0U>=
070A <
0712 <=
0718 >
0720 >=
0728 U<
0730 U<=
0738 U>
0740 U>=
0748 D0<
0754 D0<=
075E D0>
076A D0>=
0776 DU0<
0782 DU0<=
078E DU0>
079A DU0>=
07A4 D<
07AE D<=
07B8 D>
07C2 D>=
07CC DU<
07D8 DU<=
07E2 DU>
07EE DU>=
07FE (unloop)
080E 2rdrop
0818 2/
0820 2*
082C LSHIFT
0838 RSHIFT
0844 URSHIFT
0850 CSHIFT
085A SWPB
0868 DLSHIFT
0876 DRSHIFT
0886 DURSHIFT
0894 DCSHIFT
089C *
08A8 2drop
08B2 d>q
08C2 dum/mod
08CC s>d
08D8 true
08E2 false
08EE (fill)
08FA (cfill)
0906 (move)
0912 (cmove)
0920 (LITERAL)
0930 (DLITERAL)
093E ((s"))
0952 (S")
0962 (SYSCALL)
0964 I/O
0966 VDPRD
0968 VDPST
096A VDPWD
096E VDPWA
0972 VDPCL
0976 VDPWI
097A GPLRD
097E GPLRA
0982 GPLWD
0986 GPLWA
098A SPCHRD
098E SPCHWT
0992 KBD
0996 SOUND
099A 'INTS
099E 'INTSP
09A2 M_INT_BKPT
09A4 M_INT_EXT
09A6 M_INT_VDP
09A8 M_INT_KBD
09AC 'KBD
09B0 'KBDA
09B4 'DBG
09B8 ROM
09BC (BOOT)
09C0 (COLD)
09C4 DP0
09C8 (LATEST)
09CC (#RP)
09D0 (#SP)
09D4 (#pad)
09D8 (##-pad)
09DC (#slit-pad)
09E0 (#tib)
09E4 (#blk)
09E8 (#up)
09EC RamTop
09F0 (rp0)
09F4 (sp0)
09F8 (pad0)
09FC (#-pad0)
0A00 (slit-pad0)
0A04 (tib0)
0A08 (first)
0A0C (limit)
0A10 (up0)
0A14 SysCalls
0A18 IntVecs
0A1C INT_RESET
0A20 INT_NMI
0A24 INT_KBD
0A26 INT_VDP
0A28 INT_BKPT
0A2A grom_kbdlist
0A2C grom_font8x8
0A30 grom_font5x6
0A34 CTX_SP
0A36 CTX_RP
0A38 CTX_UP
0A3A CTX_INT
0A3C IbranchX
0A3E I0branchX
0A42 IRfrom
0A46 IatR
0A4A Isub
0A4E Iumul
0A52 Iudivmod
0A56 Iudivmod_d
0A5A Iuser
0A5E Iupidx
0A62 IloopUp
0A66 IuloopUp
0A6A IplusLoopUp
0A6E IuplusLoopUp
0A72 Icfill
0A76 Icmove
0A7A Iexit
0A7E Idovar
0A82 Isyscall
0A86 IlitB
0A8A IlitW
0A8E IbranchB
0A92 I0branchB
0A96 Idup_d
0A9A ItoR_d
0A9E Irdrop_d
0AA2 Irpidx
0AA6 #idle
0AA8 #dbg
0AAA #dbgf
0AAC #regsym
0AAE (dbg)
0AB6 (dbgf)
0ABE (idle)
0AC6 (register-symbol)
0ACE ramptr
0AD2 UP
0AD6 rp0
0ADA sp0
0ADE (pad)
0AE2 (#pad)
0AE6 (spad)
0AF2 STATE
0B00 literal
0B3C dliteral
0B86 >call
0B9A compile,
0C30 RamVar
0C4A vwaddr
0C58 !vwaddr
0C6A gwaddr
0C78 graddr
0C84 g@
0C98 gc@
0CA4 vc@
0CB0 vc!
0CC2 (vmbr)
0CD2 vmbr
0CE2 (vmbw)
0CF2 vmbw
0D02 gvmove
0D1A >bit
0D34 VRegSave
0D46 w>b
0D50 write-vregaddr
0D68 get-vreg
0D6E (>LOCALS)
0D76 (LOCALS>)
0D80 write-vregs
0D98 vid-show
0DA6 v-mode
0DAA +field
0DAE +1field
0DB2 v-screen
0DB6 v-screensz
0DBA v-patts
0DBE v-pattsz
0DC2 v-colors
0DC6 v-colorsz
0DCA v-sprites
0DCE v-sprcol
0DD2 v-sprpat
0DD6 v-sprmot
0DDA v-free
0DDE v-width
0DE2 v-height
0DE6 v-ccols
0DEA v-crows
0DEE v-chwidth
0DF2 v-chheight
0DF6 v-mono
0DFA 'v-coordaddr
0DFE 'v-drawchar
0E02 'v-savechar
0E06 'v-restorechar
0E0A 'v-drawcursor
0E0E 'v-setupmode
0E12 'v-updatecolors
0E16 'v-setfont
0E1A 'v-clear
0E1E 'v-hchar
0E22 'v-vchar
0E26 v-mode-size
0E2A v-font
0E2E >v-fontaddr
0E3A v-curs-under
0E3E v-curs
0E42 v-cursor-timer
0E46 v-cursor-blink
0E4A write-var-list
0E5A (mode)
0E7A fg
0E7E bg
0E82 color-byte
0E90 v-refresh-colors
0E9E fg!
0EAE bg!
0EBE fg@
0EC8 bg@
0ECC vreset
0EDE vstdpal
0EE0 v-cursor-on
0EFE v-cursor-off
0F18 update-cursor
0F36 video-modes
0F56 text
0F5E gfx
0F6A bitmap
0F74 gfx2
0F7E gfx3
0F88 gfx4
0F92 gfx5
0F9C gfx6
0FA6 gfx7
0FB0 text2
0FBC mono
0FC8 multi
0FCC last-video-mode
0FD8 #scr
0FE2 #ssz
0FEC #col
0FF6 #csz
1000 #pat
100A #psz
1014 #spt
101E #spr
1028 #smt
1034 #spc
1040 #fre
1044 txt-coordaddr
1052 txt-waddr
1056 txt-raddr
105C txt-drawchar
1062 txt-savechar
1068 txt-restorechar
1070 txt-drawcursor
1078 range-wrap
1098 txt-hchar
10B0 txt-vchar
10F6 txt-setupmode
10F8 txt-updatecolors
1100 txt-clear
110E std-setfont
1132 TextFunctions
115A TextModeParams
119A TextModeRegs
11A6 text-mode
11B6 (sprite-setup)
11D6 std-sprite-setup
11E2 v9938-sprite-setup
11F8 GfxModeRegs
120A GfxModeParams
124A gfx-setupmode
124E gfx-updatecolors
125A gfx-mode
126A Text2ModeRegs
127C Text2ModeParams
12BC txt2-setupmode
12CA text2-mode
12DA bit-cursor-8
12E4 bit-cursor
12E8 bit-pixaddr
12FC bit-waddr
1300 bit-raddr
1304 bit-setupmode
131A bit-coordaddr
132C bit-drawchar
1358 bit-savechar
1364 bit-restorechar
136E bit-drawcursor
137A bit-clear
1392 bit-updatecolors
13AC bit-setfont
13BA BitFunctions
13E2 BitModeRegs
13F4 BitModeParams
1434 bit-mode
144A MonoBitModeRegs
145C mono-mode
148C mode
149C vfill
14B2 (setfont)
14C8 font8x8
14DE video-init
14F2 vx
14F6 vy
14FA win-x
14FE win-y
1502 win-sx
1506 win-sy
150A term-refresh
1528 term-reset
1548 home
1552 xy
155A xy!
1562 curs-addr
1578 advance-row
1590 advance-cursor
15A2 cursor-off
15A8 crlf
15AC bksp
15DE chfill
1600 hchar
162C vchar
167A cls
168C (emit)
169C emit
16C0 cr
16CE space
16DC type
16EA kbdbufsize
16EE kbdbuf
16F2 kbdstate
16F6 kbdtimer
16FA kbddelay
16FE kbdrate
1702 kbdshift
1706 kbdscan
170A kbdlast
170E kbdflag
1712 kbdtail
1716 kbdhead
171A timeout
171E randnoise
1722 read-row
172C toupper
173A buffer-key
1762 repeat-key
17A4 lookup-key
17B8 handle-key
17E6 key-actions
17FC kbd-scan
1848 kbd-no-key
185E kbd-init
187E key?
1892 (key)
18B2 key
18C0 ints-check
18C6 vdp-status
18CA vdp-ticks
18CE vdp-int-handler
18FA kbd-int-handler
1912 nmi-int-handler
1916 >int-vec
191C set-int-vec
1920 enable-int
1932 call-int
193C ints-init
195E ints-on
196E ints-off
197A pick
198A rpick
199A cmove
19A8 cmove>
19B4 m/mod
19CE u/mod
19D8 u/
19E6 umod
19F2 u*
19FE fill
1A0E /STRING
1A1C |!
1A2A &!
1A3C compare
1A74 tolower
1A8C comparef
1AC6 base
1AD0 dp
1ADC (pad)
1AEA (#pad)
1AF8 (spad)
1B04 here
1B12 decimal
1B1E hex
1B2C digit
1B42 #ptr
1B4E demit
1B5C dtype
1B78 d.d
1B8C .d
1B9E constant
1BAA /cells
1BB4 (d)
1BC2 DEPTH
1BD4 RDEPTH
1BE4 TUCK
1BEE 2!
1BFC 2@
1C0C ALIGN
1C1E ALIGNED
1C2C CHAR+
1C38 CHARS
1C44 CELL+
1C50 DABS
1C60 MOVE
1C76 */
1C84 */MOD
1C90 /
1C9E /MOD
1CAC ABS
1CBE FM/MOD
1CE4 M*
1CFC MAX
1D0E MIN
1D20 MOD
1D2E SM/REM
1D4C (skip)
1D56 dn*
1D6C >digit
1DA6 >NUMBER
1DD0 ]
1DDC s,
1DF6 SLITERAL
1E04 S"
1E2A (abort")
1E50 ABORT"
1E68 hld
1E74 -pad
1E7E <#
1E8C HOLD
1E9C (#)
1EB0 #
1EBE #>
1ECE #S
1EDA .
1EE6 BL
1EF2 SIGN
1F06 SPACES
1F20 U.
1F2E COUNT
1F3C (>c)
1F54 (parse-word)
1F62 WORD
1F72 overstrike
1F8A ACCEPT
1FDC ENVIRONMENT?
1FEA (quit?)
2000 (pause?)
201C #TIB
2026 0<>
2030 <>
203A .R
205C ERASE
2066 NIP
2070 PAD
207E (match)
20A6 (src>)
20C0 (>src)
20CE PARSE
20DC (skip-spaces)
2104 U.R
211E WITHIN
212C BLK
2136 C/L
213E \
2162 D.R
217E D.
218C UD.R
21A2 UD.
21AE .S
21E8 r.S
2220 ?
2224 message
231E ?error
2338 CHARS/BLOCK
2344 L/BLK
2350 FIRST
235C PREV
2368 LIMIT
2372 USE
237C SCR
238A (b/blk)
2396 RWBLK
23A2 R/W
23B0 +BUF
23D0 buffer
2400 block
2438 dirty?
244A revert
245A update
2474 save-buffers
2498 flush
24AC EMPTY-BUFFERS
24CC load
24FC ?loading
250C -->
251A thru
2530 (line)
2542 .line
255A list
2580 index
25A2 >latest
25B0 latest
25B4 |immed
25B8 |srch
25C8 traverse
25FE nfa>xt
260C xt>nfa
261C nfa>imm?
262E lfa>nfa
2636 >id
2642 id.
2652 width
265A '
267C ,
268C >BODY
269A ALLOT
26A8 C,
26BA (find)
26C6 FIND
26E4 [']
26F6 IMMEDIATE
270C UNUSED
271A dwalk
272E .word
273C WORDS
2744 docol!
2746 dovar!
274E douser!
276C dodoes,
2774 xt!
2780 docol,
2782 dodefer!
2790 (compile)
279A jmpoffs,
27B0 jmpoffsalloc,
27D8 >fixup
27E6 loop,
27F4 lastnfa
2804 lastxt
2814 (does>)
2826 does>
2836 [
2844 noop
284E ?comp
2862 smudge
286E parse-name
2882 name"
28A4 CREATE
28D6 per-line
28EC 2u.
28FE 4u.
2918 (dmpln)
2978 (dmp)
29A0 dump
29B8 vdump
29D4 [COMPILE]
29F2 POSTPONE
2A08 csp
2A0C leave-list
2A18 !csp
2A2A ?csp
2A3A :
2A4C ;
2A62 (does>)
2A72 ?pairs
2A80 BACK
2A90 BEGIN
2A9C IF
2AB0 THEN
2AC4 ELSE
2AD6 (leave)
2AEC DO
2AFE ?DO
2B0C leave-resolve
2B22 loop-compile
2B48 LOOP
2B58 +LOOP
2B68 ULOOP
2B7A U+LOOP
2B8C UNLOOP
2B9A LEAVE
2BAC UNTIL
2BC0 AGAIN
2BD4 WHILE
2BE2 REPEAT
2BF8 RECURSE
2C06 EXIT
2C16 DEFER
2C2E VARIABLE
2C3E UDP
2C4A USER
2C62 :NONAME
2C82 env:
2C92 has?
2CA4 (
2CB2 >IN
2CBE CHAR
2CD0 REFILL
2D28 RESTORE-INPUT
2D66 SAVE-INPUT
2D86 SOURCE-ID
2D9C >tib
2DA6 TIB
2DB6 loadfile
2DC6 loadline
2DD4 <input
2DFA input>
2E1E (>c)
2E2C ,"
2E46 (find)
2E68 nfa=
2E92 (lookup)
2EA8 ?stack
2ECC huh?
2EE0 dpl
2EEE number
2F4C interpreter
2F8C interpret
2FA8 EVALUATE
2FD2 (clrsrc)
2FE8 QUIT
302C SOURCE
304A [CHAR]
3058 str=
3068 comment?
308E [ELSE]
3122 [THEN]
312E [ENDIF]
3138 [IF]
314A defined?
3160 [IFUNDEF]
3170 [IFDEF]
3176 regs-init
31A6 cold-init
31CC 'quit
31E0 abort
3200 cycle
3220 bootup
