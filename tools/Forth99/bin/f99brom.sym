0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
0608 lp@
0612 lp!
061E (do)
062C (loop)
0638 (+loop)
0644 (uloop)
0652 (u+loop)
065C (?do)
066E execute
0678 ?dup
0682 2dup
0694 (context>)
06A4 (>context)
06B0 (user)
06B8 0<
06C2 0<=
06CC 0>
06D6 0>=
06E0 0U<
06EC 0U<=
06F6 0U>
0702 0U>=
070A <
0712 <=
0718 >
0720 >=
0728 U<
0730 U<=
0738 U>
0740 U>=
0748 D0<
0754 D0<=
075E D0>
076A D0>=
0776 DU0<
0782 DU0<=
078E DU0>
079A DU0>=
07A4 D<
07AE D<=
07B8 D>
07C2 D>=
07CC DU<
07D8 DU<=
07E2 DU>
07EE DU>=
07FE (unloop)
080E 2rdrop
0818 2/
0820 2*
082C LSHIFT
0838 RSHIFT
0844 URSHIFT
0850 CRSHIFT
085A SWPB
0868 DLSHIFT
0876 DRSHIFT
0886 DURSHIFT
0896 DCRSHIFT
089E *
08AA 2drop
08B4 d>q
08C4 dum/mod
08CE s>d
08DA true
08E4 false
08F0 (fill)
08FC (cfill)
0908 (move)
0914 (cmove)
0922 (LITERAL)
0932 (DLITERAL)
0940 ((s"))
0954 (S")
0964 (SYSCALL)
0966 I/O
0968 VDPRD
096A VDPST
096C VDPWD
096E VDPWA
0970 VDPCL
0974 VDPWI
0978 GPLRD
097C GPLRA
0980 GPLWD
0984 GPLWA
0988 SPCHRD
098C SPCHWT
0990 KBD
0994 SOUND
0998 'INTS
099C 'INTSP
09A0 M_INT_BKPT
09A2 M_INT_EXT
09A4 M_INT_VDP
09A6 M_INT_KBD
09AA 'KBD
09AE 'KBDA
09B2 'DBG
09B6 ROM
09BA (BOOT)
09BE (COLD)
09C2 DP0
09C6 (LATEST)
09CA (#RP)
09CE (#SP)
09D2 (#pad)
09D6 (##-pad)
09DA (#slit-pad)
09DE (#tib)
09E2 (#blk)
09E6 (#up)
09EA RamTop
09EE (rp0)
09F2 (sp0)
09F6 (pad0)
09FA (#-pad0)
09FE (slit-pad0)
0A02 (tib0)
0A06 (first)
0A0A (limit)
0A0E (up0)
0A12 SysCalls
0A16 IntVecs
0A1A INT_RESET
0A1E INT_NMI
0A22 INT_KBD
0A24 INT_VDP
0A26 INT_BKPT
0A28 grom_kbdlist
0A2A grom_font8x8
0A2E grom_font5x6
0A32 CTX_SP
0A34 CTX_RP
0A36 CTX_UP
0A38 CTX_INT
0A3A IbranchX
0A3C I0branchX
0A40 IRfrom
0A44 IRdrop
0A48 IatR
0A4C Isub
0A50 Iumul
0A54 Iudivmod
0A58 Iudivmod_d
0A5C Iload
0A60 Icload
0A64 Istore
0A68 Icstore
0A6C Iuser
0A70 Iupidx
0A74 IloopUp
0A78 IuloopUp
0A7C IplusLoopUp
0A80 IuplusLoopUp
0A84 Icfill
0A88 Icmove
0A8C Iexit
0A90 Idovar
0A94 Isyscall
0A98 IlitB
0A9C IlitW
0AA0 IbranchB
0AA4 I0branchB
0AA8 Idup_d
0AAC ItoR_d
0AB0 Irdrop_d
0AB4 Irpidx
0AB8 #idle
0ABA #dbg
0ABC #dbgf
0ABE #regsym
0AC0 (dbg)
0AC8 (dbgf)
0AD0 (idle)
0AD8 (register-symbol)
0AE0 UP
0AE4 ramptr
0AE8 rp0
0AEC sp0
0AF8 STATE
0B06 literal
0B42 dliteral
0B8C >call
0BA0 compile,
0C78 RamVar
0C86 +Nfield
0C8A +field
0C8E +1field
0C9C vwaddr
0CAA !vwaddr
0CBE vsetbank
0CD8 +vwaddr
0CEA +!vwaddr
0CFE gwaddr
0D0C graddr
0D18 g@
0D2C gc@
0D38 vc@
0D44 vc!
0D54 (vmbr)
0D64 vmbr
0D74 (vmbw)
0D84 vmbw
0D94 gvmove
0DAA >bit
0DC4 v-data
0DC8 v-screen
0DCC v-screensz
0DD0 v-patts
0DD4 v-pattsz
0DD8 v-colors
0DDC v-colorsz
0DE0 v-sprites
0DE4 v-sprcol
0DE8 v-sprpat
0DEC v-sprmot
0DF0 v-free
0DF4 v-text
0DF8 v-mono
0DFC v-width
0E00 v-height
0E04 v-font
0E08 v-fntwidth
0E0C v-fntheight
0E10 'v-coordaddr
0E14 'v-drawchar
0E18 'v-readchar
0E1C 'v-blinkcursor
0E20 'v-setupmode
0E24 'v-updatecolors
0E28 'v-setfont
0E2C 'v-clear
0E30 'v-hchar
0E34 'v-vchar
0E38 msx-stride
0E3C msx-shift
0E40 msx-mask
0E44 v-regsave
0E48 v-data-size
0E4C w>b
0E56 write-vregaddr
0E70 get-vreg
0E76 write-vregs
0E8C vid-show
0E9A >v-fontaddr
0EA6 v-curs-under
0EAA v-curs
0EAE v-cursor-timer
0EB2 v-cursor-blink
0EB6 write-var-list
0EC6 (mode)
0EFE fg
0F02 bg
0F06 color-byte
0F14 color-word
0F24 v-refresh-colors
0F30 fg!
0F40 bg!
0F50 fg@
0F5A bg@
0F5E vreset
0F70 vstdpal
0F72 v-cursor-off
0F82 update-cursor
0F9A video-modes
0FBA text
0FC2 gfx
0FCE bitmap
0FD8 gfx2
0FE2 gfx3
0FEC gfx4
0FF6 gfx5
1000 gfx6
100A gfx7
1014 text2
1020 mono
102C multi
1030 last-video-mode
103C #scr
1046 #ssz
1050 #col
105A #csz
1064 #pat
106E #psz
1078 #spt
1082 #spr
108C #smt
1098 #spc
10A4 #fre
10A8 txt-chaddr
10B6 txt-waddr
10BC txt-drawchar
10C2 txt-readchar
10CA txt-blinkcursor
10F0 range-wrap
1110 txt-hchar
112A txt-vchar
1174 txt-setupmode
117A txt-updatecolors
1184 txt-clear
1192 std-setfont
119C TextFunctions
11BC TextModeParams
11FC TextModeRegs
1208 text-mode
1218 (sprite-setup)
1238 std-sprite-setup
1244 v9938-sprite-setup
125A GfxModeRegs
126C GfxModeParams
12AC gfx-setupmode
12B4 gfx-updatecolors
12C2 gfx-mode
12D2 Text2ModeRegs
12E4 Text2ModeParams
1324 txt2-setupmode
1332 text2-mode
1342 bit-pixaddr
1356 bit-waddr
135C bit-raddr
1362 bit-setupmode
1376 bit-drawchar
13A6 (set-bits)
13C0 (reset-bits)
13C8 bit-blinkcursor
1418 bit-clear
1430 bit-updatecolors
144E bit-setfont
1450 BitFunctions
1464 BitModeRegs
1476 BitModeParams
14B6 bit-mode
14C6 MonoBitModeRegs
14D8 mono-mode
14FA Gfx3ModeRegs
150E Gfx3ModeParams
154E gfx3-mode
155E msx-stdpalette
1580 msx-enhregs
1590 msx-vstatus0
1596 msx-pixaddr
15B0 msx-setupmode
15B6 msx-cmdsetup
15BE msx-waitcmdready
15D2 msx-waittxready
15E8 msx-setupMMMcommand
15F8 msx-cmd-word
1602 msx-setup-cursor-DXDY
160C msx-blinkcursor
1630 msx-color-temp
1634 msx-clear
1642 msx-updatecolors
16EE msx-setfont
16F0 msx-use-drawchar-accel
16F2 msx-sendcharpixel
1702 msx-drawchar-accel
1766 msx-drawchar-16
17C0 msx-drawchar-4
1826 msx-drawchar-256
1892 MsxFunctions
18A2 Gfx4ModeRegs
18B2 Gfx4ModeParams
1902 gfx4-mode
1912 Gfx6ModeRegs
1922 Gfx6ModeParams
1972 gfx6-mode
1982 Gfx5ModeRegs
1994 Gfx5ModeParams
19E4 gfx5-mode
19F4 Gfx7ModeRegs
1A04 Gfx7ModeParams
1A54 gfx7-mode
1A6C mode
1A7C vfill
1A90 (setfont)
1AA6 font8x8
1AC6 font6x8
1AE6 font5x6
1AFA video-init
1B0E t-data
1B12 v-x
1B16 v-y
1B1A win-x
1B1E win-y
1B22 win-sx
1B26 win-sy
1B2A t-data-size
1B2E term-refresh
1B64 term-reset
1B7E home
1B90 xy
1BA0 xy!
1BAC curs-addr
1BC4 home-col
1BCA ch>xy
1BDE ch>y
1BEE ch>x
1BFE win-chsize
1C24 advance-row
1C3C advance-cursor
1C54 cursor-off
1C5A crlf
1C62 bksp
1CAE chfill
1CD8 hchar
1D06 vchar
1D72 cls
1D84 (emit)
1D94 emit
1DBC getch
1DD0 cr
1DDE space
1DEC type
1DFA kbdbufsize
1DFE kbdbuf
1E02 kbdstate
1E06 kbdtimer
1E0A kbddelay
1E0E kbdrate
1E12 kbdshift
1E16 kbdscan
1E1A kbdlast
1E1E kbdflag
1E22 kbdtail
1E26 kbdhead
1E2A timeout
1E2E randnoise
1E32 read-row
1E3C toupper
1E4A buffer-key
1E72 repeat-key
1EB4 lookup-key
1EC8 handle-key
1EF6 key-actions
1F0C kbd-scan
1F58 kbd-no-key
1F6E kbd-init
1F8E key?
1FA4 (key)
1FC4 key
1FD2 ints-check
1FD8 vdp-status
1FDC vdp-ticks
1FE0 vdp-int-handler
200C kbd-int-handler
2024 nmi-int-handler
2030 >int-vec
2036 set-int-vec
203A enable-int
204C call-int
2056 ints-init
2078 ints-on
2088 ints-off
2094 pick
20A4 rpick
20B4 cmove
20C2 cmove>
20CE m/mod
20E8 u/mod
20F2 u/
2100 umod
210C u*
2118 fill
2128 /STRING
2136 |!
2144 &!
2156 compare
218E tolower
21A6 comparef
21E4 align-to
2200 base
220A dp
2216 (pad)
2224 (#pad)
2232 (spad)
223E here
224C decimal
2258 hex
2266 digit
227C #ptr
2288 demit
2296 dtype
22B2 d.d
22C6 .d
22D8 constant
22E4 /cells
22EE (d)
22FC DEPTH
230E RDEPTH
231E TUCK
2328 2!
2336 2@
2346 ALIGN
2358 ALIGNED
2366 CHAR+
2372 CHARS
237E CELL+
238A DABS
239A MOVE
23B0 */
23BE */MOD
23CA /
23D8 /MOD
23E6 ABS
23F8 FM/MOD
241E M*
2436 MAX
2448 MIN
245A MOD
2468 SM/REM
2486 (skip)
2490 dn*
24A6 >digit
24E0 >NUMBER
250A ]
2516 s,
2530 SLITERAL
253E S"
2564 (abort")
258A ABORT"
25A2 hld
25AE -pad
25B8 <#
25C6 HOLD
25D6 (#)
25EA #
25F8 #>
2608 #S
2614 .
2620 BL
262C SIGN
2640 SPACES
265A U.
2668 COUNT
2676 (>c)
268E (parse-word)
269C WORD
26AC overstrike
26C4 ACCEPT
2716 ENVIRONMENT?
2724 (quit?)
273A (pause?)
2756 #TIB
2760 0<>
276A <>
2774 .R
2796 ERASE
27A0 NIP
27AA PAD
27B8 (match)
27E0 (src>)
27FA (>src)
2808 PARSE
2816 (skip-spaces)
283E U.R
2858 WITHIN
2866 BLK
2870 C/L
2878 \
289C D.R
28B8 D.
28C6 UD.R
28DC UD.
28E8 .S
2922 r.S
295A ?
295E message
2A58 ?error
2A72 CHARS/BLOCK
2A7E L/BLK
2A8A FIRST
2A96 PREV
2AA2 LIMIT
2AAC USE
2AB6 SCR
2AC4 (b/blk)
2AD0 RWBLK
2ADC R/W
2AEA +BUF
2B0A buffer
2B3A block
2B72 dirty?
2B84 revert
2B94 update
2BAE save-buffers
2BD2 flush
2BE6 EMPTY-BUFFERS
2C06 load
2C36 ?loading
2C46 -->
2C54 thru
2C6A (line)
2C7C .line
2C94 list
2CBA index
2CDC >latest
2CEA latest
2CEE |immed
2CF2 |srch
2D02 traverse
2D38 nfa>xt
2D46 xt>nfa
2D56 nfa>imm?
2D68 lfa>nfa
2D70 >id
2D7C id.
2D8C width
2D94 '
2DB6 ,
2DC6 >BODY
2DD4 ALLOT
2DE2 C,
2DF4 (find)
2E16 nfa=
2E40 (lookup)
2E54 FIND
2E72 [']
2E84 IMMEDIATE
2E9A UNUSED
2EA8 dwalk
2EBC .word
2ECA WORDS
2ED2 docol!
2ED4 dovar,
2EDC douser,
2EF6 dodoes,
2EFE xt!
2F0A docol,
2F0C dodefer!
2F1A (compile)
2F24 jmpoffs,
2F3A jmpoffsalloc,
2F62 >fixup
2F70 loop,
2F7E (does>)
2F90 does>
2FAE lastnfa
2FBE lastxt
2FC8 [
2FD6 noop
2FE0 ?comp
2FF4 smudge
3000 parse-name
3014 name"
3036 CREATE
3066 per-line
307C 2u.
308E 4u.
30A8 (dmpln)
3108 (dmp)
3130 dump
3148 vdump
3164 [COMPILE]
3182 POSTPONE
3198 csp
319C leave-list
31A8 !csp
31BA ?csp
31CA :
31DE ;
31F4 ?pairs
3202 BACK
3212 BEGIN
321E IF
3232 THEN
3246 ELSE
3258 (leave)
326E DO
3280 ?DO
328E leave-resolve
32A4 loop-compile
32CA LOOP
32DA +LOOP
32EA ULOOP
32FC U+LOOP
330E UNLOOP
331C LEAVE
332E UNTIL
3342 AGAIN
3356 WHILE
3364 REPEAT
337A RECURSE
3388 EXIT
3398 DEFER
33B0 VARIABLE
33BC UDP
33C8 USER
33E4 :NONAME
3402 env:
3412 has?
3424 (
3432 >IN
343E CHAR
3450 REFILL
34A8 RESTORE-INPUT
34E6 SAVE-INPUT
3506 SOURCE-ID
351C >tib
3526 TIB
3536 loadfile
3546 loadline
3554 <input
357A input>
359C ,"
35B6 ?stack
35DA huh?
35EE dpl
35FC number
365A interpreter
369A interpret
36B6 EVALUATE
36E0 (clrsrc)
36F6 QUIT
373A SOURCE
3758 [CHAR]
3766 str=
3776 comment?
379C [ELSE]
3830 [THEN]
383C [ENDIF]
3846 [IF]
3858 defined?
386E [IFUNDEF]
387E [IFDEF]
3884 regs-init
38B4 cold-init
38DA 'quit
38EE abort
390E cycle
3934 snd
394C delay
395E blast0
3986 blast1
39A4 bootup
