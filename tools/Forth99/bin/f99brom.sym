0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
0608 lp@
0612 lp!
061E (do)
062C (loop)
0638 (+loop)
0644 (uloop)
0652 (u+loop)
065C (?do)
066E execute
0678 ?dup
0682 2dup
0694 (context>)
06A4 (>context)
06B0 (user)
06B8 0<
06C2 0<=
06CC 0>
06D6 0>=
06E0 0U<
06EC 0U<=
06F6 0U>
0702 0U>=
070A <
0712 <=
0718 >
0720 >=
0728 U<
0730 U<=
0738 U>
0740 U>=
0748 D0<
0754 D0<=
075E D0>
076A D0>=
0776 DU0<
0782 DU0<=
078E DU0>
079A DU0>=
07A4 D<
07AE D<=
07B8 D>
07C2 D>=
07CC DU<
07D8 DU<=
07E2 DU>
07EE DU>=
07FE (unloop)
080E 2rdrop
0818 2/
0820 2*
082C LSHIFT
0838 RSHIFT
0844 URSHIFT
0850 CRSHIFT
085A SWPB
0868 DLSHIFT
0876 DRSHIFT
0886 DURSHIFT
0896 DCRSHIFT
089E *
08AA 2drop
08B4 d>q
08C4 dum/mod
08CE s>d
08DA true
08E4 false
08F0 (fill)
08FC (cfill)
0908 (move)
0914 (cmove)
0922 (LITERAL)
0932 (DLITERAL)
0940 ((s"))
0954 (S")
0964 (SYSCALL)
0966 I/O
0968 VDPRD
096A VDPST
096C VDPWD
096E VDPWA
0970 VDPCL
0974 VDPWI
0978 GPLRD
097C GPLRA
0980 GPLWD
0984 GPLWA
0988 SPCHRD
098C SPCHWT
0990 KBD
0994 SOUND
0998 'INTS
099C 'INTSP
09A0 M_INT_BKPT
09A2 M_INT_EXT
09A4 M_INT_VDP
09A6 M_INT_KBD
09AA 'KBD
09AE 'KBDA
09B2 'GATE
09B6 'DBG
09BA ROM
09BE (BOOT)
09C2 (COLD)
09C6 DP0
09CA (LATEST)
09CE (#RP)
09D2 (#SP)
09D6 (#pad)
09DA (##-pad)
09DE (#slit-pad)
09E2 (#tib)
09E6 (#blk)
09EA (#up)
09EE RamTop
09F2 (rp0)
09F6 (sp0)
09FA (pad0)
09FE (#-pad0)
0A02 (slit-pad0)
0A06 (tib0)
0A0A (first)
0A0E (limit)
0A12 (up0)
0A16 SysCalls
0A1A IntVecs
0A1E INT_RESET
0A22 INT_NMI
0A26 INT_KBD
0A28 INT_VDP
0A2A INT_BKPT
0A2C grom_kbdlist
0A2E grom_font8x8
0A32 grom_font5x6
0A36 CTX_SP
0A38 CTX_RP
0A3A CTX_UP
0A3C CTX_INT
0A3E IbranchX
0A40 I0branchX
0A44 IRfrom
0A48 IRdrop
0A4C IatR
0A50 Isub
0A54 Iumul
0A58 Iudivmod
0A5C Iudivmod_d
0A60 Iload
0A64 Icload
0A68 Istore
0A6C Icstore
0A70 Iuser
0A74 Iupidx
0A78 IloopUp
0A7C IuloopUp
0A80 IplusLoopUp
0A84 IuplusLoopUp
0A88 Icfill
0A8C Icmove
0A90 Iexit
0A94 Idovar
0A98 Isyscall
0A9C IlitB
0AA0 IlitW
0AA4 IbranchB
0AA8 I0branchB
0AAC Idup_d
0AB0 ItoR_d
0AB4 Irdrop_d
0AB8 Irpidx
0ABC #idle
0ABE #dbg
0AC0 #dbgf
0AC2 #regsym
0AC4 (dbg)
0ACC (dbgf)
0AD4 (idle)
0ADC (register-symbol)
0AE4 UP
0AE8 ramptr
0AEC rp0
0AF0 sp0
0AF4 >call
0AFC inlineable
0B22 STATE
0B30 literal
0B6C dliteral
0BBA compile,
0C66 RamVar
0C74 +Nfield
0C78 +field
0C7C +1field
0C8A vwaddr
0C98 !vwaddr
0CAC vsetbank
0CC6 +vwaddr
0CD8 +!vwaddr
0CEC gwaddr
0CFA graddr
0D06 g@
0D1A gc@
0D26 vc@
0D32 vc!
0D42 (vmbr)
0D52 vmbr
0D62 (vmbw)
0D72 vmbw
0D82 gvmove
0D98 >bit
0DB2 v-data
0DB6 v-screen
0DBA v-screensz
0DBE v-patts
0DC2 v-pattsz
0DC6 v-colors
0DCA v-colorsz
0DCE v-sprites
0DD2 v-sprcol
0DD6 v-sprpat
0DDA v-sprmot
0DDE v-free
0DE2 v-text
0DE6 v-mono
0DEA v-width
0DEE v-height
0DF2 v-font
0DF6 v-fntwidth
0DFA v-fntheight
0DFE 'v-coordaddr
0E02 'v-drawchar
0E06 'v-readchar
0E0A 'v-blinkcursor
0E0E 'v-setupmode
0E12 'v-updatecolors
0E16 'v-setfont
0E1A 'v-clear
0E1E 'v-hchar
0E22 'v-vchar
0E26 msx-stride
0E2A msx-shift
0E2E msx-mask
0E32 v-regsave
0E36 v-data-size
0E3A w>b
0E44 write-vregaddr
0E5E get-vreg
0E64 write-vregs
0E7A vid-show
0E88 >v-fontaddr
0E94 v-curs-under
0E98 v-curs
0E9C v-cursor-timer
0EA0 v-cursor-blink
0EA4 write-var-list
0EB4 (mode)
0EEC fg
0EF0 bg
0EF4 color-byte
0F02 color-word
0F12 v-refresh-colors
0F1E fg!
0F2E bg!
0F3E fg@
0F48 bg@
0F4C vreset
0F5E vstdpal
0F60 v-cursor-off
0F70 update-cursor
0F88 video-modes
0FA8 text
0FB0 gfx
0FBC bitmap
0FC6 gfx2
0FD0 gfx3
0FDA gfx4
0FE4 gfx5
0FEE gfx6
0FF8 gfx7
1002 text2
100E mono
101A multi
101E last-video-mode
102A #scr
1034 #ssz
103E #col
1048 #csz
1052 #pat
105C #psz
1066 #spt
1070 #spr
107A #smt
1086 #spc
1092 #fre
1096 txt-chaddr
10A4 txt-waddr
10AA txt-drawchar
10B0 txt-readchar
10B8 txt-blinkcursor
10DE range-wrap
10FE txt-hchar
1118 txt-vchar
1162 txt-setupmode
1168 txt-updatecolors
1172 txt-clear
1180 std-setfont
118A TextFunctions
11AA TextModeParams
11EA TextModeRegs
11F6 text-mode
1206 (sprite-setup)
1226 std-sprite-setup
1232 v9938-sprite-setup
1248 GfxModeRegs
125A GfxModeParams
129A gfx-setupmode
12A2 gfx-updatecolors
12B0 gfx-mode
12C0 Text2ModeRegs
12D2 Text2ModeParams
1312 txt2-setupmode
1320 text2-mode
1330 bit-pixaddr
1344 bit-waddr
134A bit-raddr
1350 bit-setupmode
1364 bit-drawchar
1394 (set-bits)
13AE (reset-bits)
13B6 bit-blinkcursor
1406 bit-clear
141E bit-updatecolors
143C bit-setfont
143E BitFunctions
1452 BitModeRegs
1464 BitModeParams
14A4 bit-mode
14B4 MonoBitModeRegs
14C6 mono-mode
14E8 Gfx3ModeRegs
14FC Gfx3ModeParams
153C gfx3-mode
154C msx-stdpalette
156E msx-enhregs
157E msx-vstatus0
1584 msx-pixaddr
159E msx-setupmode
15A4 msx-cmdsetup
15AC msx-waitcmdready
15C0 msx-waittxready
15D6 msx-setupMMMcommand
15E6 msx-cmd-word
15F0 msx-setup-cursor-DXDY
15FA msx-blinkcursor
161E msx-color-temp
1622 msx-clear
1630 msx-updatecolors
16DC msx-setfont
16DE msx-use-drawchar-accel
16E0 msx-sendcharpixel
16F0 msx-drawchar-accel
1754 msx-drawchar-16
17AE msx-drawchar-4
1814 msx-drawchar-256
1880 MsxFunctions
1890 Gfx4ModeRegs
18A0 Gfx4ModeParams
18F0 gfx4-mode
1900 Gfx6ModeRegs
1910 Gfx6ModeParams
1960 gfx6-mode
1970 Gfx5ModeRegs
1982 Gfx5ModeParams
19D2 gfx5-mode
19E2 Gfx7ModeRegs
19F2 Gfx7ModeParams
1A42 gfx7-mode
1A5A mode
1A6A vfill
1A7E (setfont)
1A94 font8x8
1AB4 font6x8
1AD4 font5x6
1AE8 video-init
1AFC t-data
1B00 v-x
1B04 v-y
1B08 win-x
1B0C win-y
1B10 win-sx
1B14 win-sy
1B18 t-data-size
1B1C term-refresh
1B52 term-reset
1B6C home
1B7E xy
1B8E xy!
1B9A curs-addr
1BB2 home-col
1BB8 ch>xy
1BCC ch>y
1BDC ch>x
1BEC win-chsize
1C12 advance-row
1C2A advance-cursor
1C42 cursor-off
1C48 crlf
1C50 bksp
1C9C chfill
1CC6 hchar
1CF4 vchar
1D60 cls
1D72 (emit)
1D82 emit
1DAA getch
1DBE cr
1DCC space
1DDA type
1DE8 kbdbufsize
1DEC kbdbuf
1DF0 kbdstate
1DF4 kbdtimer
1DF8 kbddelay
1DFC kbdrate
1E00 kbdshift
1E04 kbdscan
1E08 kbdlast
1E0C kbdflag
1E10 kbdtail
1E14 kbdhead
1E18 timeout
1E1C randnoise
1E20 read-row
1E2A toupper
1E38 buffer-key
1E60 repeat-key
1EA2 lookup-key
1EB6 handle-key
1EE4 key-actions
1EFA kbd-scan
1F46 kbd-no-key
1F5C kbd-init
1F7C key?
1F92 (key)
1FB2 key
1FC0 ints-check
1FC6 vdp-status
1FCA vdp-ticks
1FCE vdp-int-handler
1FFA kbd-int-handler
2012 nmi-int-handler
201E >int-vec
2024 set-int-vec
2028 enable-int
203A call-int
2044 ints-init
2066 ints-on
2076 ints-off
2082 pick
2092 rpick
20A2 cmove
20B0 cmove>
20BC m/mod
20D6 u/mod
20E0 u/
20EE umod
20FA u*
2106 fill
2116 /STRING
2124 |!
2132 &!
2144 compare
217C tolower
2194 comparef
21D2 align-to
21EE base
21F8 dp
2204 (pad)
2212 (#pad)
2220 (spad)
222C here
223A decimal
2246 hex
2254 digit
226A #ptr
2276 demit
2284 dtype
22A0 d.d
22B4 .d
22C6 constant
22D2 /cells
22DC (d)
22EA DEPTH
22FC RDEPTH
230C TUCK
2316 2!
2324 2@
2334 ALIGN
2346 ALIGNED
2354 CHAR+
2360 CHARS
236C CELL+
2378 DABS
2388 MOVE
239E */
23AC */MOD
23B8 /
23C6 /MOD
23D4 ABS
23E6 FM/MOD
240C M*
2424 MAX
2436 MIN
2448 MOD
2456 SM/REM
2474 (skip)
247E dn*
2494 >digit
24CE >NUMBER
24F8 ]
2504 s,
251E SLITERAL
252C S"
2552 (abort")
2578 ABORT"
2590 hld
259C -pad
25A6 <#
25B4 HOLD
25C4 (#)
25D8 #
25E6 #>
25F6 #S
2602 .
260E BL
261A SIGN
262E SPACES
2648 U.
2656 COUNT
2664 (>c)
267C (parse-word)
268A WORD
269A overstrike
26B2 ACCEPT
2704 ENVIRONMENT?
2712 (quit?)
2728 (pause?)
2744 #TIB
274E 0<>
2758 <>
2762 .R
2784 ERASE
278E NIP
2798 PAD
27A6 (match)
27CE (src>)
27E8 (>src)
27F6 PARSE
2804 (skip-spaces)
282C U.R
2846 WITHIN
2854 BLK
285E C/L
2866 \
288A D.R
28A6 D.
28B4 UD.R
28CA UD.
28D6 .S
2910 r.S
2948 ?
294C message
2A46 ?error
2A60 CHARS/BLOCK
2A6C L/BLK
2A78 FIRST
2A84 PREV
2A90 LIMIT
2A9A USE
2AA4 SCR
2AB2 (b/blk)
2ABE RWBLK
2ACA R/W
2AD8 +BUF
2AF8 buffer
2B28 block
2B60 dirty?
2B72 revert
2B82 update
2B9C save-buffers
2BC0 flush
2BD4 EMPTY-BUFFERS
2BF4 load
2C24 ?loading
2C34 -->
2C42 thru
2C58 (line)
2C6A .line
2C82 list
2CA8 index
2CCA >latest
2CD8 latest
2CDC |immed
2CE0 |srch
2CF0 traverse
2D26 nfa>xt
2D34 xt>nfa
2D44 nfa>imm?
2D56 lfa>nfa
2D5E >id
2D6A id.
2D7A width
2D82 '
2DA4 ,
2DB4 >BODY
2DC2 ALLOT
2DD0 C,
2DE2 (find)
2E04 nfa=
2E2E (lookup)
2E42 FIND
2E60 [']
2E72 IMMEDIATE
2E88 UNUSED
2E96 dwalk
2EAA .word
2EB8 WORDS
2EC0 docol!
2EC2 dovar,
2ECA douser,
2EE4 dodoes,
2EEC xt!
2EF8 docol,
2EFA dodefer!
2F08 (compile)
2F12 jmpoffs,
2F28 jmpoffsalloc,
2F54 >fixup
2F62 loop,
2F70 (does>)
2F82 does>
2FA0 lastnfa
2FB0 lastxt
2FBA [
2FC8 noop
2FD2 ?comp
2FE6 smudge
2FF2 parse-name
3006 name"
3028 CREATE
3058 per-line
306E 2u.
3080 4u.
309A (dmpln)
30FA (dmp)
3122 dump
313A vdump
3156 [COMPILE]
3174 POSTPONE
318A csp
318E leave-list
319A !csp
31AC ?csp
31BC :
31D0 ;
31E6 ?pairs
31F4 BACK
3202 IF
3216 THEN
322A ELSE
323C (leave)
3252 DO
3264 ?DO
3272 leave-resolve
3288 loop-compile
32AE LOOP
32BE +LOOP
32CE ULOOP
32E0 U+LOOP
32F2 UNLOOP
3300 LEAVE
3312 BEGIN
3320 UNTIL
3334 AGAIN
3348 WHILE
3356 REPEAT
336C RECURSE
337A EXIT
338A DEFER
33A2 VARIABLE
33AE UDP
33BA USER
33D6 :NONAME
33F4 env:
3404 has?
3416 (
3424 >IN
3430 CHAR
3442 REFILL
349A RESTORE-INPUT
34D8 SAVE-INPUT
34F8 SOURCE-ID
350E >tib
3518 TIB
3528 loadfile
3538 loadline
3546 <input
356C input>
358E ,"
35A8 ?stack
35CC huh?
35E0 dpl
35EE number
364C interpreter
368C interpret
36A8 EVALUATE
36D2 (clrsrc)
36E8 QUIT
372C SOURCE
374A [CHAR]
3758 str=
3768 comment?
378E [ELSE]
3822 [THEN]
382E [ENDIF]
3838 [IF]
384A defined?
3860 [IFUNDEF]
3870 [IFDEF]
3876 regs-init
38A6 cold-init
38CC 'quit
38E0 abort
3900 cycle
3926 snd
393E delay
3950 blast0
3978 blast1
39A0 square
39B0 bootup
