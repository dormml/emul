0408 cell
040A cells
040E ;S
0410 @
0412 c@
0414 d@
0418 !
041A c!
041C d!
0420 +!
0422 c+!
0424 d+!
0428 1+
042A 2+
042C 1-
042E 2-
0430 dup
0432 drop
0434 swap
0436 2swap
043A over
043C 2over
0440 rot
0442 2rot
0446 0=
0448 D0=
044C =
044E D=
0452 0branch
0454 branch
0456 negate
0458 dnegate
045C +
045E d+
0462 -
0464 d-
0468 um*
046A um/mod
046C nip
0470 invert
0472 dinvert
0476 not
0478 dnot
047C or
047E dor
0482 and
0484 dand
0488 xor
048A dxor
048E nand
0490 dnand
0494 >r
0496 2>r
049A r>
049C 2r>
04A0 rdrop
04A2 r@
04A4 i
04A6 i'
04AA j
04AE j'
04B2 k
04B6 k'
04BA sp@
04BE sp!
04C2 rp@
04C6 rp!
04CA lp@
04CE lp!
04D2 (do)
04D6 (loop)
04D8 (+loop)
04DA (uloop)
04DC (u+loop)
04DE (?do)
04E6 execute
04E8 ?dup
04EA 2dup
04EE 0<
04F2 0<=
04F6 0>
04FA 0>=
04FE 0U<
0502 0U<=
0506 0U>
050A 0U>=
050E <
0510 <=
0512 >
0514 >=
0516 U<
0518 U<=
051A U>
051C U>=
051E D0<
0522 D0<=
0526 D0>
052A D0>=
052E DU0<
0532 DU0<=
0536 DU0>
053A DU0>=
053E D<
0542 D<=
0546 D>
054A D>=
054E DU<
0552 DU<=
0556 DU>
055A DU>=
055E (unloop)
0564 2rdrop
0568 2/
056A 2*
056C LSHIFT
056E RSHIFT
0570 URSHIFT
0572 CRSHIFT
0574 SWPB
0578 DLSHIFT
057C DRSHIFT
0580 DURSHIFT
0584 DCRSHIFT
0588 *
058C 2drop
0590 d>q
0596 dum/mod
059A s>d
059E true
05A0 false
05A2 (fill)
05A4 (cfill)
05A6 (cmove)
05A8 (LITERAL)
05AA (DLITERAL)
05AE ((s"))
05BA (S")
05BE CHARS/BLOCK
05C2 RamTop
05C6 UP0
05CA >call
05D2 call>
05D6 call,
05DC inlineable
05FA inlineable-imm
0628 STATE
062C literal
065C dliteral
069E literal@
06DA compile,
07AC RamVar
07BA +Nfield
07BE +field
07C2 +1field
07C6 vwaddr
07CA !vwaddr
07D2 +vwaddr
07D8 +!vwaddr
07E2 gwaddr
07E6 graddr
07EC g@
07FA g!
0806 gc@
080C gc!
0812 vc@
0818 vc!
081E +vc@
0824 +vc!
082A vfill
0834 +vfill
083E +gvmove
084C vcmove
0860 cvmove
0874 gcmove
0888 cgmove
089C cmp?
08A0 >bit
08BA (gtypez)
08C8 gtypez
08CC gtype
08E0 vvmove
0924 catch
093C throw
095A exc-init
0960 v-data
0964 v-screen
0968 v-screensz
096C v-patts
0970 v-pattsz
0974 v-colors
0978 v-colorsz
097C v-sprites
0980 v-sprcol
0984 v-sprpat
0988 v-sprmot
098C v-free
0990 v-text
0994 v-mono
0998 v-width
099C v-height
09A0 v-stride
09A4 video-modes
09BC text
09BE gfx
09C0 bitmap
09C2 gfx2
09C4 gfx3
09C6 gfx4
09C8 gfx5
09CA gfx6
09CC gfx7
09CE text2
09D2 mono
09D6 multi
09DA vsetbank
09EE >vr
09FE v-regaddr
0A14 (vr!)
0A24 (vr@)
0A2A write-vregs
0A38 vid-show
0A4C std-set-screen-reg
0A5E std-set-color-reg
0A76 std-set-patt-reg
0A88 std-set-sprite-reg
0AA0 std-set-sprpat-reg
0AB2 >v-fontaddr
0ABE v-curs-under
0AC2 v-curs
0AC6 v-cursor-timer
0ACA write-var-list
0ADA v-set-alloc-list
0AE2 (mode)
0B26 fg
0B2A bg
0B2E color-byte
0B3C color-word
0B4C v-refresh-colors
0B52 fg!
0B5C bg!
0B66 fg@
0B6A bg@
0B6E msx-enhregs
0B7E (vreset)
0B8E vreset
0BA6 vstdpal
0BBE v-cursor-off
0BCE update-cursor
0BE6 (sprite-setup)
0C06 std-sprite-setup
0C12 v9938-sprite-setup
0C28 txt-choffs
0C30 txt-chaddr
0C38 txt-waddr
0C3E txt-drawchar
0C44 txt-readchar
0C4C txt-blinkcursor
0C72 range-wrap
0C92 (txt-hchar)
0CAA txt-hchar
0CB0 txt-vchar
0CF4 txt-setupmode
0CFA txt-updatecolors
0D04 txt-clear
0D36 std-setfont
0D8E TextFunctions
0DAE TextModeParams
0DFA TextModeRegs
0E02 txt-setupregs
0E08 text-mode
0E16 GfxModeRegs
0E1E GfxModeParams
0E6A gfx-setupregs
0E74 gfx-setupmode
0E7C gfx-updatecolors
0E8A gfx-mode
0E98 >txt2-coloraddr
0EA8 txt2-blink!
0EC0 txt2-drawchar
0ED6 txt2-clear
0F02 txt2-hchar
0F20 (txt2-hchar-colors)
0F9A txt2-vchar
0FC2 txt2-setupregs
0FC8 Text2ModeRegs
0FD2 Text2Functions
0FE6 Text2ModeParams
1032 txt2-setupmode
1042 text2-mode
1054 bit-pixaddr
1068 bit-chaddr
1072 bit-setupmode
1088 bit-drawchar
10B6 (set-bits)
10D0 (reset-bits)
10D8 bit-blinkcursor
1126 bit-clear-rows
1156 bit-clear
119A bit-updatecolors
11B6 bit-setfont
11B8 bit-set-patt-reg
11CC bit-set-color-reg
11EC bit-setupregs
11F8 BitFunctions
120C BitModeRegs
1214 BitModeParams
1260 bit-mode
126E Gfx3ModeRegs
1276 Gfx3ModeParamsDiffs
128A gfx3-setupregs
1292 gfx3-mode
12A4 MonoBitModeRegs
12AC MonoModeParamsDiffs
12C8 mono-mode
12DE msx-stdpalette
1300 msx-vstatus0
1306 msx-pixaddr
1320 msx-setupmode
133C msx-cmdsetup
1344 msx-waitcmdready
1358 msx-waittxready
136E msx-setupMMMcommand
137E msx-cmd-word
1388 msx-setup-cursor-DXDY
139A msx-cursor-color
139E msx-adjust-cursor-color
13A0 msx-blinkcursor
13C4 msx-color-temp
13C8 msx-updatecolors
148E msx-setfont
1490 msx-clear
14D4 msx-sendcharpixel
14E4 msx-drawchar-accel
1548 msx-crosses-bank
155E msx-drawchar-16
15D0 msx-drawchar-4
164E msx-drawchar-256
16BE msx-set-patt-reg
16C8 msx-set-sprite-reg
16DC msx-setupregs
16E4 MsxFunctions
16F4 MsxBaseFunctions
1704 GfxSkinnyModeParams
1738 GfxFatModeParams
176C Gfx4ModeRegs
1774 Gfx4ModeParams
1794 gfx4-mode
17AA Gfx6ModeRegs
17B2 Gfx6ModeParams
17D2 gfx6-mode
17E8 Gfx5ModeRegs
17F2 Gfx5ModeParams
1812 gfx5-mode
1828 Gfx7ModeRegs
1830 Gfx7ModeParams
1850 gfx7-mode
1866 mode
186E (setfont)
187A v-font!
1882 font!
1890 font8x8
189A font6x8
18A2 font5x6
18AA <video
18B8 video>
18BE vblink!
18C6 vrwpage
195E vvispage
19B2 vpage
19C2 video-init
19E2 sound-vclear
19F8 sound-off
1A10 sound-init
1A14 t-data
1A18 win-x
1A1C win-y
1A20 win-sx
1A24 win-sy
1A28 win-chxs
1A2C win-chys
1A30 term-refresh
1A7C term-reset
1A86 (win-update)
1AA4 home
1AAA .xy
1AB4 .at-xy
1ACC xy
1AEA at-xy
1B02 .win!
1B66 win!
1B90 full!
1B98 .win@
1BAA win@
1BC8 $xy
1BDC txt-xy>addr
1BF4 home-col
1BFA ch>xy
1C0E ch>y
1C1E ch>x
1C2E advance-row
1C46 new-line
1C7A advance-cursor
1C90 cursor-off
1C9A crlf
1CA0 bksp
1CE2 chfill
1D00 hchar
1D2A vchar
1D94 cls
1DCC (emit)
1DD4 (emit+)
1DE4 emit
1E18 getch
1E26 cr
1E2C space
1E32 type
1E40 #vrs
1E46 vsave
1E5A vrestore
1E8A kbdbuf
1E8E kbdstate
1E92 randnoise
1E96 read-row
1EA0 toupper
1EAE buffer-key
1ED6 key-actions
1EEC repeat-key
1F2E lookup-key
1F46 handle-key
1F76 kbd-scan
1FD6 kbd-no-key
1FEC kbd-init
200A key?
2018 (key)
2032 key
203E kshift
2044 ints-on
2048 ints-off
204C pick
2054 rpick
205C cmove
2060 cmove>
2064 m/mod
2076 u/mod
207A u/
2080 umod
2086 u*
208A U*/MOD
2090 U*/
2094 fill
2098 rp0
209C sp0
20A0 (dbg)
20A8 (dbgf)
20B0 (idle)
20B8 (register-symbol)
20C0 (gfind)
20C4 (find)
20C8 >NUMBER
20CE (NUMBER)
20D6 |!
20DE &!
20E6 tolower
20F2 s<>
2124 %-
2138 w>b
2142 umax
214E umin
215A base
215E dp
2162 here
2166 decimal
216C hex
2172 digit
2180 #ptr
2184 demit
218A dtype
21A0 d.d
21AE .d
21B4 /cells
21B8 (d)
21BE DEPTH
21C6 RDEPTH
21CE TUCK
21D2 2!
21DA 2@
21E2 ALIGN
21EA ALIGNED
21F0 CHAR+
21F4 CHARS
21F8 CELL+
21FC DABS
2204 MOVE
2214 */
221A */MOD
2222 /
2228 /MOD
2230 ABS
2238 FM/MOD
2258 M*
226A MAX
2276 MIN
2282 MOD
2286 SM/REM
22A4 (skip)
22A8 s,
22B6 SLITERAL
22BE S"
22D8 abort
22DE (abort")
22EE ABORT"
2300 hld
2304 -pad
230A <#
2310 HOLD
231A (#)
232A #
2332 #>
233C #S
2344 .
234A BL
234E SIGN
2358 SPACES
236C U.
2372 COUNT
2378 (>c)
2380 (parse-word)
2386 WORD
2396 overstrike
23A4 clear
23B4 ACCEPT
245A ENVIRONMENT?
245E (quit?)
2468 (pause?)
247C 0<>
2480 <>
2484 .R
249E ERASE
24A2 PAD
24AA (match)
24D6 (src>)
24E6 (>src)
24EC (PARSE)
2504 PARSE
2516 (skip-spaces)
2538 U.R
2548 WITHIN
2550 BLK
2554 C/L
2558 \
256C /STRING
2574 D.R
258A D.
2590 UD.R
25A0 UD.
25A6 .S
25DA r.S
260E ?
2612 >message
2630 message
2648 ?throw
264C L/BLK
2650 FIRST
2654 PREV
2658 LIMIT
265C USE
2660 SCR
2664 ?block
266C +BUF
2682 buffer
26AC block
26F4 dirty?
26FC revert
2702 update
270C save-buffers
2728 flush
272C EMPTY-BUFFERS
2744 load
275A ?loading
2764 -->
276A thru
2776 (line)
2780 .line
2798 list
27B6 index
27CE latest
27D2 nfa>xt@
27DC nfa>xt
27E2 xt>nfa
2804 nfa>imm?
280C GCOUNT
2814 >id
281A id.
2822 GDP
2826 '
2836 ,
283E ALLOT
2846 C,
284E FIND
2874 (lookup)
287E [']
2884 IMMEDIATE
2890 UNUSED
2898 dwalk
28B2 .word
28B8 WORDS
28C4 FORGET
28DA docol!
28DC docon,
28E4 dovalue,
28F0 do>to,
28F2 dovar,
28FA >BODY
28FC douser,
291A dodoes,
2922 xt!
2924 docol,
2926 dodefer!
2928 (compile)
2932 jmpoffs,
2948 jmpoffsalloc,
296A >fixup
2970 loop,
2974 (does>)
297E does>
2994 dodefer,
29A0 is-check
29BA is,
29C0 is?,
29C4 <locals,
29CA ^locals,
29D2 locals>,
29D8 local,
29F4 (lfetch)
29FC (laddr)
2A04 [
2A0A ]
2A10 lastnfa
2A14 lastxt
2A1A noop
2A1C ?comp
2A26 smudge
2A34 parse-def-name
2A3A name"
2A48 name,
2A6C CREATE
2A84 [COMPILE]
2A96 POSTPONE
2AA6 csp
2AAA !csp
2AB4 ?csp
2AC0 :
2AD2 ;
2AE0 ?pairs
2AE6 BACK
2AEE IF
2AFA SKIP
2B06 THEN
2B12 ELSE
2B24 (leave)
2B34 DO
2B40 ?DO
2B4E leave-resolve
2B64 loop-compile
2B82 LOOP
2B8A +LOOP
2B92 ULOOP
2B9A U+LOOP
2BA2 UNLOOP
2BA8 LEAVE
2BB2 BEGIN
2BB8 UNTIL
2BC4 AGAIN
2BD0 WHILE
2BD4 REPEAT
2BE0 RECURSE
2BE6 EXIT
2BF0 DEFER
2BFA IS
2C00 IS?
2C06 CONSTANT
2C10 VARIABLE
2C16 VALUE
2C20 TO
2C3E UDP
2C42 USER
2C54 :NONAME
2C5E env:
2C66 has?
2C74 (
2C7C >IN
2C80 CHAR
2C88 REFILL
2CD4 number
2CF2 RESTORE-INPUT
2D22 SAVE-INPUT
2D36 SOURCE-ID
2D44 <input
2D60 input>
2D7C ,"
2D8C huh?
2D98 interpreter
2DB0 parse-word
2DB6 parse-name
2DC2 interpret
2DCE EVALUATE
2DEC (clrsrc)
2DFE ok-prompt?
2E18 QUIT
2E54 SOURCE
2E68 [CHAR]
2E6E str=
2E72 comment?
2E8E [ELSE]
2F18 [THEN]
2F1A [ENDIF]
2F1C [IF]
2F22 defined?
2F2C [IFUNDEF]
2F32 [IFDEF]
2F38 per-line
2F46 2u.
2F52 4u.
2F62 (dmpln)
2FB6 (dmp)
2FD6 dump
2FE6 vdump
2FF6 mfree
2FFE wait4
3038 fdc-ready
3048 fdc-wait-ready
3050 fdc-command
305E dsk-flg!
3070 dsk-flg?
3076 motor
307C seek-command
3082 seek-track
30AE sec>attrs
30B8 block>sec
30BC disk-seek-sec
30C6 drq-ready
30CE (dsk-read)
30D6 (dsk-write)
30DC xfer
3102 (disk-rwblk)
3138 disk-rwblk
314C gram-rwblk
3174 set-disk
317A fdc-interrupt
3180 DSK1
318C GRAM
3192 R/W
31A4 io-init
31A8 reset-locals
31BE init-locals
31C6 (lfind)
31D4 alloc-locals
31F2 (lname,)
3214 (local,)
3250 is-local
325A to-local
3262 lname,
3270 enter-locals
3290 exit-locals
3298 finish-locals
32A8 :>
32C0 ::
330E redraw-block
3314 fetch-block
3338 baddrs!
3384 baddr
3388 baddr)
338C (>lend)
33B8 >lend
33BE to-line
33D0 laddrs!
33EA >llen
33F2 >curs
33FA delete-range
343A insert-range
3490 fl|
3496 ^curs
34B0 ^del
34C0 ^ins
34CC ^chr
34D4 caddr>col!
34DC ^home
3500 ^end
3522 space-to-column
3544 ^char
355A +tab
356C ~curs
3588 [line)
3592 ~del
359C ~ins>
35AC ~ins
35B8 copy-tib
35C8 !copy-line
35CE !paste
35F0 ~dup
35F8 pause
3604 trace
3618 !left
3622 !right
362C !up
3634 !down
363C !block-down
3642 !block-up
3648 !dup-line
364E !prev-page
365C !next-page
3670 (erase)
3678 !erase
367E !erase-to
3688 !ins/ovr
3690 fix-column
369C !bksp
36A6 (tab)
36B0 !tab
36C4 !untab
36D6 !enter
36F8 !join
3700 !clear
3708 !load
3718 !exit
371C !interpret
3722 draw-window
379E draw-centered-window
37BC !refresh
37C2 !help
37E4 edittab
3862 edit.char
3870 onkey
38B0 init-editor
38C2 save-video
38D4 editor.exit
38E0 intp.window
38EC edit.window
38F2 edit.drawui
3994 message-window
39AE dismiss-window
39BA edit.message
39CE edit.drawstatus
3A5A drawline
3AA6 edit.drawline
3AB0 #drawline
3ACA edit.drawblock
3ADE surround
3B2E edit.scroll
3B42 edit.lastpos!
3B56 edit.update
3BCC (edit)
3BD8 edit
3BFC >edit
3C04 regs-init
3C22 cold-init
3C4C 'quit
3C60 cold
3C6A cycle
3C8A snd
3C9A delay
3CA2 blast0
3CC0 blast1
3CDE square
3CEE hang
3CF4 bye
3D1E ints-check
3D24 vdp-status
3D28 vdp-ticks
3D2C vdp-timeout
3D30 v-intflag-off?
3D38 vdp-int-handler
3D78 kbd-int-handler
3D90 nmi-int-handler
3DA0 fault-int-handler
3DB0 >int-vec
3DB6 set-int-vec
3DBA enable-int
3DCC call-int
3DD6 ints-init
3DF4 (RAM0)
3DF8 RAM
