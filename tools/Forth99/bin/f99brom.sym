0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
060A (do)
0618 (loop)
0624 (+loop)
0630 (uloop)
063E (u+loop)
0648 (?do)
065A execute
0664 ?dup
066E 2dup
0680 (context>)
0690 (>context)
069C (user)
06A4 0<
06AE 0<=
06B8 0>
06C2 0>=
06CC 0U<
06D8 0U<=
06E2 0U>
06EE 0U>=
06F6 <
06FE <=
0704 >
070C >=
0714 U<
071C U<=
0724 U>
072C U>=
0734 D0<
0740 D0<=
074A D0>
0756 D0>=
0762 DU0<
076E DU0<=
077A DU0>
0786 DU0>=
0790 D<
079A D<=
07A4 D>
07AE D>=
07B8 DU<
07C4 DU<=
07CE DU>
07DA DU>=
07EA (unloop)
07FA 2rdrop
0804 2/
080C 2*
0818 LSHIFT
0824 RSHIFT
0830 URSHIFT
083C CSHIFT
0846 SWPB
0854 DLSHIFT
0862 DRSHIFT
0872 DURSHIFT
0880 DCSHIFT
0888 *
0894 2drop
089E d>q
08AE dum/mod
08B8 s>d
08C4 true
08CE false
08DA (fill)
08E6 (cfill)
08F2 (move)
08FE (cmove)
090C (LITERAL)
091C (DLITERAL)
092A ((s"))
093E (S")
094E (SYSCALL)
0950 I/O
0952 VDPRD
0954 VDPST
0956 VDPWD
095A VDPWA
095E VDPCL
0962 VDPWI
0966 GPLRD
096A GPLRA
096E GPLWD
0972 GPLWA
0976 SPCHRD
097A SPCHWT
097E KBD
0982 SOUND
0986 'INTS
098A 'INTSP
098E M_INT_BKPT
0990 M_INT_EXT
0992 M_INT_VDP
0994 M_INT_KBD
0998 'KBD
099C 'KBDA
09A0 'DBG
09A4 ROM
09A8 (BOOT)
09AC (COLD)
09B0 DP0
09B4 (LATEST)
09B8 (#RP)
09BC (#SP)
09C0 (#pad)
09C4 (##-pad)
09C8 (#slit-pad)
09CC (#tib)
09D0 (#blk)
09D4 (#up)
09D8 RamTop
09DC (rp0)
09E0 (sp0)
09E4 (pad0)
09E8 (#-pad0)
09EC (slit-pad0)
09F0 (tib0)
09F4 (first)
09F8 (limit)
09FC (up0)
0A00 SysCalls
0A04 IntVecs
0A08 INT_RESET
0A0C INT_NMI
0A10 INT_KBD
0A12 INT_VDP
0A14 INT_BKPT
0A16 grom_kbdlist
0A18 grom_font8x8
0A1C grom_font5x6
0A20 CTX_SP
0A22 CTX_RP
0A24 CTX_UP
0A26 CTX_INT
0A28 IbranchX
0A2A I0branchX
0A2E IRfrom
0A32 IatR
0A36 Isub
0A3A Iumul
0A3E Iudivmod
0A42 Iudivmod_d
0A46 Iuser
0A4A Iupidx
0A4E IloopUp
0A52 IuloopUp
0A56 IplusLoopUp
0A5A IuplusLoopUp
0A5E Icfill
0A62 Icmove
0A66 Iexit
0A6A Idovar
0A6E Isyscall
0A72 IlitB
0A76 IlitW
0A7A IbranchB
0A7E I0branchB
0A82 Idup_d
0A86 ItoR_d
0A8A Irdrop_d
0A8E Irpidx
0A92 #idle
0A94 #dbg
0A96 #dbgf
0A98 #regsym
0A9A (dbg)
0AA2 (dbgf)
0AAA (idle)
0AB2 (register-symbol)
0ABA ramptr
0ABE UP
0AC2 rp0
0AC6 sp0
0ACA (pad)
0ACE (#pad)
0AD2 (spad)
0ADE STATE
0AEC literal
0B28 dliteral
0B72 >call
0B86 compile,
0C1C RamVar
0C36 vwaddr
0C44 !vwaddr
0C56 gwaddr
0C64 graddr
0C70 g@
0C84 gc@
0C90 vc@
0C9C vc!
0CAE (vmbr)
0CBE vmbr
0CCE (vmbw)
0CDE vmbw
0CEE gvmove
0D06 >bit
0D20 VRegSave
0D32 w>b
0D3C write-vregaddr
0D54 get-vreg
0D5A LP
0D5E (>LOCALS)
0D68 (LOCALS>)
0D74 write-vregs
0D92 vid-show
0DA0 v-mode
0DA4 +field
0DA8 +1field
0DAC v-screen
0DB0 v-screensz
0DB4 v-patts
0DB8 v-pattsz
0DBC v-colors
0DC0 v-colorsz
0DC4 v-sprites
0DC8 v-sprcol
0DCC v-sprpat
0DD0 v-sprmot
0DD4 v-free
0DD8 v-width
0DDC v-height
0DE0 v-ccols
0DE4 v-crows
0DE8 v-chwidth
0DEC v-chheight
0DF0 'v-coordaddr
0DF4 'v-drawchar
0DF8 'v-savechar
0DFC 'v-restorechar
0E00 'v-drawcursor
0E04 'v-setupmode
0E08 'v-updatecolors
0E0C 'v-setfont
0E10 'v-clear
0E14 'v-hchar
0E18 'v-vchar
0E1C v-font
0E20 >v-fontaddr
0E2C v-curs-under
0E30 v-curs
0E34 v-cursor-timer
0E38 v-cursor-blink
0E3C write-var-list
0E4C (mode)
0E66 fg
0E6A bg
0E6E color-byte
0E78 v-refresh-colors
0E86 fg!
0E92 bg!
0E9E fg@
0EA8 bg@
0EAC vreset
0EBE vstdpal
0EC0 v-cursor-on
0EDE v-cursor-off
0EF8 update-cursor
0F16 video-modes
0F36 text
0F3E gfx
0F4A bitmap
0F54 gfx2
0F5E gfx3
0F68 gfx4
0F72 gfx5
0F7C gfx6
0F86 gfx7
0F90 text2
0F9C mono
0FA8 multi
0FAC last-video-mode
0FB8 #scr
0FC2 #ssz
0FCC #col
0FD6 #csz
0FE0 #pat
0FEA #psz
0FF4 #spt
0FFE #spr
1008 #smt
1014 #spc
1020 #fre
1024 txt-coordaddr
1032 txt-waddr
1036 txt-raddr
103C txt-drawchar
1042 txt-savechar
1048 txt-restorechar
1050 txt-drawcursor
1058 range-wrap
109A txt-hchar
10B2 txt-setupmode
10B4 txt-updatecolors
10BC txt-clear
10CA std-setfont
10EE TextFunctions
1116 TextModeParams
1156 TextModeRegs
1162 text-mode
1172 (sprite-setup)
1192 std-sprite-setup
119E v9938-sprite-setup
11B4 GfxModeRegs
11C6 GfxModeParams
1206 gfx-setupmode
120A gfx-updatecolors
1216 gfx-mode
1226 Text2ModeRegs
1238 Text2ModeParams
1278 txt2-setupmode
1286 text2-mode
1296 bit-cursor-8
12A0 bit-cursor
12A4 bit-pixaddr
12B8 bit-waddr
12BC bit-raddr
12C0 bit-setupmode
12D6 bit-coordaddr
12E8 bit-drawchar
12F4 bit-savechar
1300 bit-restorechar
130A bit-drawcursor
1316 bit-clear
132E bit-updatecolors
1336 bit-setfont
1344 BitFunctions
136C BitModeRegs
137E BitModeParams
13BE bit-mode
13D6 mode
13E6 vfill
13FC (setfont)
1412 font8x8
1428 video-init
143C vx
1440 vy
1444 win-x
1448 win-y
144C win-sx
1450 win-sy
1454 term-refresh
1472 term-reset
1492 home
149C xy
14A4 xy!
14AC curs-addr
14C2 advance-row
14DA advance-cursor
14EC cursor-off
14F2 crlf
14F6 bksp
1528 chfill
154A hchar
1576 vchar
15A0 cls
15B2 (emit)
15C2 emit
15E6 cr
15F4 space
1602 type
1610 kbdbufsize
1614 kbdbuf
1618 kbdstate
161C kbdtimer
1620 kbddelay
1624 kbdrate
1628 kbdshift
162C kbdscan
1630 kbdlast
1634 kbdflag
1638 kbdtail
163C kbdhead
1640 timeout
1644 randnoise
1648 read-row
1652 toupper
1660 buffer-key
1688 repeat-key
16CA lookup-key
16DE handle-key
170C key-actions
1722 kbd-scan
176E kbd-no-key
1784 kbd-init
17A4 key?
17B8 (key)
17D8 key
17E6 ints-check
17EC vdp-status
17F0 vdp-ticks
17F4 vdp-int-handler
1820 kbd-int-handler
1838 nmi-int-handler
183C >int-vec
1842 set-int-vec
1846 enable-int
1858 call-int
1862 ints-init
1884 ints-on
1894 ints-off
18A0 pick
18B0 rpick
18C0 cmove
18CE cmove>
18DA m/mod
18F4 u/mod
18FE u/
190C umod
1918 u*
1924 fill
1934 /STRING
1942 |!
1950 &!
1962 compare
19B4 tolower
19CC comparef
1A20 base
1A2A dp
1A36 (pad)
1A44 (#pad)
1A52 (spad)
1A5E here
1A6C decimal
1A78 hex
1A86 digit
1A9C #ptr
1AA8 demit
1AB6 dtype
1AD2 d.d
1AE6 .d
1AF8 constant
1B04 /cells
1B0E (d)
1B1C DEPTH
1B2E RDEPTH
1B3E TUCK
1B48 2!
1B56 2@
1B66 ALIGN
1B78 ALIGNED
1B86 CHAR+
1B92 CHARS
1B9E CELL+
1BAA DABS
1BBA MOVE
1BD0 */
1BDE */MOD
1BEA /
1BF8 /MOD
1C06 ABS
1C18 FM/MOD
1C3E M*
1C56 MAX
1C68 MIN
1C7A MOD
1C88 SM/REM
1CA6 (skip)
1CB0 dn*
1CC6 >digit
1D00 >NUMBER
1D2A ]
1D36 s,
1D50 SLITERAL
1D5E S"
1D84 (abort")
1DAA ABORT"
1DC2 hld
1DCE -pad
1DD8 <#
1DE6 HOLD
1DF6 (#)
1E0A #
1E18 #>
1E28 #S
1E34 .
1E40 BL
1E4C SIGN
1E60 SPACES
1E7A U.
1E88 COUNT
1E96 (>c)
1EAE (parse-word)
1EBC WORD
1ECC overstrike
1EE4 ACCEPT
1F36 ENVIRONMENT?
1F44 (quit?)
1F5A (pause?)
1F76 #TIB
1F80 0<>
1F8A <>
1F94 .R
1FB6 ERASE
1FC0 NIP
1FCA PAD
1FD8 (match)
2000 (src>)
201A (>src)
2028 PARSE
2036 (skip-spaces)
205E U.R
2078 WITHIN
2086 BLK
2090 C/L
2098 \
20BC D.R
20D8 D.
20E6 UD.R
20FC UD.
2108 .S
2142 r.S
217A ?
217E message
2278 ?error
2292 CHARS/BLOCK
229E L/BLK
22AA FIRST
22B6 PREV
22C2 LIMIT
22CC USE
22D6 SCR
22E4 (b/blk)
22F0 RWBLK
22FC R/W
230A +BUF
232A buffer
235A block
2392 dirty?
23A4 revert
23B4 update
23CE save-buffers
23F2 flush
2406 EMPTY-BUFFERS
2426 load
2456 ?loading
2466 -->
2474 thru
248A (line)
249C .line
24B4 list
24DA index
24FC >latest
250A latest
250E |immed
2512 |srch
2522 traverse
2558 nfa>xt
2566 xt>nfa
2576 nfa>imm?
2588 lfa>nfa
2590 >id
259C id.
25AC width
25B4 '
25D6 ,
25E6 >BODY
25F4 ALLOT
2602 C,
2614 (find)
2620 FIND
263E [']
2650 IMMEDIATE
2666 UNUSED
2674 dwalk
2688 .word
2696 WORDS
269E docol!
26A0 dovar!
26A8 douser!
26C6 dodoes,
26CE xt!
26DA docol,
26DC dodefer!
26EA (compile)
26F4 jmpoffs,
270A jmpoffsalloc,
2732 >fixup
2740 loop,
274E lastnfa
275E lastxt
276E (does>)
2780 does>
2790 [
279E noop
27A8 ?comp
27BC smudge
27C8 parse-name
27DC name"
27FE CREATE
2830 per-line
2846 2u.
2858 4u.
2872 (dmpln)
28D2 (dmp)
28FA dump
2912 vdump
292E [COMPILE]
294C POSTPONE
2962 csp
2966 leave-list
2972 !csp
2984 ?csp
2994 :
29A6 ;
29BC (does>)
29CC ?pairs
29DA BACK
29EA BEGIN
29F6 IF
2A0A THEN
2A1E ELSE
2A30 (leave)
2A46 DO
2A58 ?DO
2A66 leave-resolve
2A7C loop-compile
2AA2 LOOP
2AB2 +LOOP
2AC2 ULOOP
2AD4 U+LOOP
2AE6 UNLOOP
2AF4 LEAVE
2B06 UNTIL
2B1A AGAIN
2B2E WHILE
2B3C REPEAT
2B52 RECURSE
2B60 EXIT
2B70 DEFER
2B88 VARIABLE
2B98 UDP
2BA4 USER
2BBC :NONAME
2BDC env:
2BEC has?
2BFE (
2C0C >IN
2C18 CHAR
2C2A REFILL
2C82 RESTORE-INPUT
2CC0 SAVE-INPUT
2CE0 SOURCE-ID
2CF6 >tib
2D00 TIB
2D10 loadfile
2D20 loadline
2D2E <input
2D54 input>
2D78 (>c)
2D86 ,"
2DA0 (find)
2DC2 nfa=
2DEC (lookup)
2E02 ?stack
2E26 huh?
2E3A dpl
2E48 number
2EA6 interpreter
2EE6 interpret
2F02 EVALUATE
2F2C (clrsrc)
2F42 QUIT
2F86 SOURCE
2FA4 [CHAR]
2FB2 str=
2FC2 comment?
2FE8 [ELSE]
307C [THEN]
3088 [ENDIF]
3092 [IF]
30A4 defined?
30BA [IFUNDEF]
30CA [IFDEF]
30D0 regs-init
3100 cold-init
3126 'quit
313A abort
315A cycle
317A bootup
