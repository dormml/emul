0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
060A (do)
0618 (loop)
0624 (+loop)
0630 (uloop)
063E (u+loop)
0648 (?do)
065A execute
0664 ?dup
066E 2dup
0680 (context>)
0690 (>context)
069C (user)
06A4 0<
06AE 0<=
06B8 0>
06C2 0>=
06CC 0U<
06D8 0U<=
06E2 0U>
06EE 0U>=
06F6 <
06FE <=
0704 >
070C >=
0714 U<
071C U<=
0724 U>
072C U>=
0734 D0<
0740 D0<=
074A D0>
0756 D0>=
0762 DU0<
076E DU0<=
077A DU0>
0786 DU0>=
0790 D<
079A D<=
07A4 D>
07AE D>=
07B8 DU<
07C4 DU<=
07CE DU>
07DA DU>=
07EA (unloop)
07FA 2rdrop
0804 2/
080C 2*
0818 LSHIFT
0824 RSHIFT
0830 URSHIFT
083C CSHIFT
0846 SWPB
0854 DLSHIFT
0862 DRSHIFT
0872 DURSHIFT
0880 DCSHIFT
0888 *
0894 2drop
089E d>q
08AE dum/mod
08B8 s>d
08C4 true
08CE false
08DA (fill)
08E6 (cfill)
08F2 (move)
08FE (cmove)
090C (LITERAL)
091C (DLITERAL)
092A ((s"))
093E (S")
094E (SYSCALL)
0950 I/O
0952 VDPRD
0954 VDPST
0956 VDPWD
095A VDPWA
095E VDPCL
0962 VDPWI
0966 GPLRD
096A GPLRA
096E GPLWD
0972 GPLWA
0976 SPCHRD
097A SPCHWT
097E KBD
0982 SOUND
0986 'INTS
098A 'INTSP
098E M_INT_BKPT
0990 M_INT_EXT
0992 M_INT_VDP
0994 M_INT_KBD
0998 'KBD
099C 'KBDA
09A0 'DBG
09A4 ROM
09A8 (BOOT)
09AC (COLD)
09B0 DP0
09B4 (LATEST)
09B8 (#RP)
09BC (#SP)
09C0 (#pad)
09C4 (##-pad)
09C8 (#slit-pad)
09CC (#tib)
09D0 (#blk)
09D4 (#up)
09D8 RamTop
09DC (rp0)
09E0 (sp0)
09E4 (pad0)
09E8 (#-pad0)
09EC (slit-pad0)
09F0 (tib0)
09F4 (first)
09F8 (limit)
09FC (up0)
0A00 SysCalls
0A04 IntVecs
0A08 INT_RESET
0A0C INT_NMI
0A10 INT_KBD
0A12 INT_VDP
0A14 INT_BKPT
0A16 grom_kbdlist
0A18 grom_font8x8
0A1C grom_font5x6
0A20 CTX_SP
0A22 CTX_RP
0A24 CTX_UP
0A26 CTX_INT
0A28 IbranchX
0A2A I0branchX
0A2E IRfrom
0A32 IatR
0A36 Isub
0A3A Iumul
0A3E Iudivmod
0A42 Iudivmod_d
0A46 Iuser
0A4A Iupidx
0A4E IloopUp
0A52 IuloopUp
0A56 IplusLoopUp
0A5A IuplusLoopUp
0A5E Icfill
0A62 Icmove
0A66 Iexit
0A6A Idovar
0A6E Isyscall
0A72 IlitB
0A76 IlitW
0A7A IbranchB
0A7E I0branchB
0A82 Idup_d
0A86 ItoR_d
0A8A Irdrop_d
0A8E Irpidx
0A92 #idle
0A94 #dbg
0A96 #dbgf
0A98 #regsym
0A9A (dbg)
0AA2 (dbgf)
0AAA (idle)
0AB2 (register-symbol)
0ABA ramptr
0ABE UP
0AC2 rp0
0AC6 sp0
0ACA (pad)
0ACE (#pad)
0AD2 (spad)
0ADE STATE
0AEC literal
0B28 dliteral
0B72 >call
0B86 compile,
0C1C RamVar
0C36 vwaddr
0C44 !vwaddr
0C56 gwaddr
0C64 graddr
0C70 g@
0C84 gc@
0C90 vc@
0C9C vc!
0CAE (vmbr)
0CBE vmbr
0CCE (vmbw)
0CDE vmbw
0CEE gvmove
0D06 >bit
0D20 VRegSave
0D32 w>b
0D3C write-vregaddr
0D54 get-vreg
0D5A LP
0D5E (>LOCALS)
0D68 (LOCALS>)
0D74 write-vregs
0D92 vid-show
0DA0 v-mode
0DA4 +field
0DA8 +1field
0DAC v-screen
0DB0 v-screensz
0DB4 v-patts
0DB8 v-pattsz
0DBC v-colors
0DC0 v-colorsz
0DC4 v-sprites
0DC8 v-sprcol
0DCC v-sprpat
0DD0 v-sprmot
0DD4 v-free
0DD8 v-width
0DDC v-height
0DE0 v-ccols
0DE4 v-crows
0DE8 v-chwidth
0DEC v-chheight
0DF0 'v-coordaddr
0DF4 'v-drawchar
0DF8 'v-savechar
0DFC 'v-restorechar
0E00 'v-drawcursor
0E04 'v-setupmode
0E08 'v-updatecolors
0E0C 'v-setfont
0E10 'v-clear
0E14 'v-hchar
0E18 'v-vchar
0E1C v-font
0E20 >v-fontaddr
0E2C v-curs-under
0E30 v-curs
0E34 v-cursor-timer
0E38 v-cursor-blink
0E3C write-var-list
0E4C (mode)
0E66 fg
0E6A bg
0E6E color-byte
0E78 v-refresh-colors
0E86 fg!
0E92 bg!
0E9E fg@
0EA8 bg@
0EAC vreset
0EBE vstdpal
0EC0 v-cursor-on
0EDE v-cursor-off
0EF8 update-cursor
0F16 video-modes
0F36 text
0F3E gfx
0F4A bitmap
0F54 gfx2
0F5E gfx3
0F68 gfx4
0F72 gfx5
0F7C gfx6
0F86 gfx7
0F90 text2
0F9C mono
0FA8 multi
0FAC last-video-mode
0FB8 #scr
0FC2 #ssz
0FCC #col
0FD6 #csz
0FE0 #pat
0FEA #psz
0FF4 #spt
0FFE #spr
1008 #smt
1014 #spc
1020 #fre
1024 txt-coordaddr
1032 txt-waddr
1036 txt-raddr
103C txt-drawchar
1042 txt-savechar
1048 txt-restorechar
1050 txt-drawcursor
1058 range-wrap
109A txt-hchar
10B2 (txt-vchar)
110A txt-vchar
1118 txt-setupmode
111A txt-updatecolors
1122 txt-clear
1130 std-setfont
1154 TextFunctions
117C TextModeParams
11BC TextModeRegs
11C8 text-mode
11D8 (sprite-setup)
11F8 std-sprite-setup
1204 v9938-sprite-setup
121A GfxModeRegs
122C GfxModeParams
126C gfx-setupmode
1270 gfx-updatecolors
127C gfx-mode
128C Text2ModeRegs
129E Text2ModeParams
12DE txt2-setupmode
12EC text2-mode
12FC bit-cursor-8
1306 bit-cursor
130A bit-pixaddr
131E bit-waddr
1322 bit-raddr
1326 bit-setupmode
133C bit-coordaddr
134E bit-drawchar
135A bit-savechar
1366 bit-restorechar
1370 bit-drawcursor
137C bit-clear
1394 bit-updatecolors
139C bit-setfont
13AA BitFunctions
13D2 BitModeRegs
13E4 BitModeParams
1424 bit-mode
143C mode
144C vfill
1462 (setfont)
1478 font8x8
148E video-init
14A2 vx
14A6 vy
14AA win-x
14AE win-y
14B2 win-sx
14B6 win-sy
14BA term-refresh
14D8 term-reset
14F8 home
1502 xy
150A xy!
1512 curs-addr
1528 advance-row
1540 advance-cursor
1552 cursor-off
1558 crlf
155C bksp
158E chfill
15B0 hchar
15DC vchar
1606 cls
1618 (emit)
1628 emit
164C cr
165A space
1668 type
1676 kbdbufsize
167A kbdbuf
167E kbdstate
1682 kbdtimer
1686 kbddelay
168A kbdrate
168E kbdshift
1692 kbdscan
1696 kbdlast
169A kbdflag
169E kbdtail
16A2 kbdhead
16A6 timeout
16AA randnoise
16AE read-row
16B8 toupper
16C6 buffer-key
16EE repeat-key
1730 lookup-key
1744 handle-key
1772 key-actions
1788 kbd-scan
17D4 kbd-no-key
17EA kbd-init
180A key?
181E (key)
183E key
184C ints-check
1852 vdp-status
1856 vdp-ticks
185A vdp-int-handler
1886 kbd-int-handler
189E nmi-int-handler
18A2 >int-vec
18A8 set-int-vec
18AC enable-int
18BE call-int
18C8 ints-init
18EA ints-on
18FA ints-off
1906 pick
1916 rpick
1926 cmove
1934 cmove>
1940 m/mod
195A u/mod
1964 u/
1972 umod
197E u*
198A fill
199A /STRING
19A8 |!
19B6 &!
19C8 compare
1A1A tolower
1A32 comparef
1A86 base
1A90 dp
1A9C (pad)
1AAA (#pad)
1AB8 (spad)
1AC4 here
1AD2 decimal
1ADE hex
1AEC digit
1B02 #ptr
1B0E demit
1B1C dtype
1B38 d.d
1B4C .d
1B5E constant
1B6A /cells
1B74 (d)
1B82 DEPTH
1B94 RDEPTH
1BA4 TUCK
1BAE 2!
1BBC 2@
1BCC ALIGN
1BDE ALIGNED
1BEC CHAR+
1BF8 CHARS
1C04 CELL+
1C10 DABS
1C20 MOVE
1C36 */
1C44 */MOD
1C50 /
1C5E /MOD
1C6C ABS
1C7E FM/MOD
1CA4 M*
1CBC MAX
1CCE MIN
1CE0 MOD
1CEE SM/REM
1D0C (skip)
1D16 dn*
1D2C >digit
1D66 >NUMBER
1D90 ]
1D9C s,
1DB6 SLITERAL
1DC4 S"
1DEA (abort")
1E10 ABORT"
1E28 hld
1E34 -pad
1E3E <#
1E4C HOLD
1E5C (#)
1E70 #
1E7E #>
1E8E #S
1E9A .
1EA6 BL
1EB2 SIGN
1EC6 SPACES
1EE0 U.
1EEE COUNT
1EFC (>c)
1F14 (parse-word)
1F22 WORD
1F32 overstrike
1F4A ACCEPT
1F9C ENVIRONMENT?
1FAA (quit?)
1FC0 (pause?)
1FDC #TIB
1FE6 0<>
1FF0 <>
1FFA .R
201C ERASE
2026 NIP
2030 PAD
203E (match)
2066 (src>)
2080 (>src)
208E PARSE
209C (skip-spaces)
20C4 U.R
20DE WITHIN
20EC BLK
20F6 C/L
20FE \
2122 D.R
213E D.
214C UD.R
2162 UD.
216E .S
21A8 r.S
21E0 ?
21E4 message
22DE ?error
22F8 CHARS/BLOCK
2304 L/BLK
2310 FIRST
231C PREV
2328 LIMIT
2332 USE
233C SCR
234A (b/blk)
2356 RWBLK
2362 R/W
2370 +BUF
2390 buffer
23C0 block
23F8 dirty?
240A revert
241A update
2434 save-buffers
2458 flush
246C EMPTY-BUFFERS
248C load
24BC ?loading
24CC -->
24DA thru
24F0 (line)
2502 .line
251A list
2540 index
2562 >latest
2570 latest
2574 |immed
2578 |srch
2588 traverse
25BE nfa>xt
25CC xt>nfa
25DC nfa>imm?
25EE lfa>nfa
25F6 >id
2602 id.
2612 width
261A '
263C ,
264C >BODY
265A ALLOT
2668 C,
267A (find)
2686 FIND
26A4 [']
26B6 IMMEDIATE
26CC UNUSED
26DA dwalk
26EE .word
26FC WORDS
2704 docol!
2706 dovar!
270E douser!
272C dodoes,
2734 xt!
2740 docol,
2742 dodefer!
2750 (compile)
275A jmpoffs,
2770 jmpoffsalloc,
2798 >fixup
27A6 loop,
27B4 lastnfa
27C4 lastxt
27D4 (does>)
27E6 does>
27F6 [
2804 noop
280E ?comp
2822 smudge
282E parse-name
2842 name"
2864 CREATE
2896 per-line
28AC 2u.
28BE 4u.
28D8 (dmpln)
2938 (dmp)
2960 dump
2978 vdump
2994 [COMPILE]
29B2 POSTPONE
29C8 csp
29CC leave-list
29D8 !csp
29EA ?csp
29FA :
2A0C ;
2A22 (does>)
2A32 ?pairs
2A40 BACK
2A50 BEGIN
2A5C IF
2A70 THEN
2A84 ELSE
2A96 (leave)
2AAC DO
2ABE ?DO
2ACC leave-resolve
2AE2 loop-compile
2B08 LOOP
2B18 +LOOP
2B28 ULOOP
2B3A U+LOOP
2B4C UNLOOP
2B5A LEAVE
2B6C UNTIL
2B80 AGAIN
2B94 WHILE
2BA2 REPEAT
2BB8 RECURSE
2BC6 EXIT
2BD6 DEFER
2BEE VARIABLE
2BFE UDP
2C0A USER
2C22 :NONAME
2C42 env:
2C52 has?
2C64 (
2C72 >IN
2C7E CHAR
2C90 REFILL
2CE8 RESTORE-INPUT
2D26 SAVE-INPUT
2D46 SOURCE-ID
2D5C >tib
2D66 TIB
2D76 loadfile
2D86 loadline
2D94 <input
2DBA input>
2DDE (>c)
2DEC ,"
2E06 (find)
2E28 nfa=
2E52 (lookup)
2E68 ?stack
2E8C huh?
2EA0 dpl
2EAE number
2F0C interpreter
2F4C interpret
2F68 EVALUATE
2F92 (clrsrc)
2FA8 QUIT
2FEC SOURCE
300A [CHAR]
3018 str=
3028 comment?
304E [ELSE]
30E2 [THEN]
30EE [ENDIF]
30F8 [IF]
310A defined?
3120 [IFUNDEF]
3130 [IFDEF]
3136 regs-init
3166 cold-init
318C 'quit
31A0 abort
31C0 cycle
31E0 bootup
