0408 cell
040A cells
040E ;S
0410 @
0412 c@
0414 d@
0418 !
041A c!
041C d!
0420 +!
0422 c+!
0424 d+!
0428 1+
042A 2+
042C 1-
042E 2-
0430 dup
0432 drop
0434 swap
0436 2swap
043A over
043C 2over
0440 rot
0442 2rot
0446 0=
0448 D0=
044C =
044E D=
0452 0branch
0454 branch
0456 negate
0458 dnegate
045C +
045E d+
0462 -
0464 d-
0468 um*
046A um/mod
046C nip
0470 invert
0472 dinvert
0476 not
0478 dnot
047C or
047E dor
0482 and
0484 dand
0488 xor
048A dxor
048E nand
0490 dnand
0494 >r
0496 2>r
049A r>
049C 2r>
04A0 rdrop
04A2 r@
04A4 i
04A6 i'
04AA j
04AE j'
04B2 k
04B6 k'
04BA sp@
04BE sp!
04C2 rp@
04C6 rp!
04CA lp@
04CE lp!
04D2 (do)
04D6 (loop)
04D8 (+loop)
04DA (uloop)
04DC (u+loop)
04DE (?do)
04E6 execute
04E8 ?dup
04EA 2dup
04EE 0<
04F2 0<=
04F6 0>
04FA 0>=
04FE 0U<
0502 0U<=
0506 0U>
050A 0U>=
050E <
0510 <=
0512 >
0514 >=
0516 U<
0518 U<=
051A U>
051C U>=
051E D0<
0522 D0<=
0526 D0>
052A D0>=
052E DU0<
0532 DU0<=
0536 DU0>
053A DU0>=
053E D<
0542 D<=
0546 D>
054A D>=
054E DU<
0552 DU<=
0556 DU>
055A DU>=
055E (unloop)
0564 2rdrop
0568 2/
056A 2*
056C LSHIFT
056E RSHIFT
0570 URSHIFT
0572 CRSHIFT
0574 SWPB
0578 DLSHIFT
057C DRSHIFT
0580 DURSHIFT
0584 DCRSHIFT
0588 *
058C 2drop
0590 d>q
0596 dum/mod
059A s>d
059E true
05A0 false
05A2 (fill)
05A4 (cfill)
05A6 (cmove)
05A8 (LITERAL)
05AA (DLITERAL)
05AE ((s"))
05BA (S")
05BE CHARS/BLOCK
05C2 RamTop
05C6 UP0
05CA >call
05D2 call>
05D6 call,
05DC inlineable
05FA inlineable-imm
0628 STATE
062C literal
065C dliteral
069E literal@
06DA compile,
07AC RamVar
07BA +Nfield
07BE +field
07C2 +1field
07C6 vwaddr
07CA !vwaddr
07D2 +vwaddr
07D8 +!vwaddr
07E2 gwaddr
07E6 graddr
07EC g@
07FA g!
0806 gc@
080C gc!
0812 vc@
0818 vc!
081E +vc@
0824 +vc!
082A vfill
0834 +vfill
083E +gvmove
084C vcmove
0860 cvmove
0874 gcmove
0888 cgmove
089C cmp?
08A0 >bit
08BA (gtypez)
08C8 gtypez
08CC gtype
08E0 vvmove
0924 catch
093C throw
095A exc-init
0960 v-data
0964 v-screen
0968 v-screensz
096C v-patts
0970 v-pattsz
0974 v-colors
0978 v-colorsz
097C v-sprites
0980 v-sprcol
0984 v-sprpat
0988 v-sprmot
098C v-free
0990 v-text
0994 v-mono
0998 v-width
099C v-height
09A0 v-stride
09A4 video-modes
09BC text
09BE gfx
09C0 bitmap
09C2 gfx2
09C4 gfx3
09C6 gfx4
09C8 gfx5
09CA gfx6
09CC gfx7
09CE text2
09D2 mono
09D6 multi
09DA vsetbank
09EE >vr
09FE v-regaddr
0A14 (vr!)
0A24 (vr@)
0A2A write-vregs
0A38 vid-show
0A4C std-set-screen-reg
0A5E std-set-color-reg
0A76 std-set-patt-reg
0A88 std-set-sprite-reg
0AA0 std-set-sprpat-reg
0AB2 >v-fontaddr
0ABE v-curs-under
0AC2 v-curs
0AC6 v-cursor-timer
0ACA write-var-list
0ADA v-set-alloc-list
0AE2 (mode)
0B26 fg
0B2A bg
0B2E color-byte
0B3C color-word
0B4C v-refresh-colors
0B52 fg!
0B5C bg!
0B66 fg@
0B6A bg@
0B6E msx-enhregs
0B7E (vreset)
0B8E vreset
0BA6 vstdpal
0BBE v-cursor-off
0BCE update-cursor
0BE6 (sprite-setup)
0C06 std-sprite-setup
0C12 v9938-sprite-setup
0C28 txt-choffs
0C30 txt-chaddr
0C38 txt-waddr
0C3E txt-drawchar
0C44 txt-readchar
0C4C txt-blinkcursor
0C72 range-wrap
0C92 (txt-hchar)
0CAA txt-hchar
0CB0 txt-vchar
0CF4 txt-setupmode
0CFA txt-updatecolors
0D04 txt-clear
0D36 std-setfont
0D8E TextFunctions
0DAE TextModeParams
0DFA TextModeRegs
0E02 txt-setupregs
0E08 text-mode
0E16 GfxModeRegs
0E1E GfxModeParams
0E6A gfx-setupregs
0E74 gfx-setupmode
0E7C gfx-updatecolors
0E8A gfx-mode
0E98 >txt2-coloraddr
0EA8 txt2-blink!
0EC0 txt2-drawchar
0ED6 txt2-clear
0F02 txt2-hchar
0F20 (txt2-hchar-colors)
0F9A txt2-vchar
0FC2 txt2-setupregs
0FC8 Text2ModeRegs
0FD2 Text2Functions
0FE6 Text2ModeParams
1032 txt2-setupmode
1042 text2-mode
1054 bit-pixaddr
1068 bit-chaddr
1072 bit-setupmode
1088 bit-drawchar
10B6 (set-bits)
10D0 (reset-bits)
10D8 bit-blinkcursor
1126 bit-clear-rows
1156 bit-clear
119A bit-updatecolors
11B6 bit-setfont
11B8 bit-set-patt-reg
11CC bit-set-color-reg
11EC bit-setupregs
11F8 BitFunctions
120C BitModeRegs
1214 BitModeParams
1260 bit-mode
126E Gfx3ModeRegs
1276 Gfx3ModeParamsDiffs
128A gfx3-setupregs
1292 gfx3-mode
12A4 MonoBitModeRegs
12AC MonoModeParamsDiffs
12C8 mono-mode
12DE msx-stdpalette
1300 msx-vstatus0
1306 msx-pixaddr
1320 msx-setupmode
133C msx-cmdsetup
1344 msx-waitcmdready
1358 msx-waittxready
136E msx-setupMMMcommand
137E msx-cmd-word
1388 msx-setup-cursor-DXDY
139A msx-cursor-color
139E msx-adjust-cursor-color
13A0 msx-blinkcursor
13C4 msx-color-temp
13C8 msx-updatecolors
148E msx-setfont
1490 msx-clear
14D4 msx-sendcharpixel
14E4 msx-drawchar-accel
1548 msx-crosses-bank
155E msx-drawchar-16
15D0 msx-drawchar-4
164E msx-drawchar-256
16BE msx-set-patt-reg
16C8 msx-set-sprite-reg
16DC msx-setupregs
16E4 MsxFunctions
16F4 MsxBaseFunctions
1704 GfxSkinnyModeParams
1738 GfxFatModeParams
176C Gfx4ModeRegs
1774 Gfx4ModeParams
1794 gfx4-mode
17AA Gfx6ModeRegs
17B2 Gfx6ModeParams
17D2 gfx6-mode
17E8 Gfx5ModeRegs
17F2 Gfx5ModeParams
1812 gfx5-mode
1828 Gfx7ModeRegs
1830 Gfx7ModeParams
1850 gfx7-mode
1866 mode
186E (setfont)
187A v-font!
1882 font!
1890 font8x8
189A font6x8
18A2 font5x6
18AA <video
18B8 video>
18BE vblink!
18C6 vrwpage
195E vvispage
19B2 vpage
19C2 video-init
19E2 sound-vclear
19F8 sound-off
1A10 sound-init
1A14 t-data
1A18 win-x
1A1C win-y
1A20 win-sx
1A24 win-sy
1A28 win-chxs
1A2C win-chys
1A30 term-refresh
1A7C term-reset
1A86 (win-update)
1AA4 home
1AAA .xy
1AB4 .at-xy
1ACC xy
1AEA at-xy
1B02 .win!
1B66 win!
1B90 full!
1B98 .win@
1BAA win@
1BC8 $xy
1BDC txt-xy>addr
1BF4 home-col
1BFA ch>xy
1C0E ch>y
1C1E ch>x
1C2E advance-row
1C46 new-line
1C7A advance-cursor
1C90 cursor-off
1C9A crlf
1CA0 bksp
1CE2 chfill
1D00 hchar
1D2A vchar
1D94 cls
1DCC (emit)
1DD4 (emit+)
1DE4 emit
1E18 getch
1E26 cr
1E2C space
1E32 type
1E40 #vrs
1E46 vsave
1E5A vrestore
1E8A kbdbuf
1E8E kbdstate
1E92 randnoise
1E96 read-row
1EA0 toupper
1EAE buffer-key
1ED6 key-actions
1EEC repeat-key
1F2E lookup-key
1F46 handle-key
1F76 kbd-scan
1FD6 kbd-no-key
1FEC kbd-init
200A key?
2018 (key)
2032 key
2038 kshift
203E ints-on
2042 ints-off
2046 pick
204E rpick
2056 cmove
205A cmove>
205E m/mod
2070 u/mod
2074 u/
207A umod
2080 u*
2084 U*/MOD
208A U*/
208E fill
2092 rp0
2096 sp0
209A (dbg)
20A2 (dbgf)
20AA (idle)
20B2 (register-symbol)
20BA (gfind)
20BE (find)
20C2 >NUMBER
20C8 (NUMBER)
20D0 |!
20D8 &!
20E0 tolower
20EC s<>
211E %-
2132 w>b
213C umax
2148 umin
2154 base
2158 dp
215C here
2160 decimal
2166 hex
216C digit
217A #ptr
217E demit
2184 dtype
219A d.d
21A8 .d
21AE /cells
21B2 (d)
21B8 DEPTH
21C0 RDEPTH
21C8 TUCK
21CC 2!
21D4 2@
21DC ALIGN
21E4 ALIGNED
21EA CHAR+
21EE CHARS
21F2 CELL+
21F6 DABS
21FE MOVE
220E */
2214 */MOD
221C /
2222 /MOD
222A ABS
2232 FM/MOD
2252 M*
2264 MAX
2270 MIN
227C MOD
2280 SM/REM
229E (skip)
22A2 s,
22B0 SLITERAL
22B8 S"
22D2 abort
22D6 (abort")
22E6 ABORT"
22F8 hld
22FC -pad
2302 <#
2308 HOLD
2312 (#)
2322 #
232A #>
2334 #S
233C .
2342 BL
2346 SIGN
2350 SPACES
2364 U.
236A COUNT
2370 (>c)
2378 (parse-word)
237E WORD
238E overstrike
239C clear
23AC ACCEPT
2452 ENVIRONMENT?
2456 (quit?)
2460 (pause?)
2474 0<>
2478 <>
247C .R
2496 ERASE
249A PAD
24A2 (match)
24CE (src>)
24DE (>src)
24E4 (PARSE)
24FC PARSE
250E (skip-spaces)
2530 U.R
2540 WITHIN
2548 BLK
254C C/L
2550 \
2564 /STRING
256C D.R
2582 D.
2588 UD.R
2598 UD.
259E .S
25D2 r.S
2606 ?
260A >message
2628 message
2640 ?throw
2644 L/BLK
2648 FIRST
264C PREV
2650 LIMIT
2654 USE
2658 SCR
265C ?block
2664 +BUF
267A buffer
26A4 block
26EC dirty?
26F4 revert
26FA update
2704 save-buffers
2720 flush
2724 EMPTY-BUFFERS
273C load
2752 ?loading
275C -->
2762 thru
276E (line)
2778 .line
2790 list
27AE index
27C6 latest
27CA nfa>xt@
27D4 nfa>xt
27DA xt>nfa
27FC nfa>imm?
2804 GCOUNT
280C >id
2812 id.
281A GDP
281E '
282E ,
2836 ALLOT
283E C,
2846 FIND
286C (lookup)
2876 [']
287C IMMEDIATE
2888 UNUSED
2890 dwalk
28AA .word
28B0 WORDS
28BC FORGET
28D2 docol!
28D4 docon,
28DC dovalue,
28E8 do>to,
28EA dovar,
28F2 >BODY
28F4 douser,
2912 dodoes,
291A xt!
291C docol,
291E dodefer!
2920 (compile)
292A jmpoffs,
2940 jmpoffsalloc,
2962 >fixup
2968 loop,
296C (does>)
2976 does>
298C dodefer,
2998 is-check
29B2 is,
29B8 is?,
29BC <locals,
29C2 ^locals,
29CA locals>,
29D0 local,
29EC (lfetch)
29F4 (laddr)
29FC [
2A02 ]
2A08 lastnfa
2A0C lastxt
2A12 noop
2A14 ?comp
2A1E smudge
2A2C parse-def-name
2A32 name"
2A40 name,
2A64 CREATE
2A7C [COMPILE]
2A8E POSTPONE
2A9E csp
2AA2 !csp
2AAC ?csp
2AB8 :
2ACA ;
2AD8 ?pairs
2ADE BACK
2AE6 IF
2AF2 SKIP
2AFE THEN
2B0A ELSE
2B1C (leave)
2B2C DO
2B38 ?DO
2B46 leave-resolve
2B5C loop-compile
2B7A LOOP
2B82 +LOOP
2B8A ULOOP
2B92 U+LOOP
2B9A UNLOOP
2BA0 LEAVE
2BAA BEGIN
2BB0 UNTIL
2BBC AGAIN
2BC8 WHILE
2BCC REPEAT
2BD8 RECURSE
2BDE EXIT
2BE8 DEFER
2BF2 IS
2BF8 IS?
2BFE CONSTANT
2C08 VARIABLE
2C0E VALUE
2C18 TO
2C36 UDP
2C3A USER
2C4C :NONAME
2C56 env:
2C5E has?
2C6C (
2C74 >IN
2C78 CHAR
2C80 REFILL
2CCC number
2CEC RESTORE-INPUT
2D1C SAVE-INPUT
2D30 SOURCE-ID
2D3E <input
2D5A input>
2D76 ,"
2D86 huh?
2D94 interpreter
2DAC parse-word
2DB2 parse-name
2DC0 interpret
2DCC EVALUATE
2DEA (clrsrc)
2DFC ok-prompt?
2E16 QUIT
2E46 SOURCE
2E5A [CHAR]
2E60 str=
2E64 comment?
2E80 [ELSE]
2F0A [THEN]
2F0C [ENDIF]
2F0E [IF]
2F14 defined?
2F1E [IFUNDEF]
2F24 [IFDEF]
2F2A per-line
2F38 2u.
2F44 4u.
2F54 (dmpln)
2FA8 (dmp)
2FC8 dump
2FD8 vdump
2FE8 mfree
2FF0 wait4
302A fdc-ready
303A fdc-wait-ready
3042 fdc-command
3050 dsk-flg!
3062 dsk-flg?
3068 motor
306E seek-command
3074 seek-track
30A0 sec>attrs
30AA block>sec
30AE disk-seek-sec
30B8 drq-ready
30C0 (dsk-read)
30C8 (dsk-write)
30CE xfer
30F4 (disk-rwblk)
312A disk-rwblk
313E gram-rwblk
3166 set-disk
316C fdc-interrupt
3172 DSK1
317E GRAM
3184 R/W
3196 io-init
319A reset-locals
31B0 init-locals
31B8 (lfind)
31C6 alloc-locals
31E4 (lname,)
3206 (local,)
3242 is-local
324C to-local
3254 lname,
3262 enter-locals
3282 exit-locals
328A finish-locals
329A :>
32B2 ::
3300 redraw-block
3306 fetch-block
332A baddrs!
3376 baddr
337A baddr)
337E (>lend)
33AA >lend
33B0 to-line
33C2 laddrs!
33DC >llen
33E4 >curs
33EC delete-range
342C insert-range
3482 fl|
3488 ^curs
34A2 ^del
34B2 ^ins
34BE ^chr
34C6 caddr>col!
34CE ^home
34F2 ^end
3514 space-to-column
3536 ^char
354C +tab
355E ~curs
357A [line)
3584 ~del
358E ~ins>
359E ~ins
35AA copy-tib
35BA !copy-line
35C0 !paste
35E2 ~dup
35EA pause
35F6 trace
360A !left
3614 !right
361E !up
3626 !down
362E !block-down
3634 !block-up
363A !dup-line
3640 !prev-page
364E !next-page
3662 (erase)
366A !erase
3670 !erase-to
367A !ins/ovr
3682 fix-column
368E !bksp
3698 (tab)
36A6 !tab
36BA !untab
36CC !enter
36EE !join
36F6 !clear
36FE !load
370E !exit
3712 !interpret
3718 draw-window
3794 draw-centered-window
37B2 !refresh
37B8 !help
37DA edittab
3858 edit.char
3866 onkey
38A6 init-editor
38B8 save-video
38CA editor.exit
38D6 intp.window
38E2 edit.window
38E8 edit.drawui
398A message-window
39A4 dismiss-window
39B0 edit.message
39C4 edit.drawstatus
3A50 drawline
3A9C edit.drawline
3AA6 #drawline
3AC0 edit.drawblock
3AD4 surround
3B24 edit.scroll
3B38 edit.lastpos!
3B4C edit.update
3BC2 (edit)
3BCE edit
3BF2 >edit
3BFA regs-init
3C18 cold-init
3C42 'quit
3C56 cold
3C60 cycle
3C80 snd
3C90 delay
3C98 blast0
3CB6 blast1
3CD4 square
3CE4 hang
3CEA bye
3D14 ints-check
3D1A vdp-status
3D1E vdp-ticks
3D22 vdp-timeout
3D26 v-intflag-off?
3D2E vdp-int-handler
3D6E kbd-int-handler
3D86 nmi-int-handler
3D96 fault-int-handler
3DA8 >int-vec
3DAE set-int-vec
3DB2 enable-int
3DC4 call-int
3DCE ints-init
3DEC (RAM0)
3DF0 RAM
