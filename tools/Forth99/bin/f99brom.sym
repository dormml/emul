0408 cell
040A cells
040E ;S
0410 @
0412 c@
0414 d@
0418 !
041A c!
041C d!
0420 +!
0422 c+!
0424 d+!
0428 1+
042A 2+
042C 1-
042E 2-
0430 dup
0432 drop
0434 swap
0436 2swap
043A over
043C 2over
0440 rot
0442 2rot
0446 0=
0448 D0=
044C =
044E D=
0452 0branch
0454 branch
0456 negate
0458 dnegate
045C +
045E d+
0462 -
0464 d-
0468 um*
046A um/mod
046C nip
0470 invert
0472 dinvert
0476 not
0478 dnot
047C or
047E dor
0482 and
0484 dand
0488 xor
048A dxor
048E nand
0490 dnand
0494 >r
0496 2>r
049A r>
049C 2r>
04A0 rdrop
04A2 r@
04A4 i
04A6 i'
04AA j
04AE j'
04B2 k
04B6 k'
04BA sp@
04BE sp!
04C2 rp@
04C6 rp!
04CA lp@
04CE lp!
04D2 (do)
04D6 (loop)
04D8 (+loop)
04DA (uloop)
04DC (u+loop)
04DE (?do)
04E6 execute
04E8 ?dup
04EA 2dup
04EE (context>)
04F0 (>context)
04F2 (user)
04F4 0<
04F8 0<=
04FC 0>
0500 0>=
0504 0U<
0508 0U<=
050C 0U>
0510 0U>=
0514 <
0516 <=
0518 >
051A >=
051C U<
051E U<=
0520 U>
0522 U>=
0524 D0<
0528 D0<=
052C D0>
0530 D0>=
0534 DU0<
0538 DU0<=
053C DU0>
0540 DU0>=
0544 D<
0548 D<=
054C D>
0550 D>=
0554 DU<
0558 DU<=
055C DU>
0560 DU>=
0564 (unloop)
056A 2rdrop
056E 2/
0570 2*
0572 LSHIFT
0574 RSHIFT
0576 URSHIFT
0578 CRSHIFT
057A SWPB
057E DLSHIFT
0582 DRSHIFT
0586 DURSHIFT
058A DCRSHIFT
058E *
0592 2drop
0596 d>q
059C dum/mod
05A0 s>d
05A4 true
05A6 false
05A8 (fill)
05AA (cfill)
05AC (cmove)
05AE (LITERAL)
05B0 (DLITERAL)
05B4 ((s"))
05C0 (S")
05C4 (SYSCALL)
05C6 CHARS/BLOCK
05CA UP0
05CE >call
05D6 call>
05DA call,
05E0 inlineable
05FE inlineable-imm
062C STATE
0630 literal
0660 dliteral
06A2 literal@
06DE compile,
07B0 RamVar
07BE +Nfield
07C2 +field
07C6 +1field
07CA err-out-of-range
07CE vwaddr
07D2 !vwaddr
07DA +vwaddr
07E0 +!vwaddr
07EA gwaddr
07EE graddr
07F4 g@
0802 g!
080E gc@
0814 gc!
081A vc@
0820 vc!
0826 +vc@
082C +vc!
0832 vfill
083C +vfill
0846 +gvmove
0854 vcmove
0868 cvmove
087C gcmove
0890 cgmove
08A4 cmp?
08A8 >bit
08C2 (gtypez)
08D0 gtypez
08D4 gtype
08E8 catch
08FE throw
091A exc-init
0920 v-data
0924 v-screen
0928 v-screensz
092C v-patts
0930 v-pattsz
0934 v-colors
0938 v-colorsz
093C v-sprites
0940 v-sprcol
0944 v-sprpat
0948 v-sprmot
094C v-free
0950 video-modes
0968 text
096A gfx
096C bitmap
096E gfx2
0970 gfx3
0972 gfx4
0974 gfx5
0976 gfx6
0978 gfx7
097A text2
097E mono
0982 multi
0986 vsetbank
099A >vr
09AA v-regaddr
09C0 (vr!)
09D0 (vr@)
09D6 write-vregs
09E4 vid-show
09F8 std-set-screen-reg
0A0A std-set-color-reg
0A22 std-set-patt-reg
0A34 std-set-sprite-reg
0A4C std-set-sprpat-reg
0A5E >v-fontaddr
0A6A v-curs-under
0A6E v-curs
0A72 v-cursor-timer
0A76 write-var-list
0A86 v-set-alloc-list
0A8E (mode)
0AD2 fg
0AD6 bg
0ADA color-byte
0AE8 color-word
0AF8 v-refresh-colors
0AFE fg!
0B08 bg!
0B12 fg@
0B16 bg@
0B1A msx-enhregs
0B2A (vreset)
0B3A vreset
0B52 vstdpal
0B6A v-cursor-off
0B7A update-cursor
0B92 (sprite-setup)
0BB2 std-sprite-setup
0BBE v9938-sprite-setup
0BD4 txt-choffs
0BDC txt-chaddr
0BE4 txt-waddr
0BEA txt-drawchar
0BF0 txt-readchar
0BF8 txt-blinkcursor
0C1E range-wrap
0C3E (txt-hchar)
0C56 txt-hchar
0C5C txt-vchar
0CA0 txt-setupmode
0CA6 txt-updatecolors
0CB0 txt-clear
0CE2 std-setfont
0D3A TextFunctions
0D5A TextModeParams
0DA2 TextModeRegs
0DAA txt-setupregs
0DB0 text-mode
0DBE GfxModeRegs
0DC6 GfxModeParams
0E0E gfx-setupregs
0E18 gfx-setupmode
0E20 gfx-updatecolors
0E2E gfx-mode
0E3C >txt2-coloraddr
0E4C txt2-blink!
0E64 txt2-drawchar
0E7A txt2-clear
0EA6 txt2-hchar
0EC4 (txt2-hchar-colors)
0F3E txt2-vchar
0F66 txt2-setupregs
0F6C Text2ModeRegs
0F76 Text2Functions
0F8A Text2ModeParams
0FD2 txt2-setupmode
0FE2 text2-mode
0FF4 bit-pixaddr
1008 bit-chaddr
1012 bit-setupmode
1028 bit-drawchar
1056 (set-bits)
1070 (reset-bits)
1078 bit-blinkcursor
10C6 bit-clear-rows
10F6 bit-clear
113A bit-updatecolors
1156 bit-setfont
1158 bit-set-patt-reg
116C bit-set-color-reg
118C bit-setupregs
1198 BitFunctions
11AC BitModeRegs
11B4 BitModeParams
11FC bit-mode
120A MonoBitModeRegs
1212 MonoModeParams
125A mono-mode
126C Gfx3ModeRegs
1274 Gfx3ModeParams
12BC gfx3-setupregs
12C4 gfx3-mode
12D2 msx-stdpalette
12F4 msx-vstatus0
12FA msx-pixaddr
1314 msx-setupmode
1330 msx-cmdsetup
1338 msx-waitcmdready
134C msx-waittxready
1362 msx-setupMMMcommand
1372 msx-cmd-word
137C msx-setup-cursor-DXDY
138E msx-cursor-color
1392 msx-adjust-cursor-color
1394 msx-blinkcursor
13B8 msx-color-temp
13BC msx-updatecolors
1482 msx-setfont
1484 msx-clear
14C8 msx-sendcharpixel
14D8 msx-drawchar-accel
153C msx-crosses-bank
1552 msx-drawchar-16
15C4 msx-drawchar-4
1642 msx-drawchar-256
16B2 msx-set-patt-reg
16BC msx-set-sprite-reg
16D0 msx-setupregs
16D8 MsxFunctions
16E8 Gfx4ModeRegs
16F0 Gfx4ModeParams
174C gfx4-mode
175A Gfx6ModeRegs
1762 Gfx6ModeParams
17BE gfx6-mode
17CC Gfx5ModeRegs
17D6 Gfx5ModeParams
1832 gfx5-mode
1840 Gfx7ModeRegs
1848 Gfx7ModeParams
18A4 gfx7-mode
18B2 mode
18BA (setfont)
18C6 v-font!
18CE font!
18DC font8x8
18E6 font6x8
18EE font5x6
18F6 <video
1904 video>
190A vblink!
1912 vrwpage
19AA vvispage
19FE vpage
1A0E video-init
1A2E sound-vclear
1A44 sound-off
1A5C sound-init
1A60 t-data
1A64 win-x
1A68 win-y
1A6C win-sx
1A70 win-sy
1A74 term-refresh
1AC0 term-reset
1ACA (win-update)
1AE8 home
1AEE .xy
1AF8 .at-xy
1B10 xy
1B2E at-xy
1B46 .win!
1BAA win!
1BD4 full!
1BDC .win@
1BEE win@
1C0C $xy
1C20 txt-xy>addr
1C38 home-col
1C3E ch>xy
1C52 ch>y
1C62 ch>x
1C72 advance-row
1C8A new-line
1CBE advance-cursor
1CD4 cursor-off
1CDE crlf
1CE4 bksp
1D26 chfill
1D44 hchar
1D6E vchar
1DD8 cls
1E10 (emit)
1E18 (emit+)
1E28 emit
1E5C getch
1E6A cr
1E70 space
1E76 type
1E84 #vrs
1E8A vsave
1E9E vrestore
1ECE kbdbuf
1ED2 kbdstate
1ED6 randnoise
1EDA read-row
1EE4 toupper
1EF2 buffer-key
1F1A key-actions
1F30 repeat-key
1F72 lookup-key
1F8A handle-key
1FBA kbd-scan
201A kbd-no-key
2030 kbd-init
204E key?
205C (key)
2076 key
207C kshift
2082 ints-on
2086 ints-off
208A pick
2092 rpick
209A cmove
209E cmove>
20A2 m/mod
20B4 u/mod
20B8 u/
20BE umod
20C4 u*
20C8 U*/MOD
20CE U*/
20D2 fill
20D6 rp0
20DA sp0
20DE (dbg)
20E6 (dbgf)
20EE (idle)
20F6 (register-symbol)
20FE (gfind)
2102 (find)
2106 >NUMBER
210C (NUMBER)
2114 |!
211C &!
2124 tolower
2130 s<>
2162 %-
2176 w>b
2180 umax
218C umin
2198 base
219C dp
21A0 here
21A4 decimal
21AA hex
21B0 digit
21BE #ptr
21C2 demit
21C8 dtype
21DE d.d
21EC .d
21F2 /cells
21F6 (d)
21FC DEPTH
2204 RDEPTH
220C TUCK
2210 2!
2218 2@
2220 ALIGN
2228 ALIGNED
222E CHAR+
2232 CHARS
2236 CELL+
223A DABS
2242 MOVE
2252 */
2258 */MOD
2260 /
2266 /MOD
226E ABS
2276 FM/MOD
2296 M*
22A8 MAX
22B4 MIN
22C0 MOD
22C4 SM/REM
22E2 (skip)
22E6 s,
22F4 SLITERAL
22FC S"
2316 abort
231A (abort")
232A ABORT"
233C hld
2340 -pad
2346 <#
234C HOLD
2356 (#)
2366 #
236E #>
2378 #S
2380 .
2386 BL
238A SIGN
2394 SPACES
23A8 U.
23AE COUNT
23B4 (>c)
23BC (parse-word)
23C2 WORD
23D2 overstrike
23E0 clear
23F0 ACCEPT
2496 ENVIRONMENT?
249A (quit?)
24A4 (pause?)
24B8 0<>
24BC <>
24C0 .R
24DA ERASE
24DE PAD
24E6 (match)
2512 (src>)
2522 (>src)
2528 (PARSE)
2540 PARSE
2552 (skip-spaces)
2574 U.R
2584 WITHIN
258C BLK
2590 C/L
2594 \
25A8 /STRING
25B0 D.R
25C6 D.
25CC UD.R
25DC UD.
25E2 .S
2616 r.S
264A ?
264E >message
266C message
2686 ?throw
268A L/BLK
268E FIRST
2692 PREV
2696 LIMIT
269A USE
269E SCR
26A2 +BUF
26B8 buffer
26E0 block
2726 dirty?
272E revert
2734 update
273E save-buffers
275A flush
275E EMPTY-BUFFERS
2776 load
2790 ?loading
279A -->
27A0 thru
27AC (line)
27B6 .line
27CE list
27EC index
2804 latest
2808 nfa>xt@
2812 nfa>xt
2818 xt>nfa
283A nfa>imm?
2842 GCOUNT
284A >id
2850 id.
2858 GDP
285C '
286C ,
2874 ALLOT
287C C,
2884 FIND
28AA (lookup)
28B4 [']
28BA IMMEDIATE
28C6 UNUSED
28CE dwalk
28E8 .word
28EE WORDS
28FA FORGET
2910 docol!
2912 docon,
291A dovalue,
2926 do>to,
2928 dovar,
2930 >BODY
2932 douser,
2950 dodoes,
2958 xt!
295A docol,
295C dodefer!
295E (compile)
2968 jmpoffs,
297E jmpoffsalloc,
29A0 >fixup
29A6 loop,
29AA (does>)
29B4 does>
29CA dodefer,
29D6 is-check
29F0 is,
29F6 is?,
29FA <locals,
2A00 ^locals,
2A08 locals>,
2A0E local,
2A2A (lfetch)
2A32 (laddr)
2A3A [
2A40 ]
2A46 lastnfa
2A4A lastxt
2A50 noop
2A52 ?comp
2A5C smudge
2A6A parse-def-name
2A70 name"
2A7E name,
2AA2 CREATE
2ABA [COMPILE]
2ACC POSTPONE
2ADC csp
2AE0 !csp
2AEA ?csp
2AF6 :
2B08 ;
2B16 ?pairs
2B1C BACK
2B24 IF
2B30 SKIP
2B3C THEN
2B48 ELSE
2B5A (leave)
2B6A DO
2B76 ?DO
2B84 leave-resolve
2B9A loop-compile
2BB8 LOOP
2BC0 +LOOP
2BC8 ULOOP
2BD0 U+LOOP
2BD8 UNLOOP
2BDE LEAVE
2BE8 BEGIN
2BEE UNTIL
2BFA AGAIN
2C06 WHILE
2C0A REPEAT
2C16 RECURSE
2C1C EXIT
2C26 DEFER
2C30 IS
2C36 IS?
2C3C CONSTANT
2C46 VARIABLE
2C4C VALUE
2C56 TO
2C74 UDP
2C78 USER
2C8A :NONAME
2C94 env:
2C9C has?
2CAA 'lfind
2CAE (
2CB6 >IN
2CBA CHAR
2CC2 REFILL
2D0E number
2D2E RESTORE-INPUT
2D5E SAVE-INPUT
2D72 SOURCE-ID
2D80 <input
2D9C input>
2DB8 ,"
2DC8 huh?
2DD6 interpreter
2DEE parse-word
2DF4 parse-name
2E02 interpret
2E0E EVALUATE
2E2C (clrsrc)
2E3E ok-prompt?
2E58 QUIT
2E88 SOURCE
2E9C [CHAR]
2EA2 str=
2EA6 comment?
2EC2 [ELSE]
2F4C [THEN]
2F4E [ENDIF]
2F50 [IF]
2F56 defined?
2F60 [IFUNDEF]
2F66 [IFDEF]
2F6C per-line
2F7A 2u.
2F86 4u.
2F96 (dmpln)
2FEA (dmp)
300A dump
301A vdump
302A wait4
3064 fdc-ready
3074 fdc-wait-ready
307C fdc-command
308A dsk-flg!
309C dsk-flg?
30A2 motor
30A8 seek-command
30AE seek-track
30DA sec>attrs
30E4 block>sec
30E8 disk-seek-sec
30F2 drq-ready
30FA (dsk-read)
3102 (dsk-write)
3108 xfer
312E (disk-rwblk)
3166 disk-rwblk
317A gram-rwblk
31A8 set-disk
31AE fdc-interrupt
31B4 DSK1
31C0 GRAM
31C6 R/W
31D8 io-init
31DC reset-locals
31F2 init-locals
31FA (lfind)
3208 alloc-locals
3226 (lname,)
3248 (local,)
3284 is-local
328E to-local
3296 lname,
32A4 enter-locals
32C4 exit-locals
32CC finish-locals
32DC :>
32F4 ::
3342 baddrs!
3390 baddr
3394 baddr)
3398 (>lend)
33C0 >lend
33C6 to-line
33D8 laddrs!
33F2 >llen
33FA >curs
3402 delete-range
3442 insert-range
3498 fl|
349E ^curs
34B8 ^del
34C8 ^ins
34D4 ^chr
34DC caddr>col!
34E4 ^home
3508 ^end
352A space-to-column
354C ^char
3562 +tab
3574 ~curs
3590 [line)
359A ~del
35A4 ~ins>
35B4 ~ins
35C0 (~copy)
35D0 !copy-line
35D6 !paste
35F8 ~dup
3600 pause
360C trace
3620 !left
362A !right
3634 !up
363C !down
3644 !block-down
364A !block-up
3650 !dup-line
3656 !prev-page
3664 !next-page
3678 (erase)
3680 !erase
3686 !erase-to
3690 !ins/ovr
3698 fix-column
36A4 !bksp
36AE (tab)
36BC !tab
36D0 !untab
36E2 !enter
3704 !join
370C !clear
3714 !load
371E !exit
3722 !interpret
372C draw-window
37A8 !refresh
37AE !help
37E4 edittab
3862 edit.char
3870 onkey
38B0 init-editor
38BE save-video
38D0 editor.exit
38DC intp.window
38E8 edit.window
38EE edit.drawui
3990 edit.drawstatus
3A1C drawline
3A68 edit.drawline
3A72 #drawline
3A8C edit.drawblock
3AA0 surround
3AF0 edit.scroll
3B04 edit.lastpos!
3B18 edit.update
3B8A edit.fixblock
3B9A (edit)
3BAE edit
3BD4 >edit
3BDA regs-init
3BF8 cold-init
3C1C 'quit
3C30 cold
3C3A cycle
3C5A snd
3C6A delay
3C72 blast0
3C90 blast1
3CAE square
3CBE hang
3CC4 bye
3CE6 ints-check
3CEC vdp-status
3CF0 vdp-ticks
3CF4 vdp-timeout
3CF8 v-intflag-off?
3D00 vdp-int-handler
3D40 kbd-int-handler
3D58 nmi-int-handler
3D68 fault-int-handler
3D7A >int-vec
3D80 set-int-vec
3D84 enable-int
3D96 call-int
3DA0 ints-init
