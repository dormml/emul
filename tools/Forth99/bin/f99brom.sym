0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
0608 lp@
0612 lp!
061E (do)
062C (loop)
0638 (+loop)
0644 (uloop)
0652 (u+loop)
065C (?do)
066E execute
0678 ?dup
0682 2dup
0694 (context>)
06A4 (>context)
06B0 (user)
06B8 0<
06C2 0<=
06CC 0>
06D6 0>=
06E0 0U<
06EC 0U<=
06F6 0U>
0702 0U>=
070A <
0712 <=
0718 >
0720 >=
0728 U<
0730 U<=
0738 U>
0740 U>=
0748 D0<
0754 D0<=
075E D0>
076A D0>=
0776 DU0<
0782 DU0<=
078E DU0>
079A DU0>=
07A4 D<
07AE D<=
07B8 D>
07C2 D>=
07CC DU<
07D8 DU<=
07E2 DU>
07EE DU>=
07FE (unloop)
080E 2rdrop
0818 2/
0820 2*
082C LSHIFT
0838 RSHIFT
0844 URSHIFT
0850 CRSHIFT
085A SWPB
0868 DLSHIFT
0876 DRSHIFT
0886 DURSHIFT
0896 DCRSHIFT
089E *
08AA 2drop
08B4 d>q
08C4 dum/mod
08CE s>d
08DA true
08E4 false
08F0 (fill)
08FC (cfill)
0908 (move)
0914 (cmove)
0922 (LITERAL)
0932 (DLITERAL)
0940 ((s"))
0954 (S")
0964 (SYSCALL)
0966 I/O
0968 VDPRD
096A VDPST
096C VDPWD
096E VDPWA
0970 VDPCL
0974 VDPWI
0978 GPLRD
097C GPLRA
0980 GPLWD
0984 GPLWA
0988 SPCHRD
098C SPCHWT
0990 KBD
0994 SOUND
0998 'INTS
099C 'INTSP
09A0 M_INT_BKPT
09A2 M_INT_EXT
09A4 M_INT_VDP
09A6 M_INT_KBD
09AA 'KBD
09AE 'KBDA
09B2 'DBG
09B6 ROM
09BA (BOOT)
09BE (COLD)
09C2 DP0
09C6 (LATEST)
09CA (#RP)
09CE (#SP)
09D2 (#pad)
09D6 (##-pad)
09DA (#slit-pad)
09DE (#tib)
09E2 (#blk)
09E6 (#up)
09EA RamTop
09EE (rp0)
09F2 (sp0)
09F6 (pad0)
09FA (#-pad0)
09FE (slit-pad0)
0A02 (tib0)
0A06 (first)
0A0A (limit)
0A0E (up0)
0A12 SysCalls
0A16 IntVecs
0A1A INT_RESET
0A1E INT_NMI
0A22 INT_KBD
0A24 INT_VDP
0A26 INT_BKPT
0A28 grom_kbdlist
0A2A grom_font8x8
0A2E grom_font5x6
0A32 CTX_SP
0A34 CTX_RP
0A36 CTX_UP
0A38 CTX_INT
0A3A IbranchX
0A3C I0branchX
0A40 IRfrom
0A44 IatR
0A48 Isub
0A4C Iumul
0A50 Iudivmod
0A54 Iudivmod_d
0A58 Iuser
0A5C Iupidx
0A60 IloopUp
0A64 IuloopUp
0A68 IplusLoopUp
0A6C IuplusLoopUp
0A70 Icfill
0A74 Icmove
0A78 Iexit
0A7C Idovar
0A80 Isyscall
0A84 IlitB
0A88 IlitW
0A8C IbranchB
0A90 I0branchB
0A94 Idup_d
0A98 ItoR_d
0A9C Irdrop_d
0AA0 Irpidx
0AA4 #idle
0AA6 #dbg
0AA8 #dbgf
0AAA #regsym
0AAC (dbg)
0AB4 (dbgf)
0ABC (idle)
0AC4 (register-symbol)
0ACC UP
0AD0 ramptr
0AD4 rp0
0AD8 sp0
0AE4 STATE
0AF2 literal
0B2E dliteral
0B78 >call
0B8C compile,
0C22 RamVar
0C30 +Nfield
0C34 +field
0C38 +1field
0C46 vwaddr
0C54 !vwaddr
0C68 vsetbank
0C82 +vwaddr
0C94 +!vwaddr
0CA8 gwaddr
0CB6 graddr
0CC2 g@
0CD6 gc@
0CE2 vc@
0CEE vc!
0CFE (vmbr)
0D0E vmbr
0D1E (vmbw)
0D2E vmbw
0D3E gvmove
0D54 >bit
0D6E v-data
0D72 v-screen
0D76 v-screensz
0D7A v-patts
0D7E v-pattsz
0D82 v-colors
0D86 v-colorsz
0D8A v-sprites
0D8E v-sprcol
0D92 v-sprpat
0D96 v-sprmot
0D9A v-free
0D9E v-text
0DA2 v-mono
0DA6 v-width
0DAA v-height
0DAE v-font
0DB2 v-fntwidth
0DB6 v-fntheight
0DBA 'v-coordaddr
0DBE 'v-drawchar
0DC2 'v-readchar
0DC6 'v-blinkcursor
0DCA 'v-setupmode
0DCE 'v-updatecolors
0DD2 'v-setfont
0DD6 'v-clear
0DDA 'v-hchar
0DDE 'v-vchar
0DE2 msx-stride
0DE6 msx-shift
0DEA msx-mask
0DEE v-regsave
0DF2 v-data-size
0DF6 w>b
0E00 write-vregaddr
0E1A get-vreg
0E20 write-vregs
0E36 vid-show
0E44 >v-fontaddr
0E50 v-curs-under
0E54 v-curs
0E58 v-cursor-timer
0E5C v-cursor-blink
0E60 write-var-list
0E70 (mode)
0EA8 fg
0EAC bg
0EB0 color-byte
0EBE color-word
0ECE v-refresh-colors
0EDA fg!
0EEA bg!
0EFA fg@
0F04 bg@
0F08 vreset
0F1A vstdpal
0F1C v-cursor-off
0F2C update-cursor
0F44 video-modes
0F64 text
0F6C gfx
0F78 bitmap
0F82 gfx2
0F8C gfx3
0F96 gfx4
0FA0 gfx5
0FAA gfx6
0FB4 gfx7
0FBE text2
0FCA mono
0FD6 multi
0FDA last-video-mode
0FE6 #scr
0FF0 #ssz
0FFA #col
1004 #csz
100E #pat
1018 #psz
1022 #spt
102C #spr
1036 #smt
1042 #spc
104E #fre
1052 txt-chaddr
1060 txt-waddr
1066 txt-drawchar
106C txt-readchar
1074 txt-blinkcursor
109A range-wrap
10BA txt-hchar
10D4 txt-vchar
111E txt-setupmode
1124 txt-updatecolors
112E txt-clear
113C std-setfont
1146 TextFunctions
1166 TextModeParams
11A6 TextModeRegs
11B2 text-mode
11C2 (sprite-setup)
11E2 std-sprite-setup
11EE v9938-sprite-setup
1204 GfxModeRegs
1216 GfxModeParams
1256 gfx-setupmode
125E gfx-updatecolors
126C gfx-mode
127C Text2ModeRegs
128E Text2ModeParams
12CE txt2-setupmode
12DC text2-mode
12EC bit-pixaddr
1300 bit-waddr
1306 bit-raddr
130C bit-setupmode
1320 bit-drawchar
1350 (set-bits)
136A (reset-bits)
1372 bit-blinkcursor
13C2 bit-clear
13DA bit-updatecolors
13F8 bit-setfont
13FA BitFunctions
140E BitModeRegs
1420 BitModeParams
1460 bit-mode
1470 MonoBitModeRegs
1482 mono-mode
14A4 Gfx3ModeRegs
14B8 Gfx3ModeParams
14F8 gfx3-mode
1508 msx-stdpalette
152A msx-enhregs
153A msx-vstatus0
1540 msx-pixaddr
155A msx-setupmode
1560 msx-cmdsetup
1568 msx-waitcmdready
157C msx-waittxready
1592 msx-setupMMMcommand
15A2 msx-cmd-word
15AC msx-setup-cursor-DXDY
15B6 msx-blinkcursor
15DA msx-color-temp
15DE msx-clear
15EC msx-updatecolors
1698 msx-setfont
169A msx-use-drawchar-accel
169C msx-sendcharpixel
16AC msx-drawchar-accel
1710 msx-drawchar-16
176A msx-drawchar-4
17D0 msx-drawchar-256
183C MsxFunctions
184C Gfx4ModeRegs
185C Gfx4ModeParams
18AC gfx4-mode
18BC Gfx6ModeRegs
18CC Gfx6ModeParams
191C gfx6-mode
192C Gfx5ModeRegs
193E Gfx5ModeParams
198E gfx5-mode
199E Gfx7ModeRegs
19AE Gfx7ModeParams
19FE gfx7-mode
1A16 mode
1A26 vfill
1A3A (setfont)
1A50 font8x8
1A70 font6x8
1A90 font5x6
1AA4 video-init
1AB8 t-data
1ABC v-x
1AC0 v-y
1AC4 win-x
1AC8 win-y
1ACC win-sx
1AD0 win-sy
1AD4 t-data-size
1AD8 term-refresh
1B0E term-reset
1B28 home
1B3A xy
1B4A xy!
1B56 curs-addr
1B6E home-col
1B74 ch>xy
1B88 ch>y
1B98 ch>x
1BA8 win-chsize
1BCE advance-row
1BE6 advance-cursor
1BFE cursor-off
1C04 crlf
1C0C bksp
1C58 chfill
1C82 hchar
1CB0 vchar
1D1C cls
1D2E (emit)
1D3E emit
1D66 getch
1D7A cr
1D88 space
1D96 type
1DA4 kbdbufsize
1DA8 kbdbuf
1DAC kbdstate
1DB0 kbdtimer
1DB4 kbddelay
1DB8 kbdrate
1DBC kbdshift
1DC0 kbdscan
1DC4 kbdlast
1DC8 kbdflag
1DCC kbdtail
1DD0 kbdhead
1DD4 timeout
1DD8 randnoise
1DDC read-row
1DE6 toupper
1DF4 buffer-key
1E1C repeat-key
1E5E lookup-key
1E72 handle-key
1EA0 key-actions
1EB6 kbd-scan
1F02 kbd-no-key
1F18 kbd-init
1F38 key?
1F4E (key)
1F6E key
1F7C ints-check
1F82 vdp-status
1F86 vdp-ticks
1F8A vdp-int-handler
1FB6 kbd-int-handler
1FCE nmi-int-handler
1FD6 >int-vec
1FDC set-int-vec
1FE0 enable-int
1FF2 call-int
1FFC ints-init
201E ints-on
202E ints-off
203A pick
204A rpick
205A cmove
2068 cmove>
2074 m/mod
208E u/mod
2098 u/
20A6 umod
20B2 u*
20BE fill
20CE /STRING
20DC |!
20EA &!
20FC compare
2134 tolower
214C comparef
218A align-to
21A6 base
21B0 dp
21BC (pad)
21CA (#pad)
21D8 (spad)
21E4 here
21F2 decimal
21FE hex
220C digit
2222 #ptr
222E demit
223C dtype
2258 d.d
226C .d
227E constant
228A /cells
2294 (d)
22A2 DEPTH
22B4 RDEPTH
22C4 TUCK
22CE 2!
22DC 2@
22EC ALIGN
22FE ALIGNED
230C CHAR+
2318 CHARS
2324 CELL+
2330 DABS
2340 MOVE
2356 */
2364 */MOD
2370 /
237E /MOD
238C ABS
239E FM/MOD
23C4 M*
23DC MAX
23EE MIN
2400 MOD
240E SM/REM
242C (skip)
2436 dn*
244C >digit
2486 >NUMBER
24B0 ]
24BC s,
24D6 SLITERAL
24E4 S"
250A (abort")
2530 ABORT"
2548 hld
2554 -pad
255E <#
256C HOLD
257C (#)
2590 #
259E #>
25AE #S
25BA .
25C6 BL
25D2 SIGN
25E6 SPACES
2600 U.
260E COUNT
261C (>c)
2634 (parse-word)
2642 WORD
2652 overstrike
266A ACCEPT
26BC ENVIRONMENT?
26CA (quit?)
26E0 (pause?)
26FC #TIB
2706 0<>
2710 <>
271A .R
273C ERASE
2746 NIP
2750 PAD
275E (match)
2786 (src>)
27A0 (>src)
27AE PARSE
27BC (skip-spaces)
27E4 U.R
27FE WITHIN
280C BLK
2816 C/L
281E \
2842 D.R
285E D.
286C UD.R
2882 UD.
288E .S
28C8 r.S
2900 ?
2904 message
29FE ?error
2A18 CHARS/BLOCK
2A24 L/BLK
2A30 FIRST
2A3C PREV
2A48 LIMIT
2A52 USE
2A5C SCR
2A6A (b/blk)
2A76 RWBLK
2A82 R/W
2A90 +BUF
2AB0 buffer
2AE0 block
2B18 dirty?
2B2A revert
2B3A update
2B54 save-buffers
2B78 flush
2B8C EMPTY-BUFFERS
2BAC load
2BDC ?loading
2BEC -->
2BFA thru
2C10 (line)
2C22 .line
2C3A list
2C60 index
2C82 >latest
2C90 latest
2C94 |immed
2C98 |srch
2CA8 traverse
2CDE nfa>xt
2CEC xt>nfa
2CFC nfa>imm?
2D0E lfa>nfa
2D16 >id
2D22 id.
2D32 width
2D3A '
2D5C ,
2D6C >BODY
2D7A ALLOT
2D88 C,
2D9A (find)
2DBC nfa=
2DE6 (lookup)
2DFA FIND
2E18 [']
2E2A IMMEDIATE
2E40 UNUSED
2E4E dwalk
2E62 .word
2E70 WORDS
2E78 docol!
2E7A dovar,
2E82 douser,
2E9C dodoes,
2EA4 xt!
2EB0 docol,
2EB2 dodefer!
2EC0 (compile)
2ECA jmpoffs,
2EE0 jmpoffsalloc,
2F08 >fixup
2F16 loop,
2F24 lastnfa
2F34 lastxt
2F44 (does>)
2F56 does>
2F66 [
2F74 noop
2F7E ?comp
2F92 smudge
2F9E parse-name
2FB2 name"
2FD4 CREATE
3004 per-line
301A 2u.
302C 4u.
3046 (dmpln)
30A6 (dmp)
30CE dump
30E6 vdump
3102 [COMPILE]
3120 POSTPONE
3136 csp
313A leave-list
3146 !csp
3158 ?csp
3168 :
317C ;
3192 ?pairs
31A0 BACK
31B0 BEGIN
31BC IF
31D0 THEN
31E4 ELSE
31F6 (leave)
320C DO
321E ?DO
322C leave-resolve
3242 loop-compile
3268 LOOP
3278 +LOOP
3288 ULOOP
329A U+LOOP
32AC UNLOOP
32BA LEAVE
32CC UNTIL
32E0 AGAIN
32F4 WHILE
3302 REPEAT
3318 RECURSE
3326 EXIT
3336 DEFER
334E VARIABLE
335A UDP
3366 USER
3382 :NONAME
33A0 env:
33B0 has?
33C2 (
33D0 >IN
33DC CHAR
33EE REFILL
3446 RESTORE-INPUT
3484 SAVE-INPUT
34A4 SOURCE-ID
34BA >tib
34C4 TIB
34D4 loadfile
34E4 loadline
34F2 <input
3518 input>
353A ,"
3554 ?stack
3578 huh?
358C dpl
359A number
35F8 interpreter
3638 interpret
3654 EVALUATE
367E (clrsrc)
3694 QUIT
36D8 SOURCE
36F6 [CHAR]
3704 str=
3714 comment?
373A [ELSE]
37CE [THEN]
37DA [ENDIF]
37E4 [IF]
37F6 defined?
380C [IFUNDEF]
381C [IFDEF]
3822 regs-init
3852 cold-init
3878 'quit
388C abort
38AC cycle
38D2 snd
38EA delay
38FC blast0
3924 blast1
3942 bootup
