0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
0580 dinvert
058A not
0594 dnot
059E or
05A6 dor
05B0 and
05BA dand
05C4 xor
05CE dxor
05DA nand
05E4 dnand
05EE >r
05F6 2>r
0600 r>
0608 2r>
0614 rdrop
061C r@
0622 i
062A i'
0632 j
063C j'
0644 k
064E k'
0658 sp@
0662 sp!
066C rp@
0676 rp!
0680 lp@
068A lp!
0696 (do)
06A4 (loop)
06B0 (+loop)
06BC (uloop)
06CA (u+loop)
06D4 (?do)
06E6 execute
06F0 ?dup
06FA 2dup
070C (context>)
071C (>context)
0728 (user)
0730 0<
073A 0<=
0744 0>
074E 0>=
0758 0U<
0764 0U<=
076E 0U>
077A 0U>=
0782 <
078A <=
0790 >
0798 >=
07A0 U<
07A8 U<=
07B0 U>
07B8 U>=
07C0 D0<
07CC D0<=
07D6 D0>
07E2 D0>=
07EE DU0<
07FA DU0<=
0806 DU0>
0812 DU0>=
081C D<
0826 D<=
0830 D>
083A D>=
0844 DU<
0850 DU<=
085A DU>
0866 DU>=
0876 (unloop)
0886 2rdrop
0890 2/
0898 2*
08A4 LSHIFT
08B0 RSHIFT
08BC URSHIFT
08C8 CRSHIFT
08D2 SWPB
08E0 DLSHIFT
08EE DRSHIFT
08FE DURSHIFT
090E DCRSHIFT
0916 *
0922 2drop
092C d>q
093C dum/mod
0946 s>d
0952 true
095C false
0968 (fill)
0974 (cfill)
0980 (cmove)
098E (LITERAL)
099E (DLITERAL)
09AC ((s"))
09C0 (S")
09D0 (SYSCALL)
09D2 I/O
09D4 VDPRD
09D6 VDPST
09D8 VDPWD
09DA VDPWA
09DC VDPCL
09E0 VDPWI
09E4 GPLRD
09E8 GPLRA
09EC GPLWD
09F0 GPLWA
09F4 SPCHRD
09F8 SPCHWT
09FC KBD
0A00 SOUND
0A04 'INTS
0A08 'INTSP
0A0C M_INT_BKPT
0A0E M_INT_EXT
0A10 M_INT_VDP
0A12 M_INT_KBD
0A16 'KBD
0A1A 'KBDA
0A1E 'GATE
0A22 'DBG
0A26 ROM
0A2A (BOOT)
0A2E (COLD)
0A32 DP0
0A36 (LATEST)
0A3A FaultStacks
0A3E IntVecs
0A42 INT_RESET
0A46 INT_NMI
0A4A INT_FAULT
0A4E INT_KBD
0A50 INT_VDP
0A52 INT_BKPT
0A54 (#RP)
0A58 (#SP)
0A5C (#pad)
0A60 (##-pad)
0A64 (#slit-pad)
0A68 (#tib)
0A6C (#blk)
0A70 (#up)
0A74 RamTop
0A78 (rp0)
0A7C (sp0)
0A80 (pad0)
0A84 (#-pad0)
0A88 (slit-pad0)
0A8C (tib0)
0A90 (first)
0A94 (limit)
0A98 (up0)
0A9C grom_kbdlist
0A9E grom_font8x8
0AA2 grom_font5x6
0AA6 CTX_SP
0AA8 CTX_RP
0AAA CTX_UP
0AAC CTX_INT
0AAE IbranchX
0AB0 I0branchX
0AB4 IRfrom
0AB8 IRdrop
0ABC IatR
0AC0 Isub
0AC4 Iumul
0AC8 Iudivmod
0ACC Iudivmod_d
0AD0 Iload
0AD4 Icload
0AD8 Istore
0ADC Icstore
0AE0 Iuser
0AE4 Iupidx
0AE8 IloopUp
0AEC IuloopUp
0AF0 IplusLoopUp
0AF4 IuplusLoopUp
0AF8 Icfill
0AFC Icmove
0B00 Iexit
0B04 Iexecute
0B08 Idovar
0B0C Isyscall
0B10 IcontextFrom
0B14 ItoContext
0B18 IlitB
0B1C IlitW
0B20 IbranchB
0B24 I0branchB
0B28 Idup_d
0B2C ItoR_d
0B30 Irdrop_d
0B34 Irpidx
0B38 #idle
0B3A #dbg
0B3C #dbgf
0B3E #regsym
0B40 (dbg)
0B48 (dbgf)
0B50 (idle)
0B58 (register-symbol)
0B60 UP0
0B64 ramptr
0B68 rp0
0B6C sp0
0B70 >call
0B78 call>
0B7C inlineable
0B9A inlineable-imm
0BD0 STATE
0BDE literal
0C1A dliteral
0C68 compile,
0D20 RamVar
0D2E +Nfield
0D32 +field
0D36 +1field
0D44 vwaddr
0D52 !vwaddr
0D66 vsetbank
0D84 +vwaddr
0D96 +!vwaddr
0DAA gwaddr
0DB8 graddr
0DC4 g@
0DD8 gc@
0DE4 vc@
0DF0 vc!
0DFE +vc@
0E0C +vc!
0E1A vfill
0E2C +vfill
0E3E +gvmove
0E56 vcmove
0E74 cvmove
0E92 gcmove
0EB0 cgmove
0ECC >bit
0EE6 v-data
0EF6 v-screen
0F08 v-screensz
0F16 v-patts
0F26 v-pattsz
0F36 v-colors
0F46 v-colorsz
0F56 v-sprites
0F66 v-sprcol
0F76 v-sprpat
0F86 v-sprmot
0F94 v-free
0F98 v-pagesize
0F9C v-text
0FA0 v-mono
0FA4 v-width
0FA8 v-height
0FAC v-font
0FB0 v-fntwidth
0FB4 v-fntheight
0FB8 v-intflags
0FBC v-blink
0FC0 v-allocinfo
0FC4 v-rwpage
0FC8 v-vispage
0FCC v-pob
0FD0 v-unused
0FD4 v-initpages
0FD8 'v-setupregs
0FDC 'v-drawchar
0FE0 'v-readchar
0FE4 'v-blinkcursor
0FE8 'v-setupmode
0FEC 'v-updatecolors
0FF0 'v-setfont
0FF4 'v-clear
0FF8 'v-hchar
0FFC 'v-vchar
1000 msx-stride
1004 msx-shift
1008 msx-mask
100C msx-colmask
1010 msx-rowsperbankmask
1014 v-regsave
1018 v-data0
101C v-data-size
1020 v-int-nosprmot
1024 v-int-nocursor
1028 >vr
1038 v-regaddr
1056 (vr!)
106E (vr@)
1074 write-vregs
108A vid-show
109E std-set-screen-reg
10B0 std-set-color-reg
10C8 std-set-patt-reg
10DA std-set-sprite-reg
10F2 std-set-sprpat-reg
1104 >v-fontaddr
1110 v-curs-under
1114 v-curs
1118 v-cursor-timer
111C v-cursor-blink
1120 write-var-list
1130 v-set-alloc-list
1142 (mode)
1186 fg
118A bg
118E color-byte
119C color-word
11AC v-refresh-colors
11B8 fg!
11C8 bg!
11D8 fg@
11E2 bg@
11E6 msx-enhregs
1202 (vreset)
121C vreset
123E vstdpal
1256 v-cursor-off
1266 update-cursor
127E video-modes
129E text
12A6 gfx
12B2 bitmap
12BC gfx2
12C6 gfx3
12D0 gfx4
12DA gfx5
12E4 gfx6
12EE gfx7
12F8 text2
1304 mono
1310 multi
1314 last-video-mode
1320 #scr
132A #ssz
1334 #col
133E #csz
1348 #pat
1352 #psz
135C #spt
1366 #spr
1370 #smt
137C #spc
1388 #fre
138C (sprite-setup)
13AC std-sprite-setup
13B8 v9938-sprite-setup
13CE txt-choffs
13D6 txt-chaddr
13DE txt-waddr
13E4 txt-drawchar
13EA txt-readchar
13F2 txt-blinkcursor
1418 range-wrap
1438 (txt-hchar)
1454 txt-hchar
145A txt-vchar
149E txt-setupmode
14A4 txt-updatecolors
14AE txt-clear
14E0 std-setfont
1538 TextFunctions
1558 TextModeParams
15A0 TextModeRegs
15A8 txt-setupregs
15AE text-mode
15BE GfxModeRegs
15C6 GfxModeParams
160E gfx-setupregs
1618 gfx-setupmode
1620 gfx-updatecolors
162E gfx-mode
163E >txt2-coloraddr
164E txt2-drawchar
1676 txt2-clear
16A2 txt2-hchar
16C0 (txt2-hchar-colors)
173A txt2-vchar
1774 txt2-setupregs
177A Text2ModeRegs
1784 Text2Functions
1798 Text2ModeParams
17E0 txt2-setupmode
17F0 text2-mode
1806 bit-pixaddr
181A bit-chaddr
1824 bit-setupmode
183A bit-drawchar
1868 (set-bits)
1882 (reset-bits)
188A bit-blinkcursor
18DA bit-clear-rows
190A bit-clear
194E bit-updatecolors
196C bit-setfont
196E bit-set-patt-reg
1982 bit-set-color-reg
19A2 bit-setupregs
19AE BitFunctions
19C2 BitModeRegs
19CA BitModeParams
1A12 bit-mode
1A22 MonoBitModeRegs
1A2A MonoModeParams
1A72 mono-mode
1A88 Gfx3ModeRegs
1A90 Gfx3ModeParams
1AD8 gfx3-setupregs
1AE0 gfx3-mode
1AF0 msx-stdpalette
1B12 msx-vstatus0
1B18 msx-pixaddr
1B32 msx-setupmode
1B4E msx-cmdsetup
1B56 msx-waitcmdready
1B6A msx-waittxready
1B80 msx-setupMMMcommand
1B90 msx-cmd-word
1B9A msx-setup-cursor-DXDY
1BAC msx-cursor-color
1BB0 msx-adjust-cursor-color
1BB2 msx-blinkcursor
1BD6 msx-color-temp
1BDA msx-updatecolors
1CA0 msx-setfont
1CA2 msx-clear
1CE6 msx-use-drawchar-accel
1CE8 msx-sendcharpixel
1CF8 msx-drawchar-accel
1D5C msx-crosses-bank
1D72 msx-drawchar-16
1DE4 msx-drawchar-4
1E62 msx-drawchar-256
1ED2 msx-set-patt-reg
1EDC msx-set-sprite-reg
1EF0 msx-setupregs
1EF8 MsxFunctions
1F08 Gfx4ModeRegs
1F10 Gfx4ModeParams
1F6C gfx4-mode
1F7C Gfx6ModeRegs
1F84 Gfx6ModeParams
1FE0 gfx6-mode
1FF0 Gfx5ModeRegs
1FFA Gfx5ModeParams
2056 gfx5-mode
2066 Gfx7ModeRegs
206E Gfx7ModeParams
20CA gfx7-mode
20E2 mode
20F6 (setfont)
210C font8x8
212C font6x8
214C font5x6
216A <video
2182 video>
2190 #vrs
219E vsave
21C6 vrestore
2206 vblink!
2218 vrwpage
22BC vvispage
2318 vpage
2328 video-init
2346 sound-vclear
2368 sound-off
2380 sound-init
2384 t-data
2388 v-x
238C v-y
2390 win-mx
2394 win-my
2398 win-x
239C win-y
23A0 win-sx
23A4 win-sy
23A8 win-chxs
23AC win-chys
23B0 win-cx
23B4 win-cy
23B8 t-data0
23BC t-data-size
23C0 term-refresh
240C term-reset
2416 (win-update)
243C home
2448 .xy
245C .at-xy
247A xy
24A0 at-xy
24C0 .win!
252C win!
255E full!
256E .win@
2588 win@
25A6 $xy
25BA txt-xy>addr
25D2 home-col
25D8 ch>xy
25EC ch>y
25FC ch>x
260C advance-row
2624 new-line
2658 advance-cursor
266E cursor-off
2678 crlf
267E bksp
26CA chfill
26F0 hchar
2722 vchar
2792 cls
27D4 (emit)
27E4 emit
2816 getch
282A cr
2838 space
2846 type
2854 kbdbufsize
2858 kbdbuf
285C kbdstate
2860 kbdtimer
2864 kbddelay
2868 kbdrate
286C kbdshift
2870 kbdscan
2874 kbdlast
2878 kbdflag
287C kbdtail
2880 kbdhead
2884 randnoise
2888 read-row
2892 toupper
28A0 buffer-key
28C8 key-actions
28DE repeat-key
2922 lookup-key
2936 handle-key
2964 kbd-scan
29BA kbd-no-key
29D0 kbd-init
29F0 key?
2A08 (key)
2A28 key
2A38 ints-on
2A48 ints-off
2A54 pick
2A64 rpick
2A74 cmove
2A82 cmove>
2A8E m/mod
2AA8 u/mod
2AB2 u/
2AC0 umod
2ACC u*
2AD8 fill
2AE8 /STRING
2AF6 |!
2B04 &!
2B16 compare
2B4E tolower
2B66 comparef
2BA4 align-to
2BBE w>b
2BD0 umax
2BE4 umin
2BF8 base
2C02 dp
2C0E (pad)
2C1C (#pad)
2C2A (spad)
2C36 here
2C44 decimal
2C50 hex
2C5E digit
2C74 #ptr
2C80 demit
2C8E dtype
2CAA d.d
2CBE .d
2CCE /cells
2CD8 (d)
2CE6 DEPTH
2CF8 RDEPTH
2D08 TUCK
2D12 2!
2D20 2@
2D30 ALIGN
2D42 ALIGNED
2D50 CHAR+
2D5C CHARS
2D68 CELL+
2D74 DABS
2D84 MOVE
2D9A */
2DA8 */MOD
2DB4 /
2DC2 /MOD
2DD0 ABS
2DE2 FM/MOD
2E08 M*
2E20 MAX
2E32 MIN
2E44 MOD
2E52 SM/REM
2E70 (skip)
2E7A dn*
2E90 >digit
2ECA >NUMBER
2EF4 ]
2F00 s,
2F1A SLITERAL
2F28 S"
2F4E (abort")
2F74 ABORT"
2F8C hld
2F98 -pad
2FA2 <#
2FB0 HOLD
2FC0 (#)
2FD4 #
2FE2 #>
2FF2 #S
2FFE .
300A BL
3016 SIGN
302A SPACES
3044 U.
3052 COUNT
3060 (>c)
3078 (parse-word)
3086 WORD
3096 overstrike
30AE ACCEPT
3100 ENVIRONMENT?
310E (quit?)
3124 (pause?)
313E 0<>
3148 <>
3152 .R
3174 ERASE
317E NIP
3188 PAD
3196 (match)
31BE (src>)
31D8 (>src)
31E6 PARSE
31F4 (skip-spaces)
321C U.R
3236 WITHIN
3244 BLK
324E C/L
3256 \
327A D.R
3296 D.
32A4 UD.R
32BA UD.
32C6 .S
3300 r.S
3338 ?
3346 ?error
3352 errptrs
3368 error:"
337C err-none
3388 err-undefined
339E err-interpret-only
33AE err-loading-only
33C0 err-block-i/o
33D4 err-compile-only
33E2 err-empty-name
33F4 err-control-nesting
340A err-not-deferred
341A err-out-of-range
342C err-file-i/o
3430 num-errptrs
3434 message
3468 CHARS/BLOCK
3474 L/BLK
3480 FIRST
348C PREV
3498 LIMIT
34A2 USE
34AC SCR
34BA (b/blk)
34C4 R/W
34D2 +BUF
34F2 buffer
3522 block
355A dirty?
356C revert
357C update
3596 save-buffers
35BA flush
35CE EMPTY-BUFFERS
35EE load
360E ?loading
361C -->
362A thru
3640 (line)
3652 .line
3672 list
3698 index
36BA >latest
36C8 latest
36CC |immed
36D0 |srch
36E0 traverse
3716 nfa>xt
3724 xt>nfa
3734 nfa>imm?
3746 lfa>nfa
374E >id
375A id.
376A width
3772 '
3794 ,
37A4 >BODY
37B2 ALLOT
37C0 C,
37D2 (find)
37E2 (lookup)
37F6 FIND
3814 [']
3826 IMMEDIATE
383C UNUSED
384A dwalk
385E .word
386C WORDS
3874 docol!
3876 docon,
387E dovar,
3886 douser,
38A4 dodoes,
38AC xt!
38B8 docol,
38BA dodefer!
38C8 (compile)
38D2 jmpoffs,
38E8 jmpoffsalloc,
3914 >fixup
3922 loop,
3930 (does>)
3942 does>
395E noop
396E dodefer,
3986 is-check
39AC is,
39BA is?,
39C8 lastnfa
39D8 lastxt
39E2 [
39F0 ?comp
3A02 smudge
3A0E parse-name
3A20 name"
3A42 CREATE
3A72 per-line
3A88 2u.
3A9A 4u.
3AB4 (dmpln)
3B14 (dmp)
3B3C dump
3B54 vdump
3B70 [COMPILE]
3B8E POSTPONE
3BA4 csp
3BA8 leave-list
3BB4 !csp
3BC6 ?csp
3BD4 :
3BE8 ;
3BFE ?pairs
3C0C BACK
3C1A IF
3C2E THEN
3C42 ELSE
3C54 (leave)
3C6A DO
3C7C ?DO
3C8A leave-resolve
3CA0 loop-compile
3CC6 LOOP
3CD6 +LOOP
3CE6 ULOOP
3CF8 U+LOOP
3D0A UNLOOP
3D18 LEAVE
3D2A BEGIN
3D38 UNTIL
3D4C AGAIN
3D60 WHILE
3D6E REPEAT
3D84 RECURSE
3D92 EXIT
3DA2 DEFER
3DB2 IS
3DBE IS?
3DD0 CONSTANT
3DE6 VARIABLE
3DF2 UDP
3DFE USER
3E1A :NONAME
3E2C env:
3E3C has?
3E4A >source
3E4E #source
3E56 (
3E64 >IN
3E70 CHAR
3E82 REFILL
3EDE RESTORE-INPUT
3F1C SAVE-INPUT
3F3C SOURCE-ID
3F56 loadfile
3F66 loadline
3F74 <input
3F9A input>
3FBC ,"
3FD6 ?stack
3FFA huh?
400E dpl
401C number
407A interpreter
40BA interpret
40D6 EVALUATE
4100 (clrsrc)
4116 QUIT
415A SOURCE
4178 [CHAR]
4186 str=
4196 comment?
41BC [ELSE]
4250 [THEN]
425C [ENDIF]
4266 [IF]
4278 defined?
428E [IFUNDEF]
429E [IFDEF]
42A4 >rwblk
42A8 disk-rwblk
42AE GRAMBASE
42B2 #GRAM
42B6 gram-rwblk
42EA DSK1
42FA GRAM
430A RWBLK
4310 io-init
4314 tab-size
4316 'col
431A #left
4322 >curs
4328 >ch-mov
4332 ^del
4344 ^clear-start
434C ^clear-end
4356 ^bksp
436C ^bksp-to
4386 ^curs
43AA ^ins
43B8 ^chr
43C0 >home
43E6 ^home
43EC ^end
4410 ^char
441C +tab
4432 >ws?
445E >tab
4480 'line
4484 >laddr
448E ~curs
44B2 >ln-mov
44C6 ~del
44DE ~ins>
44E4 ~clear-line
44EE ~ins
44F6 (~copy)
450C ~copy
4514 ~paste
4520 ~dup
4538 ~split
455C ~join
4584 'fl
4588 ovr
458C pause
4598 trace
45AC !up
45B4 !left
45BE !right
45C8 !down
45D0 !block-down
45D6 !block-up
45DC !dup-line
45E2 !home
45E8 !end
45EE !home-line
45F4 !end-line
45FC (erase)
460A !erase
4610 !erase-to
4618 !del-line
461C !ins/ovr
4624 !del
462A !bksp
4634 (tab)
465A !tab
4670 !untab
4684 !paste
4688 !copy-line
468C !enter
46AA !join
46AE !save
46B2 !revert
46B6 !clear
46BE !load
46C8 !exit
46CC !interpret
46D6 !refresh
46DA edittab
4754 editsz
4758 menubar
47AA edit.char
47BC onkey
47F6 orig-video
47FA edit-video
47FE in-editor
4802 init-editor
4810 save-video
4822 editor.exit
482E 'lastscr
4832 'lastline
4836 'lastcol
483A #statuscol
483E #x-border
4842 #y-border
4844 #y-menu
4848 intp.window
4854 edit.window
485A edit.drawui
4926 edit.drawstatus
4980 edit.drawline
49A4 edit.drawblock
49B2 edit.lastpos!
49C6 edit.update
4A1A edit.fixblock
4A2C (edit)
4A4C edit
4A76 >edit
4A7C regs-init
4AAC cold-init
4ADC 'quit
4AF0 abort
4B10 cycle
4B36 snd
4B4E delay
4B60 blast0
4B88 blast1
4BB0 square
4BC8 hang
4BCE bootup
4BEC ints-check
4BF2 vdp-status
4BF6 vdp-ticks
4BFA vdp-timeout
4BFE vdp-int-handler
4C44 kbd-int-handler
4C5C nmi-int-handler
4C68 fault-int-handler
4C7C >int-vec
4C82 set-int-vec
4C86 enable-int
4C98 call-int
4CA2 ints-init
