0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0570 nip
057E invert
058A dinvert
0594 not
059E dnot
05A8 or
05B0 dor
05BA and
05C4 dand
05CE xor
05D8 dxor
05E4 nand
05EE dnand
05F8 >r
0600 2>r
060A r>
0612 2r>
061E rdrop
0626 r@
062C i
0634 i'
063C j
0646 j'
064E k
0658 k'
0662 sp@
066C sp!
0676 rp@
0680 rp!
068A lp@
0694 lp!
06A0 (do)
06AE (loop)
06BA (+loop)
06C6 (uloop)
06D4 (u+loop)
06DE (?do)
06F0 execute
06FA ?dup
0704 2dup
0716 (context>)
0726 (>context)
0732 (user)
073A 0<
0744 0<=
074E 0>
0758 0>=
0762 0U<
076E 0U<=
0778 0U>
0784 0U>=
078C <
0794 <=
079A >
07A2 >=
07AA U<
07B2 U<=
07BA U>
07C2 U>=
07CA D0<
07D6 D0<=
07E0 D0>
07EC D0>=
07F8 DU0<
0804 DU0<=
0810 DU0>
081C DU0>=
0826 D<
0830 D<=
083A D>
0844 D>=
084E DU<
085A DU<=
0864 DU>
0870 DU>=
0880 (unloop)
0890 2rdrop
089A 2/
08A2 2*
08AE LSHIFT
08BA RSHIFT
08C6 URSHIFT
08D2 CRSHIFT
08DC SWPB
08EA DLSHIFT
08F8 DRSHIFT
0908 DURSHIFT
0918 DCRSHIFT
0920 *
092C 2drop
0936 d>q
0946 dum/mod
0950 s>d
095C true
0966 false
0972 (fill)
097E (cfill)
098A (cmove)
0998 (LITERAL)
09A8 (DLITERAL)
09B6 ((s"))
09CA (S")
09DA (SYSCALL)
09DC (dbg)
09E4 (dbgf)
09EC (idle)
09F4 (register-symbol)
09FC UP0
0A00 >call
0A08 call>
0A0C inlineable
0A2A inlineable-imm
0A60 STATE
0A6E literal
0AAA dliteral
0AF8 compile,
0BB0 RamVar
0BBE +Nfield
0BC2 +field
0BC6 +1field
0BCA error:
0BD8 vwaddr
0BE6 !vwaddr
0BF8 +vwaddr
0C0A +!vwaddr
0C1E gwaddr
0C2C graddr
0C38 g@
0C4C gc@
0C58 vc@
0C64 vc!
0C72 +vc@
0C80 +vc!
0C8E vfill
0CA2 +vfill
0CB6 +gvmove
0CCE vcmove
0CEC cvmove
0D0A gcmove
0D28 cgmove
0D44 >bit
0D5E v-data
0D6E v-screen
0D80 v-screensz
0D8E v-patts
0D9E v-pattsz
0DAE v-colors
0DBE v-colorsz
0DCE v-sprites
0DDE v-sprcol
0DEE v-sprpat
0DFE v-sprmot
0E0C v-free
0E10 video-modes
0E30 text
0E38 gfx
0E44 bitmap
0E4E gfx2
0E58 gfx3
0E62 gfx4
0E6C gfx5
0E76 gfx6
0E80 gfx7
0E8A text2
0E96 mono
0EA2 multi
0EA6 vsetbank
0EBA >vr
0ECA v-regaddr
0EE8 (vr!)
0F00 (vr@)
0F06 write-vregs
0F1C vid-show
0F30 std-set-screen-reg
0F42 std-set-color-reg
0F5A std-set-patt-reg
0F6C std-set-sprite-reg
0F84 std-set-sprpat-reg
0F96 >v-fontaddr
0FA2 v-curs-under
0FA6 v-curs
0FAA v-cursor-timer
0FAE write-var-list
0FBE v-set-alloc-list
0FD0 (mode)
1014 fg
1018 bg
101C color-byte
102A color-word
103A v-refresh-colors
1046 fg!
1056 bg!
1066 fg@
1070 bg@
1074 msx-enhregs
1090 (vreset)
10AA vreset
10CC vstdpal
10E4 v-cursor-off
10F4 update-cursor
110C (sprite-setup)
112C std-sprite-setup
1138 v9938-sprite-setup
114E txt-choffs
1156 txt-chaddr
115E txt-waddr
1164 txt-drawchar
116A txt-readchar
1172 txt-blinkcursor
1198 range-wrap
11B8 (txt-hchar)
11D0 txt-hchar
11D6 txt-vchar
121A txt-setupmode
1220 txt-updatecolors
122A txt-clear
125C std-setfont
12B4 TextFunctions
12D4 TextModeParams
131C TextModeRegs
1324 txt-setupregs
132A text-mode
133A GfxModeRegs
1342 GfxModeParams
138A gfx-setupregs
1394 gfx-setupmode
139C gfx-updatecolors
13AA gfx-mode
13BA >txt2-coloraddr
13CA txt2-drawchar
13F2 txt2-clear
141E txt2-hchar
143C (txt2-hchar-colors)
14B6 txt2-vchar
14F2 txt2-setupregs
14F8 Text2ModeRegs
1502 Text2Functions
1516 Text2ModeParams
155E txt2-setupmode
156E text2-mode
1584 bit-pixaddr
1598 bit-chaddr
15A2 bit-setupmode
15B8 bit-drawchar
15E6 (set-bits)
1600 (reset-bits)
1608 bit-blinkcursor
1658 bit-clear-rows
1688 bit-clear
16CC bit-updatecolors
16E8 bit-setfont
16EA bit-set-patt-reg
16FE bit-set-color-reg
171E bit-setupregs
172A BitFunctions
173E BitModeRegs
1746 BitModeParams
178E bit-mode
179E MonoBitModeRegs
17A6 MonoModeParams
17EE mono-mode
1804 Gfx3ModeRegs
180C Gfx3ModeParams
1854 gfx3-setupregs
185C gfx3-mode
186C msx-stdpalette
188E msx-vstatus0
1894 msx-pixaddr
18AE msx-setupmode
18CA msx-cmdsetup
18D2 msx-waitcmdready
18E6 msx-waittxready
18FC msx-setupMMMcommand
190C msx-cmd-word
1916 msx-setup-cursor-DXDY
1928 msx-cursor-color
192C msx-adjust-cursor-color
192E msx-blinkcursor
1952 msx-color-temp
1956 msx-updatecolors
1A1C msx-setfont
1A1E msx-clear
1A62 msx-sendcharpixel
1A72 msx-drawchar-accel
1AD6 msx-crosses-bank
1AEC msx-drawchar-16
1B5E msx-drawchar-4
1BDC msx-drawchar-256
1C4C msx-set-patt-reg
1C56 msx-set-sprite-reg
1C6A msx-setupregs
1C72 MsxFunctions
1C82 Gfx4ModeRegs
1C8A Gfx4ModeParams
1CE6 gfx4-mode
1CF6 Gfx6ModeRegs
1CFE Gfx6ModeParams
1D5A gfx6-mode
1D6A Gfx5ModeRegs
1D74 Gfx5ModeParams
1DD0 gfx5-mode
1DE0 Gfx7ModeRegs
1DE8 Gfx7ModeParams
1E44 gfx7-mode
1E5C mode
1E70 (setfont)
1E86 v-font!
1E94 font!
1EAC font8x8
1EBE font6x8
1ED0 font5x6
1EE0 <video
1EF8 video>
1F08 vblink!
1F1A vrwpage
1FBE vvispage
201A vpage
202A video-init
204A sound-vclear
206C sound-off
2084 sound-init
2088 t-data
208C term-refresh
20D8 term-reset
20E2 (win-update)
2108 home
2114 .xy
2128 .at-xy
2146 xy
216C at-xy
218C .win!
21F8 win!
222A full!
223A .win@
2254 win@
2272 $xy
2286 txt-xy>addr
229E home-col
22A4 ch>xy
22B8 ch>y
22C8 ch>x
22D8 advance-row
22F0 new-line
2324 advance-cursor
233A cursor-off
2344 crlf
234A bksp
2396 chfill
23BC hchar
23EE vchar
245E cls
24A0 (emit)
24B0 emit
24E2 getch
24F6 cr
2504 space
2512 type
2528 #vrs
2536 vsave
255E vrestore
2596 kbdbuf
259A kbdstate
259E randnoise
25A2 read-row
25AC toupper
25BA buffer-key
25E2 key-actions
25F8 repeat-key
263A lookup-key
2650 handle-key
2680 kbd-scan
26E0 kbd-no-key
26F6 kbd-init
271C key?
2732 (key)
2752 key
2762 kshift
2772 ints-on
2782 ints-off
278E pick
279E rpick
27AE cmove
27BC cmove>
27C8 m/mod
27E2 u/mod
27EC u/
27FA umod
2806 u*
2814 U*/MOD
2820 U*/
282C fill
2836 rp0
2840 sp0
284E /STRING
285C |!
286A &!
287C tolower
288E s<>
28C6 %-
28E0 w>b
28F2 umax
2906 umin
291A base
2924 dp
2930 (pad)
293E (#pad)
294C (spad)
2958 here
2966 decimal
2972 hex
2980 digit
2996 #ptr
29A2 demit
29B0 dtype
29CC d.d
29E0 .d
29F0 /cells
29F4 (d)
2A02 DEPTH
2A14 RDEPTH
2A24 TUCK
2A2E 2!
2A3C 2@
2A4C ALIGN
2A5E ALIGNED
2A6C CHAR+
2A78 CHARS
2A84 CELL+
2A90 DABS
2AA0 MOVE
2AB6 */
2AC4 */MOD
2AD0 /
2ADE /MOD
2AEC ABS
2AFE FM/MOD
2B24 M*
2B3C MAX
2B4E MIN
2B60 MOD
2B6E SM/REM
2B8C (skip)
2B96 dn*
2BAC >digit
2BE6 >NUMBER
2C10 ]
2C1C s,
2C36 SLITERAL
2C44 S"
2C5E (abort")
2C84 ABORT"
2C9C hld
2CA8 -pad
2CB2 <#
2CC0 HOLD
2CD0 (#)
2CE4 #
2CF2 #>
2D02 #S
2D0E .
2D1A BL
2D26 SIGN
2D3A SPACES
2D54 U.
2D62 COUNT
2D70 (>c)
2D78 (parse-word)
2D86 WORD
2D96 overstrike
2DAE ACCEPT
2E00 ENVIRONMENT?
2E04 (quit?)
2E0E (pause?)
2E28 0<>
2E32 <>
2E3C .R
2E5E ERASE
2E68 PAD
2E6C (match)
2E94 (src>)
2EAE (>src)
2EBC PARSE
2ECA (skip-spaces)
2EF2 U.R
2F0C WITHIN
2F1A BLK
2F24 C/L
2F2C \
2F50 D.R
2F6C D.
2F7A UD.R
2F90 UD.
2F9C .S
2FD6 r.S
300E ?
301C ?error
3028 message
306C CHARS/BLOCK
3078 L/BLK
3084 FIRST
3090 PREV
309C LIMIT
30A6 USE
30B0 SCR
30BE (b/blk)
30C8 R/W
30D6 +BUF
30F6 buffer
3126 block
315E dirty?
3170 revert
3180 update
319A save-buffers
31BE flush
31D2 EMPTY-BUFFERS
31F2 load
3212 ?loading
3220 -->
322E thru
323A (line)
3244 .line
3264 list
328A index
32AC >latest
32BA latest
32CA traverse
3300 nfa>xt
330E xt>nfa
331E nfa>imm?
3330 lfa>nfa
3338 >id
3344 id.
3354 width
335C '
337E ,
338E >BODY
339C ALLOT
33AA C,
33B2 (find)
33B6 (lookup)
33CA FIND
33E8 [']
33FA IMMEDIATE
3410 UNUSED
341E dwalk
3432 .word
3440 WORDS
3448 docol!
344A docon,
3452 dovalue,
345E do>to,
3460 dovar,
3468 douser,
3486 dodoes,
348E xt!
349A docol,
349C dodefer!
34AA (compile)
34B4 jmpoffs,
34CA jmpoffsalloc,
34F6 >fixup
3504 loop,
3512 (does>)
3524 does>
3540 noop
3550 dodefer,
3568 is-check
358E is,
359C is?,
35AA lastnfa
35BA lastxt
35C4 [
35D2 ?comp
35E4 smudge
35F0 parse-name
3602 name"
3624 CREATE
3654 per-line
366A 2u.
367C 4u.
368C (dmpln)
36E4 (dmp)
370C dump
3724 vdump
3740 [COMPILE]
375E POSTPONE
3774 csp
3780 !csp
3792 ?csp
37A0 :
37B4 ;
37CA ?pairs
37D8 BACK
37E6 IF
37FA THEN
380E ELSE
3820 (leave)
3836 DO
3848 ?DO
3856 leave-resolve
386C loop-compile
3892 LOOP
38A2 +LOOP
38B2 ULOOP
38C4 U+LOOP
38D6 UNLOOP
38E4 LEAVE
38F6 BEGIN
3904 UNTIL
3918 AGAIN
392C WHILE
393A REPEAT
3950 RECURSE
395E EXIT
396E DEFER
397E IS
398A IS?
399C CONSTANT
39B2 VARIABLE
39C0 VALUE
39D0 TO
39EA UDP
39F6 USER
3A12 :NONAME
3A24 env:
3A34 has?
3A46 (
3A54 >IN
3A60 CHAR
3A72 REFILL
3ACE RESTORE-INPUT
3B0C SAVE-INPUT
3B2C SOURCE-ID
3B46 loadfile
3B56 loadline
3B64 <input
3B8A input>
3BAC ,"
3BC6 ?stack
3BEA huh?
3BFE dpl
3C0C number
3C6A interpreter
3CAA interpret
3CC6 EVALUATE
3CE4 (clrsrc)
3CFA QUIT
3D3C SOURCE
3D5A [CHAR]
3D68 str=
3D6C comment?
3D92 [ELSE]
3E26 [THEN]
3E32 [ENDIF]
3E3C [IF]
3E4E defined?
3E64 [IFUNDEF]
3E74 [IFDEF]
3E82 guard
3E9E toss
3EBE unguard
3ED6 ?toss
3EE4 wait4
3F1E fdc-ready
3F2E fdc-wait-ready
3F38 fdc-command
3F48 dsk-flg!
3F62 dsk-flg?
3F68 motor
3F6E seek-command
3F74 seek-track
3F9E sec>attrs
3FA8 block>sec
3FAC disk-seek-sec
3FB6 drq-ready
3FBE (dsk-read)
3FC6 (dsk-write)
3FCC xfer
3FF4 (disk-rwblk)
402C disk-rwblk
4046 gram-rwblk
4072 set-disk
4080 DSK1
409A GRAM
40A8 RWBLK
40AE io-init
40B6 #left
40BE >curs
40C4 >ch-mov
40CE ^del
40E0 ^clear-start
40E8 ^clear-end
40F2 ^bksp
4108 ^bksp-to
4122 ^curs
4146 ^ins
4154 ^chr
415C >home
4182 ^home
4188 ^end
41AC ^char
41B8 +tab
41CE >ws?
41FA >tab
421C >laddr
4226 ~curs
424A >ln-mov
425E ~del
4276 ~ins>
427C ~clear-line
4286 ~ins
428E (~copy)
42A4 ~copy
42AC ~paste
42B8 ~dup
42D0 ~split
42F4 ~join
431C pause
4328 trace
433C !up
4344 !left
434E !right
4358 !down
4360 !block-down
4366 !block-up
436C !dup-line
4372 !home
4378 !end
437E !home-line
4384 !end-line
438C (erase)
439A !erase
43A0 !erase-to
43A8 !del-line
43AC !ins/ovr
43B4 !del
43BA !bksp
43C4 (tab)
43EA !tab
4400 !untab
4414 !paste
4418 !copy-line
441C !enter
443A !join
443E !save
4442 !revert
4446 !clear
444E !load
4458 !exit
445C !interpret
4466 draw-window
44E2 !refresh
44E6 !help
452A edittab
45A8 edit.char
45BA onkey
4600 init-editor
460E save-video
4620 editor.exit
462C intp.window
4638 edit.window
463E edit.drawui
46CA edit.drawstatus
4724 edit.drawline
4748 edit.drawblock
4756 edit.lastpos!
476A edit.update
47BE edit.fixblock
47D0 (edit)
47F0 edit
481A >edit
4820 regs-init
4844 cold-init
4874 'quit
4890 abort
48A2 cycle
48C8 snd
48E0 delay
48F2 blast0
491A blast1
4942 square
495A hang
496A bootup
4988 ints-check
498E vdp-status
4992 vdp-ticks
4996 vdp-timeout
499A v-intflag-off?
49A2 vdp-int-handler
49E2 kbd-int-handler
49FA nmi-int-handler
4A14 fault-int-handler
4A28 >int-vec
4A2E set-int-vec
4A32 enable-int
4A44 call-int
4A4E ints-init
