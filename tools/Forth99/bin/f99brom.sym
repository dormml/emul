0410 cell
041A cells
0424 ;S
042A @
0432 c@
043A d@
0442 !
044A c!
0452 d!
045C +!
0464 c+!
046C d+!
0476 1+
047E 2+
0486 1-
048E 2-
0496 dup
04A0 drop
04AA swap
04B4 2swap
04C0 over
04CA 2over
04D4 rot
04DE 2rot
04E8 0=
04F0 D0=
04F8 =
0500 D=
050E 0branch
051A branch
0526 negate
0532 dnegate
053A +
0542 d+
054A -
0552 d-
055C um*
0568 um/mod
0574 invert
057C not
0584 or
058C and
0594 xor
059C >r
05A4 2>r
05AE r>
05B6 2r>
05C2 rdrop
05CA r@
05D0 i
05D6 j
05E0 sp@
05EA sp!
05F4 rp@
05FE rp!
0608 lp@
0612 lp!
061E (do)
062C (loop)
0638 (+loop)
0644 (uloop)
0652 (u+loop)
065C (?do)
066E execute
0678 ?dup
0682 2dup
0694 (context>)
06A4 (>context)
06B0 (user)
06B8 0<
06C2 0<=
06CC 0>
06D6 0>=
06E0 0U<
06EC 0U<=
06F6 0U>
0702 0U>=
070A <
0712 <=
0718 >
0720 >=
0728 U<
0730 U<=
0738 U>
0740 U>=
0748 D0<
0754 D0<=
075E D0>
076A D0>=
0776 DU0<
0782 DU0<=
078E DU0>
079A DU0>=
07A4 D<
07AE D<=
07B8 D>
07C2 D>=
07CC DU<
07D8 DU<=
07E2 DU>
07EE DU>=
07FE (unloop)
080E 2rdrop
0818 2/
0820 2*
082C LSHIFT
0838 RSHIFT
0844 URSHIFT
0850 CRSHIFT
085A SWPB
0868 DLSHIFT
0876 DRSHIFT
0886 DURSHIFT
0896 DCRSHIFT
089E *
08AA 2drop
08B4 d>q
08C4 dum/mod
08CE s>d
08DA true
08E4 false
08F0 (fill)
08FC (cfill)
0908 (move)
0914 (cmove)
0922 (LITERAL)
0932 (DLITERAL)
0940 ((s"))
0954 (S")
0964 (SYSCALL)
0966 I/O
0968 VDPRD
096A VDPST
096C VDPWD
096E VDPWA
0970 VDPCL
0974 VDPWI
0978 GPLRD
097C GPLRA
0980 GPLWD
0984 GPLWA
0988 SPCHRD
098C SPCHWT
0990 KBD
0994 SOUND
0998 'INTS
099C 'INTSP
09A0 M_INT_BKPT
09A2 M_INT_EXT
09A4 M_INT_VDP
09A6 M_INT_KBD
09AA 'KBD
09AE 'KBDA
09B2 'DBG
09B6 ROM
09BA (BOOT)
09BE (COLD)
09C2 DP0
09C6 (LATEST)
09CA (#RP)
09CE (#SP)
09D2 (#pad)
09D6 (##-pad)
09DA (#slit-pad)
09DE (#tib)
09E2 (#blk)
09E6 (#up)
09EA RamTop
09EE (rp0)
09F2 (sp0)
09F6 (pad0)
09FA (#-pad0)
09FE (slit-pad0)
0A02 (tib0)
0A06 (first)
0A0A (limit)
0A0E (up0)
0A12 SysCalls
0A16 IntVecs
0A1A INT_RESET
0A1E INT_NMI
0A22 INT_KBD
0A24 INT_VDP
0A26 INT_BKPT
0A28 grom_kbdlist
0A2A grom_font8x8
0A2E grom_font5x6
0A32 CTX_SP
0A34 CTX_RP
0A36 CTX_UP
0A38 CTX_INT
0A3A IbranchX
0A3C I0branchX
0A40 IRfrom
0A44 IatR
0A48 Isub
0A4C Iumul
0A50 Iudivmod
0A54 Iudivmod_d
0A58 Iuser
0A5C Iupidx
0A60 IloopUp
0A64 IuloopUp
0A68 IplusLoopUp
0A6C IuplusLoopUp
0A70 Icfill
0A74 Icmove
0A78 Iexit
0A7C Idovar
0A80 Isyscall
0A84 IlitB
0A88 IlitW
0A8C IbranchB
0A90 I0branchB
0A94 Idup_d
0A98 ItoR_d
0A9C Irdrop_d
0AA0 Irpidx
0AA4 #idle
0AA6 #dbg
0AA8 #dbgf
0AAA #regsym
0AAC (dbg)
0AB4 (dbgf)
0ABC (idle)
0AC4 (register-symbol)
0ACC UP
0AD0 ramptr
0AD4 rp0
0AD8 sp0
0AE4 STATE
0AF2 literal
0B2E dliteral
0B78 >call
0B8C compile,
0C22 RamVar
0C30 +Nfield
0C34 +field
0C38 +1field
0C46 vwaddr
0C54 !vwaddr
0C68 vsetbank
0C82 +vwaddr
0C94 +!vwaddr
0CA8 gwaddr
0CB6 graddr
0CC2 g@
0CD6 gc@
0CE2 vc@
0CEE vc!
0CFE (vmbr)
0D0E vmbr
0D1E (vmbw)
0D2E vmbw
0D3E gvmove
0D54 >bit
0D6E v-data
0D72 v-screen
0D76 v-screensz
0D7A v-patts
0D7E v-pattsz
0D82 v-colors
0D86 v-colorsz
0D8A v-sprites
0D8E v-sprcol
0D92 v-sprpat
0D96 v-sprmot
0D9A v-free
0D9E v-text
0DA2 v-mono
0DA6 v-width
0DAA v-height
0DAE v-font
0DB2 v-fntwidth
0DB6 v-fntheight
0DBA 'v-coordaddr
0DBE 'v-drawchar
0DC2 'v-readchar
0DC6 'v-blinkcursor
0DCA 'v-setupmode
0DCE 'v-updatecolors
0DD2 'v-setfont
0DD6 'v-clear
0DDA 'v-hchar
0DDE 'v-vchar
0DE2 msx-stride
0DE6 msx-shift
0DEA msx-mask
0DEE v-regsave
0DF2 v-data-size
0DF6 w>b
0E00 write-vregaddr
0E1A get-vreg
0E20 write-vregs
0E36 vid-show
0E44 >v-fontaddr
0E50 v-curs-under
0E54 v-curs
0E58 v-cursor-timer
0E5C v-cursor-blink
0E60 write-var-list
0E70 (mode)
0EA8 fg
0EAC bg
0EB0 color-byte
0EBE color-word
0ECE v-refresh-colors
0EDA fg!
0EEA bg!
0EFA fg@
0F04 bg@
0F08 vreset
0F1A vstdpal
0F1C v-cursor-off
0F2C update-cursor
0F44 video-modes
0F64 text
0F6C gfx
0F78 bitmap
0F82 gfx2
0F8C gfx3
0F96 gfx4
0FA0 gfx5
0FAA gfx6
0FB4 gfx7
0FBE text2
0FCA mono
0FD6 multi
0FDA last-video-mode
0FE6 #scr
0FF0 #ssz
0FFA #col
1004 #csz
100E #pat
1018 #psz
1022 #spt
102C #spr
1036 #smt
1042 #spc
104E #fre
1052 txt-chaddr
1060 txt-waddr
1066 txt-drawchar
106C txt-readchar
1074 txt-blinkcursor
109A range-wrap
10BA txt-hchar
10D4 txt-vchar
111E txt-setupmode
1124 txt-updatecolors
112E txt-clear
113C std-setfont
1146 TextFunctions
1166 TextModeParams
11A6 TextModeRegs
11B2 text-mode
11C2 (sprite-setup)
11E2 std-sprite-setup
11EE v9938-sprite-setup
1204 GfxModeRegs
1216 GfxModeParams
1256 gfx-setupmode
125E gfx-updatecolors
126C gfx-mode
127C Text2ModeRegs
128E Text2ModeParams
12CE txt2-setupmode
12DC text2-mode
12EC bit-pixaddr
1300 bit-waddr
1306 bit-raddr
130C bit-setupmode
1320 bit-drawchar
1350 (set-bits)
136A (reset-bits)
1372 bit-blinkcursor
13C2 bit-clear
13DA bit-updatecolors
13F8 bit-setfont
13FA BitFunctions
140E BitModeRegs
1420 BitModeParams
1460 bit-mode
1470 MonoBitModeRegs
1482 mono-mode
14A4 Gfx3ModeRegs
14B8 Gfx3ModeParams
14F8 gfx3-mode
1508 msx-stdpalette
152A msx-enhregs
153A msx-vstatus0
1540 msx-pixaddr
155A msx-setupmode
1560 msx-cmdsetup
1568 msx-waitcmdready
1570 msx-waittxready
1578 msx-setupMMMcommand
1588 msx-cmd-word
1592 msx-setup-cursor-DXDY
159C msx-blinkcursor
15C0 msx-color-temp
15C4 msx-clear
15D2 msx-updatecolors
167E msx-setfont
1680 msx-use-drawchar-accel
1682 msx-drawchar-16
16D2 msx-drawchar-4
172C msx-drawchar-256
1786 MsxFunctions
1796 Gfx4ModeRegs
17A6 Gfx4ModeParams
17F6 gfx4-mode
1806 Gfx6ModeRegs
1816 Gfx6ModeParams
1866 gfx6-mode
1876 Gfx5ModeRegs
1888 Gfx5ModeParams
18D8 gfx5-mode
18E8 Gfx7ModeRegs
18F8 Gfx7ModeParams
1948 gfx7-mode
1960 mode
1970 vfill
1984 (setfont)
1998 font8x8
19AE video-init
19C2 t-data
19C6 v-x
19CA v-y
19CE win-x
19D2 win-y
19D6 win-sx
19DA win-sy
19DE t-data-size
19E2 term-reset
1A0A home
1A1C xy
1A2C xy!
1A38 curs-addr
1A50 home-col
1A56 ch>xy
1A6A ch>y
1A7A ch>x
1A8A win-chsize
1AB0 advance-row
1AC8 advance-cursor
1AE0 cursor-off
1AE6 crlf
1AEE bksp
1B3A chfill
1B64 hchar
1B92 vchar
1BFE cls
1C10 (emit)
1C20 emit
1C48 getch
1C5C cr
1C6A space
1C78 type
1C86 kbdbufsize
1C8A kbdbuf
1C8E kbdstate
1C92 kbdtimer
1C96 kbddelay
1C9A kbdrate
1C9E kbdshift
1CA2 kbdscan
1CA6 kbdlast
1CAA kbdflag
1CAE kbdtail
1CB2 kbdhead
1CB6 timeout
1CBA randnoise
1CBE read-row
1CC8 toupper
1CD6 buffer-key
1CFE repeat-key
1D40 lookup-key
1D54 handle-key
1D82 key-actions
1D98 kbd-scan
1DE4 kbd-no-key
1DFA kbd-init
1E1A key?
1E30 (key)
1E50 key
1E5E ints-check
1E64 vdp-status
1E68 vdp-ticks
1E6C vdp-int-handler
1E98 kbd-int-handler
1EB0 nmi-int-handler
1EB4 >int-vec
1EBA set-int-vec
1EBE enable-int
1ED0 call-int
1EDA ints-init
1EFC ints-on
1F0C ints-off
1F18 pick
1F28 rpick
1F38 cmove
1F46 cmove>
1F52 m/mod
1F6C u/mod
1F76 u/
1F84 umod
1F90 u*
1F9C fill
1FAC /STRING
1FBA |!
1FC8 &!
1FDA compare
2012 tolower
202A comparef
2064 base
206E dp
207A (pad)
2088 (#pad)
2096 (spad)
20A2 here
20B0 decimal
20BC hex
20CA digit
20E0 #ptr
20EC demit
20FA dtype
2116 d.d
212A .d
213C constant
2148 /cells
2152 (d)
2160 DEPTH
2172 RDEPTH
2182 TUCK
218C 2!
219A 2@
21AA ALIGN
21BC ALIGNED
21CA CHAR+
21D6 CHARS
21E2 CELL+
21EE DABS
21FE MOVE
2214 */
2222 */MOD
222E /
223C /MOD
224A ABS
225C FM/MOD
2282 M*
229A MAX
22AC MIN
22BE MOD
22CC SM/REM
22EA (skip)
22F4 dn*
230A >digit
2344 >NUMBER
236E ]
237A s,
2394 SLITERAL
23A2 S"
23C8 (abort")
23EE ABORT"
2406 hld
2412 -pad
241C <#
242A HOLD
243A (#)
244E #
245C #>
246C #S
2478 .
2484 BL
2490 SIGN
24A4 SPACES
24BE U.
24CC COUNT
24DA (>c)
24F2 (parse-word)
2500 WORD
2510 overstrike
2528 ACCEPT
257A ENVIRONMENT?
2588 (quit?)
259E (pause?)
25BA #TIB
25C4 0<>
25CE <>
25D8 .R
25FA ERASE
2604 NIP
260E PAD
261C (match)
2644 (src>)
265E (>src)
266C PARSE
267A (skip-spaces)
26A2 U.R
26BC WITHIN
26CA BLK
26D4 C/L
26DC \
2700 D.R
271C D.
272A UD.R
2740 UD.
274C .S
2786 r.S
27BE ?
27C2 message
28BC ?error
28D6 CHARS/BLOCK
28E2 L/BLK
28EE FIRST
28FA PREV
2906 LIMIT
2910 USE
291A SCR
2928 (b/blk)
2934 RWBLK
2940 R/W
294E +BUF
296E buffer
299E block
29D6 dirty?
29E8 revert
29F8 update
2A12 save-buffers
2A36 flush
2A4A EMPTY-BUFFERS
2A6A load
2A9A ?loading
2AAA -->
2AB8 thru
2ACE (line)
2AE0 .line
2AF8 list
2B1E index
2B40 >latest
2B4E latest
2B52 |immed
2B56 |srch
2B66 traverse
2B9C nfa>xt
2BAA xt>nfa
2BBA nfa>imm?
2BCC lfa>nfa
2BD4 >id
2BE0 id.
2BF0 width
2BF8 '
2C1A ,
2C2A >BODY
2C38 ALLOT
2C46 C,
2C58 (find)
2C7A nfa=
2CA4 (lookup)
2CB8 FIND
2CD6 [']
2CE8 IMMEDIATE
2CFE UNUSED
2D0C dwalk
2D20 .word
2D2E WORDS
2D36 docol!
2D38 dovar,
2D40 douser,
2D5A dodoes,
2D62 xt!
2D6E docol,
2D70 dodefer!
2D7E (compile)
2D88 jmpoffs,
2D9E jmpoffsalloc,
2DC6 >fixup
2DD4 loop,
2DE2 lastnfa
2DF2 lastxt
2E02 (does>)
2E14 does>
2E24 [
2E32 noop
2E3C ?comp
2E50 smudge
2E5C parse-name
2E70 name"
2E92 CREATE
2EC2 per-line
2ED8 2u.
2EEA 4u.
2F04 (dmpln)
2F64 (dmp)
2F8C dump
2FA4 vdump
2FC0 [COMPILE]
2FDE POSTPONE
2FF4 csp
2FF8 leave-list
3004 !csp
3016 ?csp
3026 :
303A ;
3050 ?pairs
305E BACK
306E BEGIN
307A IF
308E THEN
30A2 ELSE
30B4 (leave)
30CA DO
30DC ?DO
30EA leave-resolve
3100 loop-compile
3126 LOOP
3136 +LOOP
3146 ULOOP
3158 U+LOOP
316A UNLOOP
3178 LEAVE
318A UNTIL
319E AGAIN
31B2 WHILE
31C0 REPEAT
31D6 RECURSE
31E4 EXIT
31F4 DEFER
320C VARIABLE
3218 UDP
3224 USER
3240 :NONAME
325E env:
326E has?
3280 (
328E >IN
329A CHAR
32AC REFILL
3304 RESTORE-INPUT
3342 SAVE-INPUT
3362 SOURCE-ID
3378 >tib
3382 TIB
3392 loadfile
33A2 loadline
33B0 <input
33D6 input>
33F8 ,"
3412 ?stack
3436 huh?
344A dpl
3458 number
34B6 interpreter
34F6 interpret
3512 EVALUATE
353C (clrsrc)
3552 QUIT
3596 SOURCE
35B4 [CHAR]
35C2 str=
35D2 comment?
35F8 [ELSE]
368C [THEN]
3698 [ENDIF]
36A2 [IF]
36B4 defined?
36CA [IFUNDEF]
36DA [IFDEF]
36E0 regs-init
3710 cold-init
3736 'quit
374A abort
376A cycle
378A bootup
