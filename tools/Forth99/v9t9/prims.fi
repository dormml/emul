

: /STRING    ( addr n delta -- addr+delta n-delta )
    >r swap r@ + swap r> -
;

\   Custom:  set a flag in a word
: |!        ( mask addr -- )
    swap over @ OR swap !     
;

\   Custom:  reset a flag in a word
: &!        ( mask addr -- )
    dup >r @  NAND  r> !
;

:: compare     ( addr u addr' u' -- -1/0/1 )
    u u' min 0 do
        addr i + c@
        addr' i + c@
        - ?dup if unloop exit then
    loop
    u u' -  \ length is answer
;

: tolower ( ch -- ch )
   dup [char] a [ [char] z 1+ literal ] within $20 and -
;

:: comparef     ( addr u addr' u' -- -1/0/1 )
    u u' min 0 do
        addr i + c@ tolower
        addr' i + c@ tolower
        - ?dup if unloop exit then
    loop
    u u' -  \ length is answer
;

:: align-to ( val scale -- val' )
    val scale  u/mod  drop scale u*    
;

:   w>b ( w -- lo hi )
    dup $ff and swap 8 urshift  
;

: umax   ( u1 u2 -- u )
    2dup U> if drop else nip then
;
: umin   ( u1 u2 -- u )
    2dup U< if drop else nip then
;
