\   (c) 2010
\
\   Forth-99 ROM

\   Memory layout

$400    dp!

\   boot address
0 ,

\   cold address
0 ,

\   initial dictionary
0 ,

\   initial latest
0 ,

(define-prims)

undef Variable
undef DVariable
undef Value
undef DValue

0 <EXPORT

include sysdefs.fi

include ../v9t9/ram.fi

include syscomp.fi

EXPORT>

include ../v9t9/sysutils.fi

0 <EXPORT

include ../v9t9/video.fi

include ../v9t9/term.fi

include ../v9t9/kbd.fi

include ../v9t9/ints.fi

EXPORT>

include sysprims.fi

include ../v9t9/prims.fi

include ../ans/kernel.fi

include ../ans/blocks.fi

include ../ans/dict.fi

include f99b.fi

include ../ans/compile.fi

include ../ans/interp.fi



\ -------------------------------

0 <EXPORT

: regs-init

    \ set user area first, before setting user vars
    (UP0) (>CONTEXT) [ CTX_UP field, ]
    
    (rp0) rp0 !     
    (sp0) sp0 !
    (pad0) (pad) !  
    (#-pad0) (#pad) !
    (slit-pad0) (spad) !

    sp0 @ sp!
    
    r>      \ remember return address before moving return stack
    RP0 @ (>CONTEXT) [ CTX_RP field, ]
    >r
;

: cold-init
    DP0 @       dp !
    (LATEST) @  >latest !
    
    ." Forth99 (c) 2010" cr
;



:   'quit
    10 base !
    
    begin
        key? if key emit 
        else ints-check
        then
    again
;

:   abort

    regs-init   ints-init   kbd-init
    
    ."  aborted" cr
    
    quit
;


\ -------------------------------

1 <export
:   cycle
    \ hex $1F2E3D4C. d.d 10 demit decimal
    \ 256 0 do i .d 10 demit loop
    begin
        42 demit
        256 0 do
            key? if key else i then
            chfill
            ints-check
            \ 0 0 do loop
        loop
    again
;


: snd ( i -- ) 
    dup  swpb dup  9 crshift  XOR swap  $7 and $40 + c! 
;
: delay 0 do uloop ;

: blast0
0 0 do 
    0 0 do 
        j i xor snd $10 delay 
    loop
loop
;
: blast1
0 0 do 
    0 0 do 
        j i + snd $10 delay 
    loop
loop
;

export>

:   bootup

    regs-init
    
    ints-init
    
    kbd-init
    
    video-init
 
    cold-init

    decimal 
 
    0 blk !
 
    empty-buffers
       
    \ cycle
    quit
;
 

\ -------------------------------------------------

' bootup (BOOT)     !
' abort  (COLD)     !
\ here     DP0        !
$4000    DP0        !
latest   (LATEST)   !

hex
here ." HERE = " u. cr
ramptr @ ." RAMTOP = " u. cr
